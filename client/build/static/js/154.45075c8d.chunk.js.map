{"version":3,"file":"static/js/154.45075c8d.chunk.js","mappings":"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","sources":["pages/Products/Products.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Grid,\r\n  Chip,\r\n  Tooltip,\r\n  TablePagination,\r\n  InputAdornment,\r\n  Divider,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  Avatar,\r\n  Fab,\r\n  Stack,\r\n  LinearProgress,\r\n  FormControlLabel,\r\n  Switch\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Visibility as VisibilityIcon,\r\n  Search as SearchIcon,\r\n  MonetizationOn as SellIcon,\r\n  Inventory as InventoryIcon,\r\n  Phone as PhoneIcon,\r\n  Cable as AccessoriesIcon,\r\n  ShoppingBag as SoldIcon,\r\n  ShoppingCart as ShoppingCartIcon,\r\n  AttachMoney as MoneyIcon,\r\n  Headphones as HeadphonesIcon,\r\n  Devices as DevicesIcon,\r\n  Close as CloseIcon,\r\n  FilterAlt as FilterAltIcon,\r\n  Check as CheckIcon,\r\n  AccessTime as TimeIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  MoneyOff as MoneyOffIcon\r\n} from '@mui/icons-material';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { format } from 'date-fns';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useMediaQuery } from '@mui/material';\r\n\r\n// Product categories\r\nconst categories = ['Phone', 'Accessories', 'Other'];\r\n\r\nexport default function Products() {\r\n  const {\r\n    products,\r\n    loadProducts,\r\n    productsLoading,\r\n    productsLoaded,\r\n    addProduct,\r\n    updateProduct,\r\n    deleteProduct,\r\n    markProductAsSold,\r\n    loading,\r\n    error: contextError,\r\n    loadFinancialSummary,\r\n    loadRevenues\r\n  } = useContext(FinancialContext);\r\n\r\n  const { /* user */ } = useContext(AuthContext);\r\n\r\n  // Dialog state\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openSellDialog, setOpenSellDialog] = useState(false);\r\n  const [dialogMode, setDialogMode] = useState('add'); // 'add' or 'edit'\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState(false);\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    category: 'Phone',\r\n    purchasePrice: '',\r\n    sellingPrice: '',\r\n    quantity: 1,\r\n    purchaseDate: new Date(),\r\n    supplier: '',\r\n    serialNumber: '',\r\n    isAsset: true,\r\n    assetValue: '',\r\n    notes: ''\r\n  });\r\n\r\n  // Sell dialog form state\r\n  const [sellFormData, setSelFormData] = useState({\r\n    sellingPrice: '',\r\n    soldDate: new Date(),\r\n    notes: ''\r\n  });\r\n\r\n  // Table pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  // Search and filter\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [categoryFilter, setCategoryFilter] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all'); // 'all', 'inStock', 'sold'\r\n  const [error, setError] = useState(null);\r\n\r\n  // Add a state for deletion loading\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // Function to refresh data after operations\r\n  const refreshData = async () => {\r\n    try {\r\n      await loadProducts();\r\n      await loadFinancialSummary();\r\n    } catch (err) {\r\n      console.error('Error refreshing data:', err);\r\n    }\r\n  };\r\n\r\n  // Load products on component mount only if not already loaded\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // Only load products if they're not already loaded and not currently loading\r\n      if (!productsLoaded && !productsLoading) {\r\n        try {\r\n          await loadProducts();\r\n        } catch (err) {\r\n          console.error(\"Failed to load products:\", err);\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [loadProducts, productsLoaded, productsLoading]);\r\n\r\n  // Format currency with Malaysian Ringgit\r\n  const formatCurrency = (amount) => {\r\n    if (!amount && amount !== 0) return '-';\r\n    return new Intl.NumberFormat('en-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n\r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '-';\r\n    const date = new Date(dateString);\r\n    return format(date, 'dd MMM yyyy');\r\n  };\r\n\r\n  // Get category icon\r\n  const getCategoryIcon = (category) => {\r\n    switch(category) {\r\n      case 'Phone':\r\n        return <PhoneIcon />;\r\n      case 'Accessories':\r\n        return <HeadphonesIcon />;\r\n      default:\r\n        return <DevicesIcon />;\r\n    }\r\n  };\r\n\r\n  // Get category color\r\n  const getCategoryColor = (category) => {\r\n    const colorMap = {\r\n      'Phone': '#007AFF',      // blue\r\n      'Accessories': '#FF9500', // orange\r\n      'Other': '#8E8E93'       // gray\r\n    };\r\n    \r\n    return colorMap[category] || '#8E8E93';\r\n  };\r\n  \r\n  // Calculate stats\r\n  const totalProducts = products.length;\r\n  const inStockProducts = products.filter(product => product.inStock).length;\r\n  const soldProducts = products.filter(product => !product.inStock).length;\r\n  \r\n  const totalValue = products\r\n    .filter(product => product.inStock)\r\n    .reduce((sum, product) => sum + (product.assetValue || product.purchasePrice), 0);\r\n    \r\n  const totalPotentialProfit = products\r\n    .filter(product => product.inStock && product.sellingPrice)\r\n    .reduce((sum, product) => {\r\n      const profit = product.sellingPrice - product.purchasePrice;\r\n      return sum + (profit * product.quantity);\r\n    }, 0);\r\n    \r\n  const productsByCategory = {};\r\n  categories.forEach(category => {\r\n    const categoryProducts = products.filter(product => product.category === category && product.inStock);\r\n    const count = categoryProducts.length;\r\n    const value = categoryProducts.reduce((sum, product) => sum + (product.assetValue || product.purchasePrice), 0);\r\n    \r\n    productsByCategory[category] = { count, value };\r\n  });\r\n\r\n  // Handle add product click\r\n  const handleAddClick = () => {\r\n    setDialogMode('add');\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      category: 'Phone',\r\n      purchasePrice: '',\r\n      sellingPrice: '',\r\n      quantity: 1,\r\n      purchaseDate: new Date(),\r\n      supplier: '',\r\n      serialNumber: '',\r\n      isAsset: true,\r\n      assetValue: '',\r\n      notes: ''\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n  \r\n  // Handle edit product click\r\n  const handleEditClick = (product) => {\r\n    setDialogMode('edit');\r\n    setSelectedProduct(product);\r\n    setFormData({\r\n      name: product.name,\r\n      description: product.description || '',\r\n      category: product.category,\r\n      purchasePrice: product.purchasePrice,\r\n      sellingPrice: product.sellingPrice || '',\r\n      quantity: product.quantity,\r\n      purchaseDate: new Date(product.purchaseDate),\r\n      supplier: product.supplier || '',\r\n      serialNumber: product.serialNumber || '',\r\n      isAsset: Boolean(product.assetValue),\r\n      assetValue: product.assetValue || '',\r\n      notes: product.notes || ''\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n  \r\n  // Handle sell product click\r\n  const handleSellClick = (product) => {\r\n    setSelectedProduct(product);\r\n    setSelFormData({\r\n      sellingPrice: product.sellingPrice || product.purchasePrice,\r\n      soldDate: new Date(),\r\n      notes: product.notes || ''\r\n    });\r\n    setOpenSellDialog(true);\r\n  };\r\n  \r\n  // Handle view product click\r\n  const handleViewClick = (product) => {\r\n    setSelectedProduct(product);\r\n    setViewDialog(true);\r\n  };\r\n  \r\n  // Handle delete product click\r\n  const handleDeleteClick = (product) => {\r\n    setSelectedProduct(product);\r\n    setDeleteConfirmDialog(true);\r\n  };\r\n  \r\n  // Handle dialog close\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n    setOpenSellDialog(false);\r\n    setViewDialog(false);\r\n    setDeleteConfirmDialog(false);\r\n  };\r\n  \r\n  // Handle input change for form data\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  // Handle input change for sell form data\r\n  const handleSellInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSelFormData({\r\n      ...sellFormData,\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  // Handle form submit\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setError(null); // Clear any previous errors\r\n      \r\n      let result;\r\n      if (dialogMode === 'add') {\r\n        console.log('Adding new product:', formData);\r\n        result = await addProduct(formData);\r\n      } else {\r\n        console.log(`Updating product ${selectedProduct._id}:`, formData);\r\n        result = await updateProduct(selectedProduct._id, formData);\r\n      }\r\n      \r\n      if (result) {\r\n        console.log('Product saved successfully');\r\n        handleDialogClose();\r\n        await refreshData();\r\n      } else {\r\n        // Error already set in context\r\n        console.error(`Save failed with error in context: ${contextError}`);\r\n        if (contextError) {\r\n          setError(contextError);\r\n        } else {\r\n          setError(`Failed to ${dialogMode === 'add' ? 'add' : 'update'} product: Unknown error`);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving product:\", err);\r\n      setError(`Failed to ${dialogMode === 'add' ? 'add' : 'update'} product: ${err.message || 'Unknown error'}`);\r\n    }\r\n  };\r\n  \r\n  // Handle sell product form submit\r\n  const handleSellProduct = async () => {\r\n    try {\r\n      setError(null); // Clear any previous errors\r\n      \r\n      console.log(`Marking product ${selectedProduct._id} as sold:`, sellFormData);\r\n      \r\n      // Ensure all required data is included\r\n      const saleData = {\r\n        sellingPrice: parseFloat(sellFormData.sellingPrice),\r\n        soldDate: sellFormData.soldDate,\r\n        notes: sellFormData.notes || '',\r\n        quantity: selectedProduct.quantity // Selling all available quantity\r\n      };\r\n      \r\n      console.log('About to call markProductAsSold with data:', saleData);\r\n      \r\n      const result = await markProductAsSold(selectedProduct._id, saleData);\r\n      console.log('markProductAsSold result:', result);\r\n      \r\n      if (result) {\r\n        console.log('Product marked as sold successfully');\r\n        // Show a success message\r\n        handleDialogClose();\r\n        \r\n        // Use the single refreshData function instead of multiple separate calls\r\n        console.log('Refreshing data after product sale');\r\n        await refreshData();\r\n      } else {\r\n        // Error already set in context\r\n        console.error(`Operation failed with error in context: ${contextError}`);\r\n        if (contextError) {\r\n          setError(contextError);\r\n        } else {\r\n          setError(\"Failed to mark product as sold: Unknown error\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error marking product as sold:\", err);\r\n      setError(`Failed to mark product as sold: ${err.message || 'Unknown error'}`);\r\n    }\r\n  };\r\n  \r\n  // Handle delete product confirm\r\n  const handleDeleteConfirm = async () => {\r\n    try {\r\n      setIsDeleting(true);\r\n      setError(null); // Clear any previous errors\r\n      \r\n      console.log(`Attempting to delete product with ID: ${selectedProduct._id}`);\r\n      \r\n      // Keep the dialog open during deletion attempt\r\n      const result = await deleteProduct(selectedProduct._id);\r\n      console.log(`Delete product result: ${result}`);\r\n      \r\n      if (result) {\r\n        console.log('Product deleted successfully, closing dialog');\r\n        handleDialogClose();\r\n        // Could add a success toast notification here\r\n      } else {\r\n        // Error was set in the context\r\n        console.error(`Delete product failed: ${contextError || 'No specific error provided'}`);\r\n        \r\n        // Keep dialog open to show error\r\n        if (contextError) {\r\n          setError(contextError);\r\n        } else {\r\n          setError(\"Failed to delete product. Please try again later.\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in handleDeleteConfirm:\", err);\r\n      setError(`Failed to delete product: ${err.message || 'An unexpected error occurred'}`);\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n  \r\n  // Handle page change\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  \r\n  // Handle rows per page change\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Filter products\r\n  const filteredProducts = products.filter(product => {\r\n    const matchesSearch = (\r\n      (product.name && product.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (product.description && product.description.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (product.supplier && product.supplier.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      (product.serialNumber && product.serialNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n    \r\n    const matchesCategory = !categoryFilter || product.category === categoryFilter;\r\n    const matchesStatus = !statusFilter || \r\n      (statusFilter === 'all' && true) || \r\n      (statusFilter === 'inStock' && product.inStock) || \r\n      (statusFilter === 'sold' && !product.inStock);\r\n    \r\n    return matchesSearch && matchesCategory && matchesStatus;\r\n  });\r\n\r\n  // Paginated products\r\n  const paginatedProducts = filteredProducts.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  // Enhanced error display with action\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Alert \r\n          severity=\"error\" \r\n          action={\r\n            <Button color=\"inherit\" size=\"small\" onClick={() => loadProducts()}>\r\n              Retry\r\n            </Button>\r\n          }\r\n        >\r\n          {error}\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Show loading indicator when data is loading\r\n  if (productsLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress size={60} thickness={4} sx={{ mb: 2 }} />\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Loading Products Data...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: isMobile ? 1 : 3 }}>\r\n      {/* Header with Title and Add Button */}\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center', \r\n        mb: 3,\r\n        px: isMobile ? 1 : 0\r\n      }}>\r\n        <Typography \r\n          variant={isMobile ? 'h5' : 'h4'} \r\n          component=\"h1\" \r\n          sx={{ \r\n            fontWeight: 700,\r\n            fontSize: isMobile ? '1.5rem' : '2.125rem',\r\n            background: 'linear-gradient(45deg, #FF9500, #FF2D55)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent'\r\n          }}\r\n        >\r\n          Products\r\n        </Typography>\r\n        \r\n        {!isMobile && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddClick}\r\n            sx={{ \r\n              borderRadius: 3,\r\n              px: 3,\r\n              py: 1,\r\n              boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)',\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            Add Product\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      \r\n      {/* Stats Cards */}\r\n      <Grid container spacing={isMobile ? 2 : 3} sx={{ mb: 3 }}>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                <Box\r\n                  sx={{\r\n                    width: 50,\r\n                    height: 50,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    mr: 2,\r\n                    background: 'linear-gradient(45deg, #007AFF, #007AFFCC)',\r\n                    boxShadow: '0 4px 10px rgba(0, 122, 255, 0.2)'\r\n                  }}\r\n                >\r\n                  <InventoryIcon sx={{ color: 'white', fontSize: 28 }} />\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Inventory Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n                    {formatCurrency(totalValue)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Divider sx={{ my: 2 }} />\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    In Stock\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                    {inStockProducts} items\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Sold\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                    {soldProducts} items\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                <Box\r\n                  sx={{\r\n                    width: 50,\r\n                    height: 50,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    mr: 2,\r\n                    background: 'linear-gradient(45deg, #34C759, #34C759CC)',\r\n                    boxShadow: '0 4px 10px rgba(52, 199, 89, 0.2)'\r\n                  }}\r\n                >\r\n                  <MoneyIcon sx={{ color: 'white', fontSize: 28 }} />\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Potential Profit\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n                    {formatCurrency(totalPotentialProfit)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Divider sx={{ my: 2 }} />\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                    Profit Margin\r\n                  </Typography>\r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={totalValue > 0 ? (totalPotentialProfit / totalValue) * 100 : 0}\r\n                    sx={{ \r\n                      height: 8,\r\n                      borderRadius: 4,\r\n                      backgroundColor: 'rgba(0,0,0,0.04)',\r\n                      '& .MuiLinearProgress-bar': {\r\n                        backgroundColor: '#34C759',\r\n                      }\r\n                    }} \r\n                  />\r\n                  <Typography variant=\"body2\" sx={{ mt: 1, fontWeight: 500 }}>\r\n                    {totalValue > 0 ? `${((totalPotentialProfit / totalValue) * 100).toFixed(1)}%` : '0%'}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={6} lg={3}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                <Box\r\n                  sx={{\r\n                    width: 50,\r\n                    height: 50,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    mr: 2,\r\n                    background: 'linear-gradient(45deg, #FF9500, #FF9500CC)',\r\n                    boxShadow: '0 4px 10px rgba(255, 149, 0, 0.2)'\r\n                  }}\r\n                >\r\n                  <PhoneIcon sx={{ color: 'white', fontSize: 28 }} />\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Phones\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n                    {productsByCategory['Phone']?.count || 0}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5 }}>\r\n                Total Value\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                {formatCurrency(productsByCategory['Phone']?.value || 0)}\r\n              </Typography>\r\n              \r\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Chip \r\n                  label=\"View Phones\" \r\n                  size=\"small\" \r\n                  onClick={() => setCategoryFilter('Phone')}\r\n                  sx={{ \r\n                    fontWeight: 500, \r\n                    borderRadius: 3,\r\n                    bgcolor: 'rgba(255, 149, 0, 0.1)',\r\n                    color: '#FF9500'\r\n                  }} \r\n                />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={6} lg={3}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                <Box\r\n                  sx={{\r\n                    width: 50,\r\n                    height: 50,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    mr: 2,\r\n                    background: 'linear-gradient(45deg, #5856D6, #5856D6CC)',\r\n                    boxShadow: '0 4px 10px rgba(88, 86, 214, 0.2)'\r\n                  }}\r\n                >\r\n                  <HeadphonesIcon sx={{ color: 'white', fontSize: 28 }} />\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Accessories\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n                    {productsByCategory['Accessories']?.count || 0}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5 }}>\r\n                Total Value\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                {formatCurrency(productsByCategory['Accessories']?.value || 0)}\r\n              </Typography>\r\n              \r\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Chip \r\n                  label=\"View Accessories\" \r\n                  size=\"small\" \r\n                  onClick={() => setCategoryFilter('Accessories')}\r\n                  sx={{ \r\n                    fontWeight: 500, \r\n                    borderRadius: 3,\r\n                    bgcolor: 'rgba(88, 86, 214, 0.1)',\r\n                    color: '#5856D6'\r\n                  }} \r\n                />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      {/* Search and Filter Section */}\r\n      <Box sx={{ \r\n        mb: 3, \r\n        display: 'flex', \r\n        flexDirection: isMobile ? 'column' : 'row',\r\n        gap: 2,\r\n        alignItems: isMobile ? 'stretch' : 'center',\r\n        px: isMobile ? 1 : 0\r\n      }}>\r\n        <TextField\r\n          placeholder=\"Search products...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          variant=\"outlined\"\r\n          fullWidth={isMobile}\r\n          sx={{ \r\n            flex: 1,\r\n            '& .MuiOutlinedInput-root': {\r\n              borderRadius: 3,\r\n              backgroundColor: 'rgba(0,0,0,0.02)'\r\n            }\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon sx={{ color: 'text.secondary' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        \r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <FormControl sx={{ minWidth: 140 }}>\r\n            <InputLabel id=\"category-filter-label\">Category</InputLabel>\r\n            <Select\r\n              labelId=\"category-filter-label\"\r\n              id=\"category-filter\"\r\n              value={categoryFilter}\r\n              onChange={(e) => setCategoryFilter(e.target.value)}\r\n              label=\"Category\"\r\n              sx={{ \r\n                borderRadius: 3,\r\n                backgroundColor: 'rgba(0,0,0,0.02)'\r\n              }}\r\n            >\r\n              <MenuItem value=\"\">All</MenuItem>\r\n              {categories.map(category => (\r\n                <MenuItem key={category} value={category}>{category}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <FormControl sx={{ minWidth: 140 }}>\r\n            <InputLabel id=\"status-filter-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"status-filter-label\"\r\n              id=\"status-filter\"\r\n              value={statusFilter}\r\n              onChange={(e) => setStatusFilter(e.target.value)}\r\n              label=\"Status\"\r\n              sx={{ \r\n                borderRadius: 3,\r\n                backgroundColor: 'rgba(0,0,0,0.02)'\r\n              }}\r\n            >\r\n              <MenuItem value=\"all\">All</MenuItem>\r\n              <MenuItem value=\"inStock\">In Stock</MenuItem>\r\n              <MenuItem value=\"sold\">Sold</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Product List */}\r\n      {productsLoading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {paginatedProducts.length > 0 ? (\r\n            <Grid container spacing={isMobile ? 2 : 3}>\r\n              {paginatedProducts.map((product) => (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={product._id}>\r\n                  <Card \r\n                    elevation={0}\r\n                    className=\"ios-shadow\"\r\n                    sx={{ \r\n                      borderRadius: 4,\r\n                      overflow: 'hidden',\r\n                      position: 'relative',\r\n                      height: '100%',\r\n                      '&:hover': {\r\n                        '& .product-actions': {\r\n                          opacity: 1\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box \r\n                      sx={{ \r\n                        height: 8, \r\n                        width: '100%', \r\n                        backgroundColor: product.inStock ? getCategoryColor(product.category) : '#8E8E93' \r\n                      }} \r\n                    />\r\n                    <CardContent>\r\n                      {!product.inStock && (\r\n                        <Chip \r\n                          label=\"Sold\" \r\n                          size=\"small\"\r\n                          color=\"default\"\r\n                          sx={{ \r\n                            position: 'absolute',\r\n                            top: 12,\r\n                            right: 12,\r\n                            fontWeight: 500,\r\n                            backgroundColor: 'rgba(142, 142, 147, 0.2)'\r\n                          }}\r\n                        />\r\n                      )}\r\n                      \r\n                      <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 2 }}>\r\n                        <Avatar\r\n                          sx={{ \r\n                            width: 40, \r\n                            height: 40,\r\n                            bgcolor: `${getCategoryColor(product.category)}20`,\r\n                            color: product.inStock ? getCategoryColor(product.category) : '#8E8E93',\r\n                            mr: 1.5\r\n                          }}\r\n                        >\r\n                          {getCategoryIcon(product.category)}\r\n                        </Avatar>\r\n                        <Box sx={{ flex: 1 }}>\r\n                          <Typography variant=\"h6\" component=\"div\" sx={{ \r\n                            fontWeight: 600, \r\n                            color: product.inStock ? 'text.primary' : 'text.secondary'\r\n                          }}>\r\n                            {product.name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {product.category} • ID: {product.serialNumber || '-'}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                      \r\n                      <Grid container spacing={1} sx={{ mb: 1 }}>\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                            Purchase Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {formatCurrency(product.purchasePrice)}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                            {product.inStock ? 'Selling Price' : 'Sold For'}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ \r\n                            fontWeight: 600,\r\n                            color: product.inStock && product.sellingPrice ? 'secondary.main' : 'text.primary'\r\n                          }}>\r\n                            {formatCurrency(product.inStock ? product.sellingPrice : product.soldPrice)}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      \r\n                      <Divider sx={{ my: 1.5 }} />\r\n                      \r\n                      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <TimeIcon \r\n                            fontSize=\"small\" \r\n                            sx={{ \r\n                              mr: 0.5, \r\n                              color: 'text.secondary',\r\n                              fontSize: '0.875rem',\r\n                              opacity: 0.7\r\n                            }} \r\n                          />\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {formatDate(product.inStock ? product.purchaseDate : product.soldDate)}\r\n                          </Typography>\r\n                        </Box>\r\n                        {product.quantity > 1 && (\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\r\n                            Qty: {product.quantity}\r\n                          </Typography>\r\n                        )}\r\n                      </Box>\r\n                      \r\n                      <Box \r\n                        className=\"product-actions\"\r\n                        sx={{ \r\n                          mt: 2, \r\n                          display: 'flex', \r\n                          justifyContent: 'flex-end',\r\n                          opacity: { xs: 1, sm: 0 },\r\n                          transition: 'opacity 0.2s',\r\n                          gap: 1\r\n                        }}\r\n                      >\r\n                        {product.inStock ? (\r\n                          <>\r\n                            <Tooltip title=\"Mark as Sold\">\r\n                              <IconButton \r\n                                size=\"small\" \r\n                                onClick={() => handleSellClick(product)}\r\n                                sx={{ \r\n                                  backgroundColor: 'rgba(52, 199, 89, 0.1)',\r\n                                  color: '#34C759',\r\n                                  '&:hover': {\r\n                                    backgroundColor: 'rgba(52, 199, 89, 0.2)',\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <ShoppingCartIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Edit\">\r\n                              <IconButton \r\n                                size=\"small\" \r\n                                onClick={() => handleEditClick(product)}\r\n                                sx={{ \r\n                                  backgroundColor: 'rgba(0, 122, 255, 0.1)',\r\n                                  color: '#007AFF',\r\n                                  '&:hover': {\r\n                                    backgroundColor: 'rgba(0, 122, 255, 0.2)',\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <EditIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </>\r\n                        ) : (\r\n                          <Tooltip title=\"View Details\">\r\n                            <IconButton \r\n                              size=\"small\" \r\n                              onClick={() => handleViewClick(product)}\r\n                              sx={{ \r\n                                backgroundColor: 'rgba(142, 142, 147, 0.1)',\r\n                                color: '#8E8E93',\r\n                                '&:hover': {\r\n                                  backgroundColor: 'rgba(142, 142, 147, 0.2)',\r\n                                }\r\n                              }}\r\n                            >\r\n                              <ShoppingBagIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        )}\r\n                        <Tooltip title=\"Delete\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleDeleteClick(product)}\r\n                            sx={{ \r\n                              backgroundColor: 'rgba(255, 59, 48, 0.1)',\r\n                              color: '#FF3B30',\r\n                              '&:hover': {\r\n                                backgroundColor: 'rgba(255, 59, 48, 0.2)',\r\n                              }\r\n                            }}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          ) : (\r\n            <Box \r\n              sx={{ \r\n                p: 3, \r\n                textAlign: 'center', \r\n                borderRadius: 4,\r\n                backgroundColor: 'rgba(0,0,0,0.02)',\r\n                mt: 4\r\n              }}\r\n            >\r\n              <MoneyOffIcon sx={{ fontSize: 48, color: 'text.secondary', opacity: 0.5, mb: 2 }} />\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No products found\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                {searchTerm || categoryFilter || statusFilter !== 'all' ? \r\n                  \"Try adjusting your search or filters\" : \r\n                  \"Add your first product to get started\"}\r\n              </Typography>\r\n              \r\n              {(searchTerm || categoryFilter || statusFilter !== 'all') && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setSearchTerm('');\r\n                    setCategoryFilter('');\r\n                    setStatusFilter('all');\r\n                  }}\r\n                  sx={{ mt: 2, borderRadius: 3 }}\r\n                >\r\n                  Clear Filters\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n      \r\n      {/* Pagination */}\r\n      {paginatedProducts.length > 0 && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4, mb: 2 }}>\r\n          <Button\r\n            disabled={page === 0}\r\n            onClick={() => setPage(page - 1)}\r\n            sx={{ borderRadius: 3, mr: 1 }}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Typography variant=\"body1\" sx={{ mx: 2, display: 'flex', alignItems: 'center' }}>\r\n            Page {page + 1} of {Math.ceil(filteredProducts.length / rowsPerPage)}\r\n          </Typography>\r\n          <Button\r\n            disabled={page >= Math.ceil(filteredProducts.length / rowsPerPage) - 1}\r\n            onClick={() => setPage(page + 1)}\r\n            sx={{ borderRadius: 3, ml: 1 }}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      \r\n      {/* Mobile Fab for Adding Product */}\r\n      {isMobile && (\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          onClick={handleAddClick}\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: 80,\r\n            right: 16,\r\n            boxShadow: '0 4px 14px rgba(0, 122, 255, 0.5)',\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n\r\n      {/* Add/Edit Product Dialog */}\r\n      <Dialog \r\n        open={openDialog} \r\n        onClose={() => {\r\n          // Only allow closing if not currently loading\r\n          if (!loading) {\r\n            handleDialogClose();\r\n            setError(null);\r\n          }\r\n        }}\r\n        maxWidth=\"md\" \r\n        fullWidth\r\n        fullScreen={isMobile}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: isMobile ? 0 : 4,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderBottom: '1px solid rgba(0,0,0,0.05)',\r\n          py: 2,\r\n          px: 3\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n              {dialogMode === 'add' ? 'Add New Product' : 'Edit Product'}\r\n            </Typography>\r\n            <IconButton \r\n              edge=\"end\" \r\n              onClick={() => {\r\n                if (!loading) {\r\n                  handleDialogClose();\r\n                  setError(null);\r\n                }\r\n              }}\r\n              disabled={loading}\r\n              sx={{ \r\n                bgcolor: 'rgba(0,0,0,0.05)',\r\n                '&:hover': {\r\n                  bgcolor: 'rgba(0,0,0,0.1)',\r\n                }\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 2 }}>\r\n          {error && (\r\n            <Alert \r\n              severity=\"error\" \r\n              sx={{ mb: 2, borderRadius: 2 }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  label=\"Product Name\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth required>\r\n                  <InputLabel>Category</InputLabel>\r\n                  <Select\r\n                    name=\"category\"\r\n                    value={formData.category}\r\n                    onChange={handleInputChange}\r\n                    label=\"Category\"\r\n                    sx={{ \r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: 3,\r\n                      }\r\n                    }}\r\n                  >\r\n                    {categories.map(category => (\r\n                      <MenuItem key={category} value={category}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Box \r\n                            sx={{ \r\n                              display: 'flex', \r\n                              mr: 1, \r\n                              color: getCategoryColor(category)\r\n                            }}\r\n                          >\r\n                            {getCategoryIcon(category)}\r\n                          </Box>\r\n                          {category}\r\n                        </Box>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  label=\"Purchase Price\"\r\n                  name=\"purchasePrice\"\r\n                  type=\"number\"\r\n                  value={formData.purchasePrice}\r\n                  onChange={handleInputChange}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                  }}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Expected Selling Price\"\r\n                  name=\"sellingPrice\"\r\n                  type=\"number\"\r\n                  value={formData.sellingPrice}\r\n                  onChange={handleInputChange}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                  }}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  label=\"Quantity\"\r\n                  name=\"quantity\"\r\n                  type=\"number\"\r\n                  value={formData.quantity}\r\n                  onChange={handleInputChange}\r\n                  InputProps={{\r\n                    inputProps: { min: 1 }\r\n                  }}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                  <DatePicker\r\n                    label=\"Purchase Date\"\r\n                    value={formData.purchaseDate}\r\n                    onChange={(date) => setFormData({ ...formData, purchaseDate: date })}\r\n                    renderInput={(params) => \r\n                      <TextField \r\n                        {...params} \r\n                        fullWidth \r\n                        required \r\n                        sx={{ \r\n                          '& .MuiOutlinedInput-root': {\r\n                            borderRadius: 3,\r\n                          }\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Supplier/Vendor\"\r\n                  name=\"supplier\"\r\n                  value={formData.supplier}\r\n                  onChange={handleInputChange}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Serial Number\"\r\n                  name=\"serialNumber\"\r\n                  value={formData.serialNumber}\r\n                  onChange={handleInputChange}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={formData.isAsset}\r\n                      onChange={(e) => setFormData({ ...formData, isAsset: e.target.checked })}\r\n                      name=\"isAsset\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Track as Asset\"\r\n                />\r\n              </Grid>\r\n              {formData.isAsset && (\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Asset Value\"\r\n                    name=\"assetValue\"\r\n                    type=\"number\"\r\n                    value={formData.assetValue}\r\n                    onChange={handleInputChange}\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                    }}\r\n                    sx={{ \r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: 3,\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Description\"\r\n                  name=\"description\"\r\n                  multiline\r\n                  rows={2}\r\n                  value={formData.description}\r\n                  onChange={handleInputChange}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Notes\"\r\n                  name=\"notes\"\r\n                  multiline\r\n                  rows={2}\r\n                  value={formData.notes}\r\n                  onChange={handleInputChange}\r\n                  sx={{ \r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3,\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{ \r\n          px: 3, \r\n          py: 2,\r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderTop: '1px solid rgba(0,0,0,0.05)',\r\n        }}>\r\n          <Button \r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{ \r\n              fontWeight: 500, \r\n              borderRadius: 3,\r\n              px: 3\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleSubmit} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            disabled={loading}\r\n            startIcon={loading ? <CircularProgress size={16} color=\"inherit\" /> : null}\r\n            sx={{ \r\n              fontWeight: 600, \r\n              borderRadius: 3,\r\n              px: 3,\r\n              boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)',\r\n            }}\r\n          >\r\n            {loading ? 'Saving...' : dialogMode === 'add' ? 'Add Product' : 'Update Product'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Sell Product Dialog */}\r\n      <Dialog \r\n        open={openSellDialog} \r\n        onClose={() => {\r\n          // Only allow closing if not currently loading\r\n          if (!loading) {\r\n            handleDialogClose();\r\n            setError(null);\r\n          }\r\n        }}\r\n        maxWidth=\"sm\" \r\n        fullWidth\r\n        fullScreen={isMobile}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: isMobile ? 0 : 4,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderBottom: '1px solid rgba(0,0,0,0.05)',\r\n          py: 2,\r\n          px: 3\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n              Mark Product as Sold\r\n            </Typography>\r\n            <IconButton \r\n              edge=\"end\" \r\n              onClick={() => {\r\n                if (!loading) {\r\n                  handleDialogClose();\r\n                  setError(null);\r\n                }\r\n              }}\r\n              disabled={loading}\r\n              sx={{ \r\n                bgcolor: 'rgba(0,0,0,0.05)',\r\n                '&:hover': {\r\n                  bgcolor: 'rgba(0,0,0,0.1)',\r\n                }\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 2 }}>\r\n          {error && (\r\n            <Alert \r\n              severity=\"error\" \r\n              sx={{ mb: 2, borderRadius: 2 }}\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {selectedProduct && (\r\n            <Box sx={{ mt: 1 }}>\r\n              <Card\r\n                elevation={0}\r\n                sx={{ \r\n                  mb: 3, \r\n                  borderRadius: 3,\r\n                  bgcolor: 'rgba(0, 122, 255, 0.05)',\r\n                  border: '1px solid rgba(0, 122, 255, 0.1)',\r\n                }}\r\n              >\r\n                <CardContent sx={{ px: 2, py: 1.5 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Avatar\r\n                      sx={{ \r\n                        width: 36, \r\n                        height: 36,\r\n                        bgcolor: `${getCategoryColor(selectedProduct.category)}20`,\r\n                        color: getCategoryColor(selectedProduct.category),\r\n                        mr: 1.5\r\n                      }}\r\n                    >\r\n                      {getCategoryIcon(selectedProduct.category)}\r\n                    </Avatar>\r\n                    <Box>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                        {selectedProduct.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Purchase Price: {formatCurrency(selectedProduct.purchasePrice)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n              \r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2, color: 'primary.main' }}>\r\n                Sale Information\r\n              </Typography>\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    label=\"Selling Price\"\r\n                    name=\"sellingPrice\"\r\n                    type=\"number\"\r\n                    value={sellFormData.sellingPrice}\r\n                    onChange={handleSellInputChange}\r\n                    InputProps={{\r\n                      startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                    }}\r\n                    sx={{ \r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: 3,\r\n                      },\r\n                      '& .MuiInputLabel-root': {\r\n                        color: 'success.main',\r\n                        fontWeight: 500\r\n                      },\r\n                      '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: theme.palette.success.main,\r\n                      },\r\n                      '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: theme.palette.success.dark,\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <DatePicker\r\n                      label=\"Sale Date\"\r\n                      value={sellFormData.soldDate}\r\n                      onChange={(date) => setSelFormData({ ...sellFormData, soldDate: date })}\r\n                      renderInput={(params) => \r\n                        <TextField \r\n                          {...params} \r\n                          fullWidth \r\n                          sx={{ \r\n                            '& .MuiOutlinedInput-root': {\r\n                              borderRadius: 3,\r\n                            }\r\n                          }}\r\n                        />\r\n                      }\r\n                    />\r\n                  </LocalizationProvider>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Notes\"\r\n                    name=\"notes\"\r\n                    multiline\r\n                    rows={2}\r\n                    value={sellFormData.notes}\r\n                    onChange={handleSellInputChange}\r\n                    placeholder=\"Add any details about this sale (optional)\"\r\n                    sx={{ \r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: 3,\r\n                      }\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                \r\n                {sellFormData.sellingPrice && (\r\n                  <Grid item xs={12}>\r\n                    <Card\r\n                      elevation={0}\r\n                      sx={{ \r\n                        mt: 1, \r\n                        borderRadius: 3,\r\n                        bgcolor: 'rgba(52, 199, 89, 0.05)',\r\n                        border: '1px solid rgba(52, 199, 89, 0.1)',\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, color: '#34C759', mb: 1 }}>\r\n                          Sale Summary\r\n                        </Typography>\r\n                        \r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              Purchase Price\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                              {formatCurrency(selectedProduct.purchasePrice)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              Selling Price\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                              {formatCurrency(parseFloat(sellFormData.sellingPrice) || 0)}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Divider sx={{ my: 1.5 }} />\r\n                        \r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              Profit\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" sx={{ \r\n                              fontWeight: 600,\r\n                              color: (parseFloat(sellFormData.sellingPrice) || 0) >= selectedProduct.purchasePrice ? '#34C759' : '#FF3B30'\r\n                            }}>\r\n                              {formatCurrency((parseFloat(sellFormData.sellingPrice) || 0) - selectedProduct.purchasePrice)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              Profit Margin\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" sx={{ \r\n                              fontWeight: 600,\r\n                              color: (parseFloat(sellFormData.sellingPrice) || 0) >= selectedProduct.purchasePrice ? '#34C759' : '#FF3B30'\r\n                            }}>\r\n                              {selectedProduct.purchasePrice > 0 ? \r\n                                `${(((parseFloat(sellFormData.sellingPrice) || 0) - selectedProduct.purchasePrice) / selectedProduct.purchasePrice * 100).toFixed(1)}%` : \r\n                                '0%'\r\n                              }\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Divider sx={{ my: 1.5 }} />\r\n                        \r\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                          Revenue Entry\r\n                        </Typography>\r\n                        <Box sx={{ \r\n                          p: 1.5, \r\n                          bgcolor: 'background.paper', \r\n                          borderRadius: 2,\r\n                          border: '1px dashed rgba(52, 199, 89, 0.3)'\r\n                        }}>\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\r\n                            Sale of {selectedProduct.name}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\r\n                            • Category: Sales\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\r\n                            • Amount: {formatCurrency(parseFloat(sellFormData.sellingPrice) || 0)}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\r\n                            • Date: {format(new Date(sellFormData.soldDate), 'dd MMM yyyy')}\r\n                          </Typography>\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ \r\n          px: 3, \r\n          py: 2,\r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderTop: '1px solid rgba(0,0,0,0.05)',\r\n        }}>\r\n          <Button \r\n            onClick={handleDialogClose}\r\n            disabled={loading}\r\n            sx={{ \r\n              fontWeight: 500, \r\n              borderRadius: 3,\r\n              px: 3\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleSellProduct} \r\n            variant=\"contained\" \r\n            color=\"success\"\r\n            disabled={loading || !sellFormData.sellingPrice}\r\n            startIcon={loading ? <CircularProgress size={16} color=\"inherit\" /> : null}\r\n            sx={{ \r\n              fontWeight: 600, \r\n              borderRadius: 3,\r\n              px: 3,\r\n              bgcolor: '#34C759',\r\n              '&:hover': {\r\n                bgcolor: '#2EB351',\r\n              },\r\n              boxShadow: '0 4px 10px rgba(52, 199, 89, 0.3)',\r\n            }}\r\n          >\r\n            {loading ? 'Processing...' : 'Complete Sale'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* View Product Dialog */}\r\n      <Dialog \r\n        open={viewDialog} \r\n        onClose={handleDialogClose} \r\n        maxWidth=\"md\" \r\n        fullWidth\r\n        fullScreen={isMobile}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: isMobile ? 0 : 4,\r\n            overflow: 'hidden'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderBottom: '1px solid rgba(0,0,0,0.05)',\r\n          py: 2,\r\n          px: 3\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n              Product Details\r\n            </Typography>\r\n            <IconButton \r\n              edge=\"end\" \r\n              onClick={handleDialogClose}\r\n              sx={{ \r\n                bgcolor: 'rgba(0,0,0,0.05)',\r\n                '&:hover': {\r\n                  bgcolor: 'rgba(0,0,0,0.1)',\r\n                }\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ p: isMobile ? 2 : 3 }}>\r\n          {selectedProduct && (\r\n            <Box sx={{ mt: 1 }}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                  <Card \r\n                    elevation={0}\r\n                    className=\"ios-shadow\"\r\n                    sx={{ \r\n                      borderRadius: 4,\r\n                      overflow: 'hidden',\r\n                      position: 'relative',\r\n                    }}\r\n                  >\r\n                    <Box \r\n                      sx={{ \r\n                        height: 8, \r\n                        width: '100%', \r\n                        backgroundColor: selectedProduct.inStock ? getCategoryColor(selectedProduct.category) : '#8E8E93' \r\n                      }} \r\n                    />\r\n                    <CardContent>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n                        <Avatar\r\n                          sx={{ \r\n                            width: 56, \r\n                            height: 56,\r\n                            bgcolor: `${getCategoryColor(selectedProduct.category)}20`,\r\n                            color: selectedProduct.inStock ? getCategoryColor(selectedProduct.category) : '#8E8E93',\r\n                            mr: 2\r\n                          }}\r\n                        >\r\n                          {getCategoryIcon(selectedProduct.category)}\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n                            {selectedProduct.name}\r\n                          </Typography>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\r\n                            <Chip \r\n                              label={selectedProduct.category}\r\n                              size=\"small\"\r\n                              sx={{\r\n                                mr: 1,\r\n                                bgcolor: `${getCategoryColor(selectedProduct.category)}20`,\r\n                                color: getCategoryColor(selectedProduct.category),\r\n                                fontWeight: 500,\r\n                                borderRadius: 3,\r\n                              }}\r\n                            />\r\n                            <Chip \r\n                              label={selectedProduct.inStock ? 'In Stock' : 'Sold'}\r\n                              size=\"small\"\r\n                              sx={{\r\n                                bgcolor: selectedProduct.inStock ? 'rgba(52, 199, 89, 0.1)' : 'rgba(142, 142, 147, 0.1)',\r\n                                color: selectedProduct.inStock ? '#34C759' : '#8E8E93',\r\n                                fontWeight: 500,\r\n                                borderRadius: 3,\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                      \r\n                      {selectedProduct.description && (\r\n                        <Box sx={{ mb: 3 }}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                            Description\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedProduct.description}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                      \r\n                      <Divider sx={{ my: 2 }} />\r\n                      \r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                        Financial Details\r\n                      </Typography>\r\n                      \r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6} md={3}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Purchase Price\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {formatCurrency(selectedProduct.purchasePrice)}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {selectedProduct.inStock ? 'Selling Price' : 'Sold For'}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {formatCurrency(selectedProduct.inStock ? selectedProduct.sellingPrice : selectedProduct.soldPrice)}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {selectedProduct.inStock ? 'Current Value' : 'Final Value'}\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {formatCurrency(selectedProduct.assetValue || selectedProduct.purchasePrice)}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={3}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Quantity\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {selectedProduct.quantity}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      \r\n                      <Divider sx={{ my: 2 }} />\r\n                      \r\n                      <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                        Additional Details\r\n                      </Typography>\r\n                      \r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6} md={4}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Purchase Date\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {formatDate(selectedProduct.purchaseDate)}\r\n                          </Typography>\r\n                        </Grid>\r\n                        \r\n                        {!selectedProduct.inStock && (\r\n                          <Grid item xs={12} sm={6} md={4}>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              Sold Date\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                              {formatDate(selectedProduct.soldDate)}\r\n                            </Typography>\r\n                          </Grid>\r\n                        )}\r\n                        \r\n                        <Grid item xs={12} sm={6} md={4}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Supplier\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {selectedProduct.supplier || '-'}\r\n                          </Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} sm={6} md={4}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Serial Number\r\n                          </Typography>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {selectedProduct.serialNumber || '-'}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      \r\n                      {selectedProduct.notes && (\r\n                        <>\r\n                          <Divider sx={{ my: 2 }} />\r\n                          <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 1 }}>\r\n                            Notes\r\n                          </Typography>\r\n                          <Typography variant=\"body1\">\r\n                            {selectedProduct.notes}\r\n                          </Typography>\r\n                        </>\r\n                      )}\r\n                      \r\n                      {selectedProduct.inStock && (\r\n                        <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<ShoppingCartIcon />}\r\n                            onClick={() => {\r\n                              handleDialogClose();\r\n                              handleSellClick(selectedProduct);\r\n                            }}\r\n                            sx={{ \r\n                              borderRadius: 3,\r\n                              mr: 1,\r\n                              borderColor: '#34C759',\r\n                              color: '#34C759',\r\n                              '&:hover': {\r\n                                borderColor: '#2EB351',\r\n                                backgroundColor: 'rgba(52, 199, 89, 0.1)',\r\n                              }\r\n                            }}\r\n                          >\r\n                            Mark as Sold\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<EditIcon />}\r\n                            onClick={() => {\r\n                              handleDialogClose();\r\n                              handleEditClick(selectedProduct);\r\n                            }}\r\n                            sx={{ \r\n                              borderRadius: 3,\r\n                            }}\r\n                          >\r\n                            Edit Product\r\n                          </Button>\r\n                        </Box>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ \r\n          px: 3, \r\n          py: 2,\r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderTop: '1px solid rgba(0,0,0,0.05)',\r\n        }}>\r\n          <Button \r\n            onClick={handleDialogClose}\r\n            sx={{ \r\n              fontWeight: 500, \r\n              borderRadius: 3,\r\n              px: 3\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={deleteConfirmDialog}\r\n        onClose={() => {\r\n          // Only allow closing if not currently loading\r\n          if (!loading && !isDeleting) {\r\n            handleDialogClose();\r\n            setError(null);\r\n          }\r\n        }}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 4,\r\n            overflow: 'hidden',\r\n            maxWidth: '400px'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ pt: 3, px: 3 }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n            Delete Product\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ px: 3, pt: 1 }}>\r\n          {error && (\r\n            <Alert \r\n              severity=\"error\" \r\n              sx={{ \r\n                mb: 2, \r\n                borderRadius: 2,\r\n                '& .MuiAlert-message': {\r\n                  fontWeight: 500\r\n                }\r\n              }}\r\n              action={\r\n                <Button \r\n                  color=\"inherit\" \r\n                  size=\"small\"\r\n                  onClick={() => setError(null)}\r\n                >\r\n                  Dismiss\r\n                </Button>\r\n              }\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n            Are you sure you want to delete this product? This action cannot be undone.\r\n          </Typography>\r\n          \r\n          {selectedProduct && (\r\n            <Card\r\n              elevation={0}\r\n              sx={{ \r\n                mt: 2, \r\n                borderRadius: 3,\r\n                bgcolor: 'rgba(255, 59, 48, 0.05)',\r\n                border: '1px solid rgba(255, 59, 48, 0.1)',\r\n              }}\r\n            >\r\n              <CardContent sx={{ px: 2, py: 1.5 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Avatar\r\n                    sx={{ \r\n                      width: 36, \r\n                      height: 36,\r\n                      bgcolor: `${getCategoryColor(selectedProduct.category)}20`,\r\n                      color: getCategoryColor(selectedProduct.category),\r\n                      mr: 1.5\r\n                    }}\r\n                  >\r\n                    {getCategoryIcon(selectedProduct.category)}\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                      {selectedProduct.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {formatCurrency(selectedProduct.assetValue || selectedProduct.purchasePrice)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ \r\n          px: 3, \r\n          py: 2,\r\n          backgroundColor: 'rgba(0,0,0,0.02)', \r\n          borderTop: '1px solid rgba(0,0,0,0.05)'\r\n        }}>\r\n          <Button \r\n            onClick={handleDialogClose}\r\n            disabled={loading || isDeleting}\r\n            sx={{ \r\n              fontWeight: 500, \r\n              borderRadius: 3,\r\n              px: 3\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleDeleteConfirm} \r\n            color=\"error\" \r\n            variant=\"contained\"\r\n            disabled={loading || isDeleting}\r\n            startIcon={loading || isDeleting ? <CircularProgress size={16} color=\"inherit\" /> : null}\r\n            sx={{ \r\n              fontWeight: 600, \r\n              borderRadius: 3,\r\n              px: 3,\r\n              bgcolor: '#FF3B30',\r\n              '&:hover': {\r\n                bgcolor: '#E6352C',\r\n              },\r\n              boxShadow: '0 4px 10px rgba(255, 59, 48, 0.3)',\r\n            }}\r\n          >\r\n            {loading || isDeleting ? 'Deleting...' : 'Delete'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n} "],"names":["categories","Products","_productsByCategory$P","_productsByCategory$P2","_productsByCategory$A","_productsByCategory$A2","products","loadProducts","productsLoading","productsLoaded","addProduct","updateProduct","deleteProduct","markProductAsSold","loading","error","contextError","loadFinancialSummary","loadRevenues","useContext","FinancialContext","AuthContext","openDialog","setOpenDialog","useState","openSellDialog","setOpenSellDialog","dialogMode","setDialogMode","selectedProduct","setSelectedProduct","viewDialog","setViewDialog","deleteConfirmDialog","setDeleteConfirmDialog","formData","setFormData","name","description","category","purchasePrice","sellingPrice","quantity","purchaseDate","Date","supplier","serialNumber","isAsset","assetValue","notes","sellFormData","setSelFormData","soldDate","page","setPage","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","statusFilter","setStatusFilter","setError","isDeleting","setIsDeleting","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","refreshData","async","err","console","useEffect","fetchData","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","dateString","date","getCategoryIcon","_jsx","PhoneIcon","HeadphonesIcon","DevicesIcon","getCategoryColor","inStockProducts","length","filter","product","inStock","soldProducts","totalValue","reduce","sum","totalPotentialProfit","productsByCategory","forEach","categoryProducts","count","value","handleAddClick","handleEditClick","Boolean","handleSellClick","handleDialogClose","handleInputChange","e","target","handleSellInputChange","filteredProducts","matchesSearch","toLowerCase","includes","matchesCategory","matchesStatus","paginatedProducts","slice","Box","sx","p","children","Alert","severity","action","Button","color","size","onClick","_jsxs","display","flexDirection","justifyContent","alignItems","height","CircularProgress","thickness","mb","Typography","variant","px","component","fontWeight","fontSize","background","WebkitBackgroundClip","WebkitTextFillColor","startIcon","AddIcon","borderRadius","py","boxShadow","Grid","container","spacing","item","xs","md","lg","Card","elevation","className","overflow","backdropFilter","CardContent","width","mr","InventoryIcon","Divider","my","MoneyIcon","LinearProgress","backgroundColor","mt","toFixed","sm","Chip","label","bgcolor","gap","TextField","placeholder","onChange","fullWidth","flex","InputProps","startAdornment","InputAdornment","position","SearchIcon","FormControl","minWidth","InputLabel","id","Select","labelId","MenuItem","map","_Fragment","opacity","top","right","Avatar","soldPrice","TimeIcon","transition","Tooltip","title","IconButton","ShoppingCartIcon","EditIcon","handleViewClick","ShoppingBagIcon","handleDeleteClick","DeleteIcon","_id","textAlign","MoneyOffIcon","disabled","mx","Math","ceil","ml","Fab","bottom","Dialog","open","onClose","maxWidth","fullScreen","PaperProps","DialogTitle","borderBottom","edge","CloseIcon","DialogContent","pt","noValidate","required","type","inputProps","min","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","FormControlLabel","control","Switch","checked","multiline","rows","DialogActions","borderTop","result","log","message","border","borderColor","palette","success","main","dark","parseFloat","saleData","gutterBottom"],"sourceRoot":""}