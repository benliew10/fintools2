{"version":3,"file":"static/js/640.0d4bdbe1.chunk.js","mappings":"+4BAiFA,MAAMA,GAAaC,EAAAA,YAAiB,SAAoBC,EAAOC,GAC7D,OAAOC,EAAAA,GAAAA,KAACC,EAAAA,EAAK,CAACC,UAAU,KAAKH,IAAKA,KAASD,GAC7C,IAEe,SAASK,KACtB,MAAM,SACJC,EAAQ,QACRC,EAAO,MACPC,EAAK,aACLC,EAAY,WACZC,GAAU,cACVC,GAAa,cACbC,GAAa,yBACbC,GAAwB,eACxBC,GAAc,gBACdC,KACEC,EAAAA,EAAAA,YAAWC,GAAAA,IAET,KAAEC,KAASF,EAAAA,EAAAA,YAAWG,GAAAA,GACtBC,IAAQC,EAAAA,EAAAA,KACRC,IAAWC,EAAAA,EAAAA,GAAcH,GAAMI,YAAYC,KAAK,QAG/CC,GAAYC,KAAiBC,EAAAA,EAAAA,WAAS,IACtCC,GAAYC,KAAiBF,EAAAA,EAAAA,UAAS,QACtCG,GAAiBC,KAAsBJ,EAAAA,EAAAA,UAAS,OAChDK,GAAYC,KAAiBN,EAAAA,EAAAA,WAAS,IACtCO,GAAqBC,KAA0BR,EAAAA,EAAAA,WAAS,IACxDS,GAAkBC,KAAuBV,EAAAA,EAAAA,WAAS,IAGlDW,GAAUC,KAAeZ,EAAAA,EAAAA,UAAS,CACvCa,YAAa,GACbC,OAAQ,GACRC,SAAU,GACVC,KAAM,IAAIC,KACVC,MAAO,GACPC,SAAS,KAIJC,GAAMC,KAAWrB,EAAAA,EAAAA,UAAS,IAC1BsB,GAAaC,KAAkBvB,EAAAA,EAAAA,UAASN,GAAW,EAAI,KAGvD8B,GAAYC,KAAiBzB,EAAAA,EAAAA,UAAS,KACtC0B,GAAgBC,KAAqB3B,EAAAA,EAAAA,UAAS,KAGrD4B,EAAAA,EAAAA,YAAU,KACUC,WAChB,IAAK3C,KAAmBC,GACtB,UACQN,GACR,CAAE,MAAOD,GACPkD,QAAQlD,MAAM,0BAA2BA,EAC3C,CACF,EAGFmD,EAAW,GACV,CAAClD,EAAcK,GAAgBC,MAGlCyC,EAAAA,EAAAA,YAAU,KACRL,GAAe7B,GAAW,EAAI,GAAG,GAChC,CAACA,KAGJ,MAAMsC,GAAiBA,KACrB9B,GAAc,OACdU,GAAY,CACVC,YAAa,GACbC,OAAQ,GACRC,SAAU,GACVC,KAAM,IAAIC,KACVC,MAAO,GACPC,SAAS,IAEXpB,IAAc,EAAK,EAIfkC,GAAmBC,IACvBhC,GAAc,QACdE,GAAmB8B,GACnBtB,GAAY,CACVC,YAAaqB,EAAQrB,YACrBC,OAAQoB,EAAQpB,OAChBC,SAAUmB,EAAQnB,SAClBC,KAAM,IAAIC,KAAKiB,EAAQlB,MACvBE,MAAOgB,EAAQhB,OAAS,GACxBC,QAASe,EAAQf,UAAW,IAE9BpB,IAAc,EAAK,EAIfoC,GAAoBA,KACxBpC,IAAc,GACdO,IAAc,GACdE,IAAuB,GACvBE,IAAoB,EAAM,EAItB0B,GAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B5B,IAAY6B,IAAS,IAChBA,EACH,CAACH,GAAOC,KACP,EAqBCG,GAAkB5B,GACf,IAAI6B,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IACtBC,OAAOlC,GAINmC,GAAmBlC,IACvB,OAAOA,GACL,IAAK,QAAS,OAAOzC,EAAAA,GAAAA,KAAC4E,EAAAA,EAAS,IAC/B,IAAK,SAAU,OAAO5E,EAAAA,GAAAA,KAAC6E,EAAAA,EAAQ,IAC/B,IAAK,SAAU,OAAO7E,EAAAA,GAAAA,KAAC8E,EAAAA,EAAU,IACjC,IAAK,cAAe,OAAO9E,EAAAA,GAAAA,KAAC+E,EAAAA,EAAW,IACvC,IAAK,YAAa,OAAO/E,EAAAA,GAAAA,KAACgF,EAAAA,EAAY,IACtC,IAAK,YAAa,OAAOhF,EAAAA,GAAAA,KAACiF,EAAAA,EAAiB,IAC3C,IAAK,UAAW,OAAOjF,EAAAA,GAAAA,KAACkF,EAAAA,EAAiB,IACzC,IAAK,QAAS,OAAOlF,EAAAA,GAAAA,KAACmF,EAAAA,EAAgB,IACtC,IAAK,gBAAiB,OAAOnF,EAAAA,GAAAA,KAACoF,EAAAA,EAAc,IAC5C,QAAS,OAAOpF,EAAAA,GAAAA,KAACqF,GAAAA,EAAY,IAC/B,EAIIC,GAAoB7C,IACxB,OAAOA,GACL,IAAK,QAOL,IAAK,QAAS,MAAO,UANrB,IAAK,SAAU,MAAO,QACtB,IAAK,SAAU,MAAO,UACtB,IAAK,cAKL,IAAK,gBAAiB,MAAO,OAJ7B,IAAK,YAAa,MAAO,UACzB,IAAK,YAAa,MAAO,YAIzB,QAAS,MAAO,UAClB,EASI8C,GAAwB9C,GACrB,CAAC,QAAS,eAAe+C,SAAS/C,GAkFrCgD,GAAmB7B,IACvB9B,GAAmB8B,GACnB5B,IAAc,EAAK,EAIf0D,GAAqB9B,IACzB9B,GAAmB8B,GACnB1B,IAAuB,EAAK,EA2CxByD,GAAmBvF,EAASwF,QAAOhC,GAErCA,EAAQrB,YAAYsD,cAAcL,SAAStC,GAAW2C,iBAClC,KAAnBzC,IAAyBQ,EAAQnB,WAAaW,MAK7C0C,GAAoBH,GAAiBI,MACzCjD,GAAOE,GACPF,GAAOE,GAAcA,IAIjBgD,GAAcC,IAClB,IACE,OAAOvB,EAAAA,GAAAA,GAAO,IAAI/B,KAAKsD,GAAa,cACtC,CAAE,MAAO3F,GACP,MAAO,cACT,IAII,eAAE4F,IApJsBC,MAC5B,MAAMC,EAAiB,CAAC,EAClBF,EAAiB,CAAC,EAWxB,OATA9F,EAASiG,SAAQzC,IACVwC,EAAexC,EAAQnB,YAC1B2D,EAAexC,EAAQnB,UAAY,EACnCyD,EAAetC,EAAQnB,UAAY,GAErC2D,EAAexC,EAAQnB,YACvByD,EAAetC,EAAQnB,WAAamB,EAAQpB,MAAM,IAG7C,CAAE4D,iBAAgBF,iBAAgB,EAuIhBC,GACrBG,GAxJGlG,EAASmG,QAAO,CAACC,EAAK5C,IAAY4C,EAAM5C,EAAQpB,QAAQ,GA2J3DiE,GAAoB,CACxB,QACA,SACA,SACA,cACA,YACA,YACA,UACA,QACA,gBACA,SAIF,OAAI5F,IAEA6F,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,QAASC,SAAA,EACpHlH,EAAAA,GAAAA,KAACmH,EAAAA,EAAgB,CAACC,KAAM,GAAIC,UAAW,EAAGT,GAAI,CAAEU,GAAI,MACpDtH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,iBAAgBP,SAAC,gCAQlD5G,GAEAN,EAAAA,GAAAA,KAAC0H,EAAAA,EAAS,CAACd,GAAI,CAAEe,GAAI,GAAIT,UACvBlH,EAAAA,GAAAA,KAAC4H,EAAAA,EAAK,CACJC,SAAS,QACTL,QAAQ,SACRM,QACE9H,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLN,MAAM,UACNL,KAAK,QACLY,QAASzH,EACT0H,WAAWjI,EAAAA,GAAAA,KAACkI,GAAAA,EAAW,IAAIhB,SAC5B,UAIHN,GAAI,CACFuB,aAAc,EACdC,UAAW,qCACXlB,SAED5G,OAOPN,EAAAA,GAAAA,KAACqI,GAAAA,EAAoB,CAACC,YAAaC,GAAAA,EAAerB,UAChDR,EAAAA,GAAAA,MAACgB,EAAAA,EAAS,CAACc,eAAgBpH,GAAUwF,GAAI,CAAE6B,GAAIrH,GAAW,EAAI,GAAI8F,SAAA,EAEhER,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACP8B,GAAItH,GAAW,EAAI,EACnBqH,GAAI,EACJE,GAAIvH,GAAW,EAAI,EACnBwH,WAAmC,SAAvB1H,GAAM2H,QAAQC,KACtB,2BAA2B5H,GAAM2H,QAAQvI,MAAMyI,SAAS7H,GAAM2H,QAAQG,QAAQD,QAC9E,2BAA2B7H,GAAM2H,QAAQvI,MAAM2I,SAAS/H,GAAM2H,QAAQG,QAAQC,QAClFd,aAAc/G,GAAW,gBAAkB,gBAC3CkG,GAAI,EACJG,MAAO,QACPW,UAAW,8BACXlB,SAAA,EACAR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,eAAgB,gBAAiBC,WAAY,SAAUM,GAAIlG,GAAW,EAAI,GAAI8F,SAAA,EACxGlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CACTC,QAASpG,GAAW,KAAO,KAC3BwF,GAAI,CACFsC,WAAY,KACZhC,SACH,cAGC9F,KACApB,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRS,WAAWjI,EAAAA,GAAAA,KAACmJ,GAAAA,EAAO,IACnBnB,QAAStE,GACTkD,GAAI,CACFuB,aAAc,EACdQ,GAAI,EACJhB,GAAI,EACJyB,QAAS,QACT3B,MAAOvG,GAAM2H,QAAQvI,MAAM2I,KAC3B,UAAW,CACTG,QAAS,yBAEXhB,UAAW,6BACXlB,SACH,oBAOH9F,KACAsF,EAAAA,GAAAA,MAAC2C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,GAAI,CAAE4C,GAAI,GAAItC,SAAA,EACxClH,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEzC,UACvBR,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACH3B,aAAc,EACdiB,QAAS,wBACTvC,QAAS,OACTG,WAAY,SACZ+C,eAAgB,aAChB3B,UAAW,6BACXlB,SAAA,EAEFlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CAACpD,GAAI,CAAEwC,QAASlI,GAAM2H,QAAQvI,MAAM2I,KAAMgB,GAAI,GAAI/C,SACtDvC,GAAgB,aAEnB+B,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAAAO,SAAA,EACFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBP,SAAC,oBACnDlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,aAAab,GAAI,CAAEsC,WAAY,QAAShC,SACpE9C,GAAekC,eAMxBtG,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEzC,UACvBR,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACH3B,aAAc,EACdiB,QAAS,wBACTvC,QAAS,OACTG,WAAY,SACZ+C,eAAgB,aAChB3B,UAAW,6BACXlB,SAAA,EAEFlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CAACpD,GAAI,CAAEwC,QAASlI,GAAM2H,QAAQG,QAAQC,KAAMgB,GAAI,GAAI/C,SACxDvC,GAAgB,aAEnB+B,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAAAO,SAAA,EACFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBP,SAAC,gBACnDlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEsC,WAAY,QAAShC,SACjD9C,GAAehE,EACbwF,QAAO7B,GAAK,IAAIpB,KAAKoB,EAAErB,MAAMwH,cAAe,IAAIvH,MAAOuH,aACvD3D,QAAO,CAACC,EAAKzC,IAAMyC,EAAMzC,EAAEvB,QAAQ,eAO9CxC,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEzC,UACvBR,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACH3B,aAAc,EACdiB,QAAS,wBACTvC,QAAS,OACTC,cAAe,SACfE,WAAY,aACZ+C,eAAgB,aAChB3B,UAAW,6BACXlB,SAAA,EAEFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBb,GAAI,CAAEU,GAAI,GAAIJ,SAAC,iBACjEiD,OAAOC,QAAQlE,IAAgBmE,OAAS,EACvCF,OAAOC,QAAQlE,IACZoE,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KACxBxE,MAAM,EAAG,GACT0E,KAAIC,IAAA,IAAEjI,EAAUD,GAAOkI,EAAA,OACtBhE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAAgBC,GAAI,CAAEC,QAAS,OAAQG,WAAY,SAAU2D,MAAO,QAASzD,SAAA,EAC/ElH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHC,KAAMlG,GAAgBlC,GACtBqI,MAAOrI,EACPgF,MAAOnC,GAAiB7C,GACxBmE,GAAI,CAAEqD,GAAI,MAEZjK,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEsC,WAAY,OAAQ6B,GAAI,QAAS7D,SAChE9C,GAAe5B,OARVC,EAUJ,KAGVzC,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAON,SAAC,+BASvC9F,KACCpB,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAE+B,GAAI,EAAGrB,GAAI,GAAIJ,UACxBlH,EAAAA,GAAAA,KAACgL,EAAAA,EAAI,CACHnB,UAAW,EACXjD,GAAI,CACFuB,aAAc,EACd8C,SAAU,SACV7C,UAAW,+BACXlB,UAEFR,EAAAA,GAAAA,MAACwE,EAAAA,EAAW,CAACtE,GAAI,CAAEkD,EAAG,GAAI5C,SAAA,EACxBR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,eAAgB,gBAAiBC,WAAY,UAAWE,SAAA,EAClFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBP,SAAC,oBACnDlH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAO,GAAG1K,EAASiK,eACnBjD,KAAK,QACLR,GAAI,CACFK,OAAQ,GACR,mBAAoB,CAAE0B,GAAI,EAAGhB,GAAI,GACjCuB,WAAY,IACZE,QAAS,0BAIfpJ,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEsC,WAAY,IAAKzB,MAAO,aAAc0D,GAAI,GAAIjE,SAC1E9C,GAAekC,OAGlBtG,EAAAA,GAAAA,KAACoL,EAAAA,EAAO,CAACxE,GAAI,CAAEuE,GAAI,OAElBhB,OAAOC,QAAQlE,IAAgBmE,OAAS,GACvCrK,EAAAA,GAAAA,KAACqL,EAAAA,EAAK,CAAC9B,QAAS,EAAErC,SACfiD,OAAOC,QAAQlE,IACboE,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KACxBxE,MAAM,EAAG,GACT0E,KAAIa,IAAA,IAAE7I,EAAUD,GAAO8I,EAAA,OACtB5E,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAAgBC,GAAI,CAAEC,QAAS,OAAQG,WAAY,SAAUD,eAAgB,iBAAkBG,SAAA,EACjGR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,UAAWE,SAAA,EACjDlH,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CACFC,GAAI,CACFuB,aAAc,MACd2B,EAAG,GACHG,GAAI,EACJb,QAAS,GAAG9D,GAAiB7C,WAC7BgF,MAAO,GAAGnC,GAAiB7C,UAC3BoE,QAAS,QACTK,SAEDvC,GAAgBlC,MAEnBzC,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAON,SAAEzE,QAE/BzC,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEsC,WAAY,KAAMhC,SACjD9C,GAAe5B,OAjBVC,EAmBJ,OAIZzC,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBb,GAAI,CAAE2E,UAAW,SAAU5D,GAAI,GAAIT,SAAC,qCAUjGlH,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEU,GAAI,EAAGqB,GAAIvH,GAAW,EAAI,GAAI8F,UACvCR,EAAAA,GAAAA,MAAC2C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGvC,WAAW,SAAQE,SAAA,EAC7ClH,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAI8B,GAAI,EAAG7B,GAAI,EAAEzC,UAC9BlH,EAAAA,GAAAA,KAACyL,EAAAA,EAAS,CACRC,WAAS,EACTC,YAAY,kBACZnE,QAAQ,WACRvD,MAAOf,GACP0I,SAAW7H,GAAMZ,GAAcY,EAAEG,OAAOD,OACxC4H,WAAY,CACVC,gBACE9L,EAAAA,GAAAA,KAAC+L,EAAAA,EAAc,CAACC,SAAS,QAAO9E,UAC9BlH,EAAAA,GAAAA,KAACiM,GAAAA,EAAU,MAGfrF,GAAI,CACFuB,aAAc,EACd+D,gBAAiB,QACjB,aAAc,CACZC,YAAa,uBAEf/D,UAAW,uCAMjBhH,KACApB,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAI8B,GAAI,EAAG7B,GAAI,EAAEzC,UAC9BR,EAAAA,GAAAA,MAAC0F,EAAAA,EAAW,CAACV,WAAS,EAAClE,QAAQ,WAAUN,SAAA,EACvClH,EAAAA,GAAAA,KAACqM,EAAAA,EAAU,CAAAnF,SAAC,wBACZR,EAAAA,GAAAA,MAAC4F,EAAAA,EAAM,CACLrI,MAAOb,GACPwI,SAAW7H,GAAMV,GAAkBU,EAAEG,OAAOD,OAC5C6G,MAAM,qBACNlE,GAAI,CACFuB,aAAc,EACd+D,gBAAiB,QACjB9D,UAAW,iCAEb0D,eACE1I,IACEpD,EAAAA,GAAAA,KAAC+L,EAAAA,EAAc,CAACC,SAAS,QAAQpF,GAAI,CAAEmE,GAAI,GAAI7D,SAC5CvC,GAAgBvB,MAEjB,KACL8D,SAAA,EAEDlH,EAAAA,GAAAA,KAACuM,EAAAA,EAAQ,CAACtI,MAAM,GAAEiD,SAAC,mBAClBT,GAAkBgE,KAAIhI,IACrBzC,EAAAA,GAAAA,KAACuM,EAAAA,EAAQ,CAAgBtI,MAAOxB,EAASyE,UACvCR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,UAAWE,SAAA,EACjDlH,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEqD,GAAI,EAAGxC,MAAO,GAAGnC,GAAiB7C,UAAkBoE,QAAS,QAASK,SAC9EvC,GAAgBlC,KAElBA,MALUA,cAczBzC,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAI8B,GAAI,GAAI7B,GAAI,EAAG/C,GAAI,CAAEC,QAAS,OAAQE,eAAgB,CAAE2C,GAAI,WAAYC,GAAI,aAAezC,UAC5GlH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRC,MAAM,UACNQ,WAAWjI,EAAAA,GAAAA,KAACmJ,GAAAA,EAAO,IACnBnB,QAAStE,GACTgI,UAAWtK,GACXgG,KAAMhG,GAAW,QAAU,SAC3BwF,GAAI,CACFuB,aAAc,EACdR,GAAIvG,GAAW,IAAM,IACrBgH,UAAW,qCACXlB,SACH,uBAQN9F,KACCpB,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAE+B,GAAI,EAAGrB,GAAI,EAAG2D,SAAU,QAAS/D,UAC1CR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQ2F,IAAK,EAAG/D,GAAI,IAAMvB,SAAA,EAC5ClH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAM,MACNrD,MAA0B,KAAnBrE,GAAwB,UAAY,UAC3C4E,QAASA,IAAM3E,GAAkB,IACjCuD,GAAI,CAAEuB,aAAc,KAErB1B,GAAkBgE,KAAIhI,IACrBzC,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CAEHE,MAAOrI,EACPoI,KAAMlG,GAAgBlC,GACtBgF,MAAOrE,KAAmBX,EAAW6C,GAAiB7C,GAAY,UAClE+E,QAASpE,KAAmBX,EAAW,SAAW,WAClDuF,QAASA,IAAM3E,GAAkBD,KAAmBX,EAAW,GAAKA,GACpEmE,GAAI,CAAEuB,aAAc,IANf1F,UAcdrB,KACCpB,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEoF,SAAU,QAASS,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,IAAKzF,UAChElH,EAAAA,GAAAA,KAAC4M,EAAAA,EAAG,CACFnF,MAAM,UACN,aAAW,SACXO,QAASA,IAAM5F,IAAoB,GACnCwE,GAAI,CAAEwB,UAAW,qCAAsClB,UAEvDlH,EAAAA,GAAAA,KAAC6M,GAAAA,EAAa,QAMnBzL,KACCsF,EAAAA,GAAAA,MAACoG,EAAAA,EAAe,CACdC,OAAO,SACPC,KAAM7K,GACN8K,QAASA,IAAM7K,IAAoB,GACnC8K,OAAQA,IAAM9K,IAAoB,GAClC+K,oBAAoB,EACpBC,WAAY,CACVxG,GAAI,CACFyG,oBAAqB,GACrBC,qBAAsB,GACtB7E,GAAI,IAENvB,SAAA,EAEFlH,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAE+D,MAAO,OAAQ1D,OAAQ,EAAGmC,QAAS,kBAAmBmE,GAAI,OAAQ/D,GAAI,EAAGrB,aAAc,MAClGzB,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEkD,EAAG,EAAG0D,aAAc,iCAAkCtG,SAAA,EAC/DR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,eAAgB,gBAAiBC,WAAY,SAAUM,GAAI,GAAIJ,SAAA,EACzFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEsC,WAAY,KAAMhC,SAAC,qBAClDlH,EAAAA,GAAAA,KAACyN,EAAAA,EAAU,CAACzF,QAASA,IAAM5F,IAAoB,GAAO8E,UACpDlH,EAAAA,GAAAA,KAAC0N,GAAAA,EAAS,UAId1N,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,YAAYC,MAAM,iBAAiBkG,cAAY,EAAAzG,SAAC,cAGpER,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQ+G,SAAU,OAAQpB,IAAK,EAAGlF,GAAI,GAAIJ,SAAA,EAC5DlH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAM,MACNrD,MAA0B,KAAnBrE,GAAwB,UAAY,UAC3C4E,QAASA,IAAM3E,GAAkB,IACjCuD,GAAI,CAAEsC,WAAY,IAAKf,aAAc,KAEtC1B,GAAkBgE,KAAIhI,IACrBzC,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CAEHE,MAAOrI,EACPoI,KAAMlG,GAAgBlC,GACtBgF,MAAOrE,KAAmBX,EAAW6C,GAAiB7C,GAAY,UAClEuF,QAASA,IAAM3E,GAAkBZ,GACjCmE,GAAI,CAAEsC,WAAY,IAAKf,aAAc,IALhC1F,SAUXiE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQ2F,IAAK,GAAItF,SAAA,EACnClH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,WACRC,MAAM,UACNiE,WAAS,EACT1D,QAASA,KACP3E,GAAkB,IAClBjB,IAAoB,EAAM,EAE5BwE,GAAI,CAAEuB,aAAc,GAAIjB,SACzB,WAGDlH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRC,MAAM,UACNiE,WAAS,EACT1D,QAASA,IAAM5F,IAAoB,GACnCwE,GAAI,CAAEuB,aAAc,GAAIjB,SACzB,mBASR9F,IAAYuE,GAAiB0E,OAAS,IACrCrK,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAE+B,GAAI,EAAGrB,GAAI,GAAIJ,UACxBlH,EAAAA,GAAAA,KAAC6N,EAAAA,EAAI,CAACjH,GAAI,CAAEkD,EAAG,GAAI5C,SAChBpB,GAAkB2E,KAAK7G,IACtB5D,EAAAA,GAAAA,KAACgL,EAAAA,EAAI,CAEHpE,GAAI,CACFU,GAAI,EACJa,aAAc,EACd8C,SAAU,SACV7C,UAAW,8BACX0F,WAAY,kCACZ,WAAY,CACVC,UAAW,cACX3F,UAAW,+BAGfJ,QAASA,IAAMvC,GAAgB7B,GAASsD,UAExCR,EAAAA,GAAAA,MAACwE,EAAAA,EAAW,CAACtE,GAAI,CAAEkD,EAAG,GAAI5C,SAAA,EACxBR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,SAAUM,GAAI,KAAMJ,SAAA,EAC1DlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CACLpD,GAAI,CACFwC,QAAS,GAAG9D,GAAiB1B,EAAQnB,iBACrCkI,MAAO,GACP1D,OAAQ,GACRgD,GAAI,GACJ/C,SAEDvC,GAAgBf,EAAQnB,aAE3BiE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEoH,KAAM,GAAI9G,SAAA,EACnBlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,YAAYZ,GAAI,CAAEsC,WAAY,IAAK+E,WAAY,KAAM/G,SACtEtD,EAAQrB,eAEXmE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,SAAUwC,GAAI,IAAMtC,SAAA,EAC1DlH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAOlH,EAAQnB,SACf2E,KAAK,QACLK,MAAOnC,GAAiB1B,EAAQnB,UAChCmE,GAAI,CACFK,OAAQ,GACR,mBAAoB,CAAE0B,GAAI,EAAGuF,SAAU,SAAUhF,WAAY,SAGjElJ,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiBb,GAAI,CAAEmE,GAAI,GAAI7D,SAChElB,GAAWpC,EAAQlB,eAI1B1C,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CACTC,QAAQ,YACRZ,GAAI,CACFsC,WAAY,IACZzB,MAAO,aACPsD,GAAI,GACJ7D,SAED9C,GAAeR,EAAQpB,aAI3BoB,EAAQhB,QACP5C,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CACTC,QAAQ,QACRC,MAAM,iBACNb,GAAI,CACFsH,SAAU,SACVC,GAAI,EACJC,GAAI,EACJnD,SAAU,SACVoD,aAAc,WACdC,WAAY,UACZpH,SAEDtD,EAAQhB,QAIZgB,EAAQf,UACP7C,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,SAAUwC,GAAI,EAAG2E,GAAI,GAAIjH,UAC/DlH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAM,QACN1D,KAAK,QACLK,MAAM,OACND,QAAQ,WACRZ,GAAI,CACFK,OAAQ,GACR,mBAAoB,CAAE0B,GAAI,EAAGuF,SAAU,SAAUhF,WAAY,cAnFlEtF,EAAQ2K,WAgGM,IAA5B5I,GAAiB0E,SAChB3D,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,SAChB+C,EAAG,EACHqB,GAAI,EACJI,UAAW,UACXrE,SAAA,EAEFlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CACLpD,GAAI,CACF+D,MAAO,GACP1D,OAAQ,GACRK,GAAI,EACJ8B,QAAS,gBACT3B,MAAO,gBACPP,UAEFlH,EAAAA,GAAAA,KAACqF,GAAAA,EAAY,CAACuB,GAAI,CAAEsH,SAAU,SAEhClO,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKmG,cAAY,EAAAzG,SAAC,uBAGtClH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBb,GAAI,CAAEU,GAAI,EAAGkH,SAAU,KAAMtH,SAC7EhE,IAAcE,GACX,iDACA,6EAENpD,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRC,MAAM,UACNQ,WAAWjI,EAAAA,GAAAA,KAACmJ,GAAAA,EAAO,IACnBnB,QAAStE,GACTkD,GAAI,CAAEuB,aAAc,EAAGQ,GAAI,GAAIzB,SAChC,oBAOH9F,IAAYuE,GAAiB0E,OAAS,IACtCrK,EAAAA,GAAAA,KAACyO,EAAAA,EAAc,CACbC,UAAW9E,EAAAA,EACXhD,GAAI,CACFuB,aAAc,EACdC,UAAW,8BACX6C,SAAU,SACV3D,GAAI,EACJiG,GAAI,GACJrG,UAEFR,EAAAA,GAAAA,MAACiI,EAAAA,EAAK,CAAAzH,SAAA,EACJlH,EAAAA,GAAAA,KAAC4O,EAAAA,EAAS,CAAChI,GAAI,CAAEwC,QAAS,oBAAqBlC,UAC7CR,EAAAA,GAAAA,MAACmI,EAAAA,EAAQ,CAAA3H,SAAA,EACPlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACnE,MAAM,MAAKzD,SAAC,cACvBlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACnE,MAAM,MAAKzD,SAAC,iBACvBlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACnE,MAAM,MAAKzD,SAAC,UACvBlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACnE,MAAM,MAAKzD,SAAC,YACvBlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACnE,MAAM,MAAKzD,SAAC,WACvBlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACnE,MAAM,MAAMoE,MAAM,QAAO7H,SAAC,kBAGzClH,EAAAA,GAAAA,KAACgP,EAAAA,EAAS,CAAA9H,SACPpB,GAAkB2E,KAAK7G,IACtB8C,EAAAA,GAAAA,MAACmI,EAAAA,EAAQ,CAEPjI,GAAI,CACF,UAAW,CAAEwC,QAAS,oBACtB0E,WAAY,yBACZ5G,SAAA,EAEFlH,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAAA5H,UACRR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,UAAWE,SAAA,EACjDlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CACLpD,GAAI,CACFwC,QAAS,GAAG9D,GAAiB1B,EAAQnB,iBACrCkI,MAAO,GACP1D,OAAQ,GACRgD,GAAI,KACJ/C,SAEDvC,GAAgBf,EAAQnB,aAE3BiE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,cAAe,UAAWI,SAAA,EACpDlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEsC,WAAY,KAAMhC,SACjDtD,EAAQnB,WAEVmB,EAAQf,UACP7C,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAM,QACN1D,KAAK,QACLK,MAAM,OACND,QAAQ,WACRZ,GAAI,CACFK,OAAQ,GACRuC,GAAI,GACJ,mBAAoB,CAClBb,GAAI,GACJuF,SAAU,SACVhF,WAAY,iBAQ1BlJ,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAAA5H,UACRlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEsC,WAAY,KAAMhC,SACjDtD,EAAQrB,iBAGbvC,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAAA5H,UACRlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAON,SAAElB,GAAWpC,EAAQlB,WAElD1C,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAAA5H,UACRlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEsC,WAAY,IAAKzB,MAAO,cAAeP,SACtE9C,GAAeR,EAAQpB,aAG5BxC,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAAA5H,UACRlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CACTC,QAAQ,QACRZ,GAAI,CACFa,MAAO,iBACPwD,SAAU,SACVoD,aAAc,WACdC,WAAY,SACZE,SAAU,KACVtH,SAEDtD,EAAQhB,OAAS,SAGtB5C,EAAAA,GAAAA,KAAC8O,EAAAA,EAAS,CAACC,MAAM,QAAO7H,UACtBR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQE,eAAgB,YAAaG,SAAA,EACvDlH,EAAAA,GAAAA,KAACiP,EAAAA,EAAO,CAACC,MAAM,OAAMhI,UACnBlH,EAAAA,GAAAA,KAACyN,EAAAA,EAAU,CACTrG,KAAK,QACLY,QAASA,IAAMvC,GAAgB7B,GAC/BgD,GAAI,CAAEa,MAAO,aAAcP,UAE3BlH,EAAAA,GAAAA,KAACmP,GAAAA,EAAc,CAACjB,SAAS,eAG7BlO,EAAAA,GAAAA,KAACiP,EAAAA,EAAO,CAACC,MAAM,OAAMhI,UACnBlH,EAAAA,GAAAA,KAACyN,EAAAA,EAAU,CACTrG,KAAK,QACLY,QAASA,IAAMrE,GAAgBC,GAC/BgD,GAAI,CAAEa,MAAO,eAAgB8F,GAAI,IAAMrG,UAEvClH,EAAAA,GAAAA,KAACoP,GAAAA,EAAQ,CAAClB,SAAS,eAGvBlO,EAAAA,GAAAA,KAACiP,EAAAA,EAAO,CAACC,MAAM,SAAQhI,UACrBlH,EAAAA,GAAAA,KAACyN,EAAAA,EAAU,CACTrG,KAAK,QACLY,QAASA,IAAMtC,GAAkB9B,GACjCgD,GAAI,CAAEa,MAAO,cAAeP,UAE5BlH,EAAAA,GAAAA,KAACqP,GAAAA,EAAU,CAACnB,SAAS,qBA/FxBtK,EAAQ2K,cA4GxB5I,GAAiB0E,OAAS,IACzBrK,EAAAA,GAAAA,KAACsP,EAAAA,EAAe,CACdZ,UAAU,MACVa,MAAO5J,GAAiB0E,OACxBvH,KAAMA,GACN0M,aAjxBeC,CAACC,EAAOC,KAC/B5M,GAAQ4M,EAAQ,EAixBR3M,YAAaA,GACb4M,oBA/wBuBF,IAC/BzM,GAAe4M,SAASH,EAAMxL,OAAOD,MAAO,KAC5ClB,GAAQ,EAAE,EA8wBF+M,mBAAoB1O,GAAW,CAAC,EAAG,IAAM,CAAC,GAAI,GAAI,IAClDwF,GAAI,CACFmJ,UAAW,6BACX,8BAA+B,CAC7BC,YAAa5O,GAAW,EAAI,GAE9B,qEAAsE,CACpE8M,SAAU,gBAOlBxH,EAAAA,GAAAA,MAACuJ,EAAAA,EAAM,CACLjD,KAAMxL,GACNyL,QAASpJ,GACTqM,WAAY9O,GACZ+O,oBAAqBvQ,GACrBwN,WAAY,CACVxG,GAAI,CACFuB,aAAc/G,GAAW,EAAI,EAC7B6J,SAAU,SACVmF,gBAAwC,SAAvBlP,GAAM2H,QAAQC,KAC3B,8BAA8B5H,GAAM2H,QAAQD,WAAWyH,UAAUnP,GAAM2H,QAAQD,WAAWyH,SAC1F,0EACJjI,UAAW,2BACXuC,MAAOvJ,GAAW,OAAS,QAC3BkP,UAAWlP,GAAW,OAAS,SAEjC8F,SAAA,EAEFR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACF+B,GAAI,EACJD,GAAI,EACJD,GAAI,EACJW,QAAgC,SAAvBlI,GAAM2H,QAAQC,KACnB,2BAA2B5H,GAAM2H,QAAQvI,MAAMyI,SAAS7H,GAAM2H,QAAQG,QAAQD,QAC9E,2BAA2B7H,GAAM2H,QAAQvI,MAAM2I,SAAS/H,GAAM2H,QAAQG,QAAQC,QAClFxB,MAAO,QACPZ,QAAS,OACTG,WAAY,SACZD,eAAgB,iBAChBG,SAAA,EAEFlH,EAAAA,GAAAA,KAACuQ,EAAAA,EAAW,CAAC3J,GAAI,CAAEkD,EAAG,EAAGoE,SAAU,SAAUhF,WAAY,KAAMhC,SAC7C,QAAfvF,GAAuB,kBAAoB,kBAE9C3B,EAAAA,GAAAA,KAACyN,EAAAA,EAAU,CACT+C,KAAK,MACL/I,MAAM,UACNO,QAASnE,GACT,aAAW,QAAOqD,UAElBlH,EAAAA,GAAAA,KAAC0N,GAAAA,EAAS,UAGd1N,EAAAA,GAAAA,KAACyQ,EAAAA,EAAa,CAAC7J,GAAI,CAAE+B,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGiI,UAAW,QAASxJ,UAC5DR,EAAAA,GAAAA,MAAC2C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAErC,SAAA,EACzBlH,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGxC,UAChBlH,EAAAA,GAAAA,KAACyL,EAAAA,EAAS,CACRzH,KAAK,cACL8G,MAAM,cACN7G,MAAO5B,GAASE,YAChBqJ,SAAU9H,GACV4H,WAAS,EACTlE,QAAQ,WACRmJ,UAAQ,EACRC,WAAS,EACT/E,WAAY,CACVjF,GAAI,CACFuB,aAAc,EACd+D,gBAAiB,0BAKzBlM,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAI8B,GAAI,EAAEtE,UACvBlH,EAAAA,GAAAA,KAACyL,EAAAA,EAAS,CACRzH,KAAK,SACL8G,MAAM,eACN7G,MAAO5B,GAASG,OAChBoJ,SAAU9H,GACV4H,WAAS,EACTlE,QAAQ,WACRmJ,UAAQ,EACRE,KAAK,SACLhF,WAAY,CACVC,gBAAgB9L,EAAAA,GAAAA,KAAC+L,EAAAA,EAAc,CAACC,SAAS,QAAO9E,SAAC,OACjDN,GAAI,CACFuB,aAAc,EACd+D,gBAAiB,0BAKzBlM,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAI8B,GAAI,EAAEtE,UACvBR,EAAAA,GAAAA,MAAC0F,EAAAA,EAAW,CAACV,WAAS,EAAClE,QAAQ,WAAWmJ,UAAQ,EAAAzJ,SAAA,EAChDlH,EAAAA,GAAAA,KAACqM,EAAAA,EAAU,CAAAnF,SAAC,cACZlH,EAAAA,GAAAA,KAACsM,EAAAA,EAAM,CACLtI,KAAK,WACL8G,MAAM,WACN7G,MAAO5B,GAASI,SAChBmJ,SAAU9H,GACVgN,cAAehR,IAASE,EAAAA,GAAAA,KAACqF,GAAAA,EAAY,IAAKvF,EAAO2H,MAAM,WACvDb,GAAI,CACFuB,aAAc,EACd+D,gBAAiB,oBACjBhF,SAEDT,GAAkBgE,KAAIhI,IACrBzC,EAAAA,GAAAA,KAACuM,EAAAA,EAAQ,CAAgBtI,MAAOxB,EAASyE,UACvCR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,UAAWE,SAAA,EACjDlH,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEqD,GAAI,IAAKxC,MAAO,GAAGnC,GAAiB7C,UAAkBoE,QAAS,QAASK,SAChFvC,GAAgBlC,KAElBA,MALUA,aAYvBzC,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGxC,UAChBlH,EAAAA,GAAAA,KAAC+Q,GAAAA,EAAU,CACTjG,MAAM,OACN7G,MAAO5B,GAASK,KAChBkJ,SAtkCUoF,IACxB1O,IAAY6B,IAAS,IAChBA,EACHzB,KAAMsO,KACL,EAmkCWC,UAAW,CACTC,UAAW,CACTxF,WAAW,EACXlE,QAAS,WACTZ,GAAI,CACF,uBAAwB,CACtBuB,aAAc,EACd+D,gBAAiB,4BAO7BlM,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGxC,UAChBlH,EAAAA,GAAAA,KAACyL,EAAAA,EAAS,CACRzH,KAAK,QACL8G,MAAM,QACN7G,MAAO5B,GAASO,MAChBgJ,SAAU9H,GACV4H,WAAS,EACTlE,QAAQ,WACR2J,WAAS,EACTC,KAAM,EACNvF,WAAY,CACVjF,GAAI,CACFuB,aAAc,EACd+D,gBAAiB,0BAjjCjBzJ,GAsjCIJ,GAASI,SArjCxB,CAAC,QAAS,cAAe,YAAa,YAAa,SAAS+C,SAAS/C,MAsjChEzC,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGxC,UAChBlH,EAAAA,GAAAA,KAACqR,EAAAA,EAAgB,CACfC,SACEtR,EAAAA,GAAAA,KAACuR,EAAAA,EAAQ,CACPvN,KAAK,UACLwN,QAASnP,GAASQ,QAClB+I,SAvnCQ7H,IAC5B,MAAM,KAAEC,EAAI,QAAEwN,GAAYzN,EAAEG,OAC5B5B,IAAY6B,IAAS,IAChBA,EACH,CAACH,GAAOwN,KACP,EAmnCiB/J,MAAM,YAGVqD,OACE9K,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAON,SAAC,2DASxCR,EAAAA,GAAAA,MAAC+K,EAAAA,EAAa,CAAC7K,GAAI,CAAE+B,GAAI,EAAGhB,GAAI,EAAGZ,eAAgB,YAAaG,SAAA,EAC9DlH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLC,QAASnE,GACT+C,GAAI,CACFuB,aAAc,EACdQ,GAAI,EACJlB,MAAO,iBACP,UAAW,CACTyE,gBAAiB,qBAEnBhF,SACH,YAGDlH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLC,QA3jCSzE,UAEnB,GAAKlB,GAASE,aAAgBF,GAASG,QAAWH,GAASI,SAM3D,IACE,MAAMiP,EAAc,IACfrP,GACHG,OAAQmP,WAAWtP,GAASG,QAC5BoP,OAAQ5Q,GAAKuN,KAQf,IAAIsD,EASJ,GAbItM,GAAqBlD,GAASI,YAChCiP,EAAY7O,SAAU,GAMtBgP,EADiB,QAAflQ,SACmBnB,GAAWkR,SAEXjR,GAAcoB,GAAgB0M,IAAKmD,GAItDG,GAAgBtM,GAAqBsM,EAAapP,UACpD,IACE,MAAMqP,EAAc,CAClB9N,KAAM6N,EAAatP,YACnBA,YAAasP,EAAajP,OAAS,GAAGiP,EAAapP,mBACnDA,SAAUoP,EAAapP,SACvBsP,cAAeF,EAAarP,OAC5BwP,SAAU,EACVC,aAAcJ,EAAanP,KAC3BG,SAAS,EACTqP,eAAgBL,EAAatD,WAGzB5N,GAAyBmR,GAC/BtO,QAAQ2O,IAAI,4CACd,CAAE,MAAO7R,GACPkD,QAAQlD,MAAM,uCAAwCA,EACxD,CAGFuD,IACF,CAAE,MAAOvD,GACPkD,QAAQlD,MAAM,4BAA6BA,GAC3C8R,MAAM,0CACR,MAjDEA,MAAM,wEAiDR,EAugCU5K,QAAQ,YACRC,MAAM,UACNQ,WAAWjI,EAAAA,GAAAA,KAACqS,GAAAA,EAAQ,IACpBzL,GAAI,CACFuB,aAAc,EACdQ,GAAI,EACJP,UAAW,qCACXlB,SAEc,QAAfvF,GAAuB,cAAgB,wBAM9C3B,EAAAA,GAAAA,KAACiQ,EAAAA,EAAM,CACLjD,KAAMjL,GACNkL,QAASpJ,GACTqM,WAAY9O,GACZ+O,oBAAqBvQ,GACrBwN,WAAY,CACVxG,GAAI,CACFuB,aAAc/G,GAAW,EAAI,EAC7B6J,SAAU,SACVN,MAAOvJ,GAAW,OAAS,QAC3BgP,gBAAwC,SAAvBlP,GAAM2H,QAAQC,KAC3B,8BAA8B5H,GAAM2H,QAAQD,WAAWyH,UAAUnP,GAAM2H,QAAQD,WAAWyH,SAC1F,0EACJjI,UAAW,6BAEblB,SAEDrF,KACC6E,EAAAA,GAAAA,MAAA4L,GAAAA,SAAA,CAAApL,SAAA,EACER,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACF+B,GAAI,EACJD,GAAI,EACJD,GAAI,EACJW,QAAgC,SAAvBlI,GAAM2H,QAAQC,KACnB,2BAA2B5H,GAAM2H,QAAQvI,MAAMyI,SAAS7H,GAAM2H,QAAQG,QAAQD,QAC9E,2BAA2B7H,GAAM2H,QAAQvI,MAAM2I,SAAS/H,GAAM2H,QAAQG,QAAQC,QAClFxB,MAAO,QACPZ,QAAS,OACTG,WAAY,SACZD,eAAgB,iBAChBG,SAAA,EAEFlH,EAAAA,GAAAA,KAACuQ,EAAAA,EAAW,CAAC3J,GAAI,CAAEkD,EAAG,EAAGoE,SAAU,SAAUhF,WAAY,KAAMhC,SAAC,qBAGhElH,EAAAA,GAAAA,KAACyN,EAAAA,EAAU,CACT+C,KAAK,MACL/I,MAAM,UACNO,QAASnE,GACT,aAAW,QAAOqD,UAElBlH,EAAAA,GAAAA,KAAC0N,GAAAA,EAAS,UAGdhH,EAAAA,GAAAA,MAAC+J,EAAAA,EAAa,CAAC7J,GAAI,CAAE+B,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAAIvB,SAAA,EACzCR,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,SAAUM,GAAI,GAAIJ,SAAA,EACxDlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CACLpD,GAAI,CACFwC,QAAS,GAAG9D,GAAiBzD,GAAgBY,iBAC7CkI,MAAO,GACP1D,OAAQ,GACRgD,GAAI,GACJ/C,SAEDvC,GAAgB9C,GAAgBY,aAEnCiE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAAAO,SAAA,EACFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEsC,WAAY,IAAK+E,WAAY,KAAM/G,SAC/DrF,GAAgBU,eAEnBvC,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CACHE,MAAOjJ,GAAgBY,SACvBgF,MAAOnC,GAAiBzD,GAAgBY,UACxC2E,KAAK,QACLR,GAAI,CAAE4C,GAAI,aAKhB9C,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACHxC,GAAI,EACJa,aAAc,EACd+D,gBAAiB,mBACjBrF,QAAS,OACTG,WAAY,SACZD,eAAgB,iBAChBG,SAAA,EAEFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBP,SAAC,YAGnDlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,aAAab,GAAI,CAAEsC,WAAY,KAAMhC,SACjE9C,GAAevC,GAAgBW,cAIpCkE,EAAAA,GAAAA,MAAC2C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,GAAI,CAAEU,GAAI,GAAIJ,SAAA,EACxClH,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAExC,UACfR,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACH3B,aAAc,EACd+D,gBAAiB,mBACjBjF,OAAQ,QACRC,SAAA,EAEFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBkG,cAAY,EAAAzG,SAAC,UAGhElH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEsC,WAAY,KAAMhC,SACjDlB,GAAWnE,GAAgBa,cAIlC1C,EAAAA,GAAAA,KAACqJ,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAExC,UACfR,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACH3B,aAAc,EACd+D,gBAAiB,mBACjBjF,OAAQ,QACRC,SAAA,EAEFlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBkG,cAAY,EAAAzG,SAAC,YAGhElH,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQG,WAAY,UAAWE,SAChDrF,GAAgBgB,SACf7C,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CAACE,MAAM,QAAQrD,MAAM,OAAOL,KAAK,WAEtCpH,EAAAA,GAAAA,KAAC4K,EAAAA,EAAI,CAACE,MAAM,UAAUrD,MAAM,UAAUL,KAAK,oBAOpDvF,GAAgBe,QACf8D,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEU,GAAI,GAAIJ,SAAA,EACjBlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBkG,cAAY,EAAAzG,SAAC,WAGhElH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAON,SACxBrF,GAAgBe,eAKzB8D,EAAAA,GAAAA,MAAC+K,EAAAA,EAAa,CAAC7K,GAAI,CAAE+B,GAAI,EAAGhB,GAAI,EAAGZ,eAAgB,iBAAkBG,SAAA,EACnElH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLN,MAAM,QACNQ,WAAWjI,EAAAA,GAAAA,KAACqP,GAAAA,EAAU,IACtBrH,QAASA,KACPtC,GAAkB7D,IAClBgC,IAAmB,EAErB+C,GAAI,CAAEuB,aAAc,GAAIjB,SACzB,YAGDlH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLP,QAAQ,YACRC,MAAM,UACNQ,WAAWjI,EAAAA,GAAAA,KAACoP,GAAAA,EAAQ,IACpBpH,QAASA,KACPrE,GAAgB9B,IAChBgC,IAAmB,EAErB+C,GAAI,CAAEuB,aAAc,GAAIjB,SACzB,kBASTlH,EAAAA,GAAAA,KAACiQ,EAAAA,EAAM,CACLjD,KAAM/K,GACNgL,QAASA,KAEF5M,GAASwD,IAAmB,EAEnCsM,oBAAqBvQ,GACrBwN,WAAY,CACVxG,GAAI,CACFuB,aAAc,EACd8C,SAAU,SACVuD,SAAU,UAEZtH,SAEDrF,KACC6E,EAAAA,GAAAA,MAAA4L,GAAAA,SAAA,CAAApL,SAAA,EACElH,EAAAA,GAAAA,KAACuQ,EAAAA,EAAW,CAAC3J,GAAI,CAAE8B,GAAI,EAAGC,GAAI,GAAIzB,UAChClH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,KAAKZ,GAAI,CAAEsC,WAAY,KAAMhC,SAAC,sBAIpDR,EAAAA,GAAAA,MAAC+J,EAAAA,EAAa,CAAC7J,GAAI,CAAE+B,GAAI,EAAGD,GAAI,GAAIxB,SAAA,CACjC5G,IACCN,EAAAA,GAAAA,KAAC4H,EAAAA,EAAK,CACJC,SAAS,QACTjB,GAAI,CAAEU,GAAI,EAAGa,aAAc,GAAIjB,SAE9B5G,KAILN,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,QAAQZ,GAAI,CAAEU,GAAI,GAAIJ,SAAC,mDAI3CR,EAAAA,GAAAA,MAACkD,EAAAA,EAAK,CACJC,UAAW,EACXjD,GAAI,CACFkD,EAAG,EACH3B,aAAc,EACd+D,gBAAiB,mBACjBrF,QAAS,OACTG,WAAY,UACZE,SAAA,EAEFlH,EAAAA,GAAAA,KAACgK,EAAAA,EAAM,CACLpD,GAAI,CACFwC,QAAS,GAAG9D,GAAiBzD,GAAgBY,iBAC7CkI,MAAO,GACP1D,OAAQ,GACRgD,GAAI,GACJ/C,SAEDvC,GAAgB9C,GAAgBY,aAEnCiE,EAAAA,GAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEoH,KAAM,GAAI9G,SAAA,EACnBlH,EAAAA,GAAAA,KAACuH,EAAAA,EAAU,CAACC,QAAQ,YAAYZ,GAAI,CAAEsC,WAAY,IAAK+E,WAAY,KAAM/G,SACtErF,GAAgBU,eAEnBmE,EAAAA,GAAAA,MAACa,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAgBP,SAAA,CACjD9C,GAAevC,GAAgBW,QAAQ,WAAIwD,GAAWnE,GAAgBa,mBAK/EgE,EAAAA,GAAAA,MAAC+K,EAAAA,EAAa,CAAC7K,GAAI,CAAE+B,GAAI,EAAGhB,GAAI,GAAIT,SAAA,EAClClH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLC,QAASnE,GACT0O,SAAUlS,EACVuG,GAAI,CACFuB,aAAc,EACdQ,GAAI,EACJlB,MAAO,kBACPP,SACH,YAGDlH,EAAAA,GAAAA,KAAC+H,EAAAA,EAAM,CACLC,QAnwCYzE,UAC1B,IACErB,IAAuB,GAEvBsB,QAAQ2O,IAAI,iCAAiCtQ,GAAgB0M,aACxC7N,GAAcmB,GAAgB0M,MAGjD/K,QAAQ2O,IAAI,sCAEZjQ,IAAuB,GACvB2B,OAGAL,QAAQlD,MAAM,yBAAyBA,KAGlCA,GAEH8R,MAAM,2CAGZ,CAAE,MAAOI,GACPhP,QAAQlD,MAAM,gCAAiCkS,GAC/CJ,MAAM,6BAA6BI,EAAIC,SAAW,kBACpD,GA2uCcjL,QAAQ,YACRC,MAAM,QACN8K,SAAUlS,EACV4H,UAAW5H,GAAUL,EAAAA,GAAAA,KAACmH,EAAAA,EAAgB,CAACC,KAAM,GAAIK,MAAM,YAAe,KACtEb,GAAI,CACFuB,aAAc,EACdQ,GAAI,GACJzB,SAED7G,EAAU,cAAgB,mBAQpCe,KACCpB,EAAAA,GAAAA,KAAC2G,EAAAA,EAAG,CAACC,GAAI,CAAEoF,SAAU,QAASS,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,IAAKzF,UAChElH,EAAAA,GAAAA,KAAC4M,EAAAA,EAAG,CACFnF,MAAM,UACN,aAAW,cACXO,QAAStE,GACTkD,GAAI,CACFwB,UAAW,oCACX,UAAW,CACTgB,QAAS,iBAEXlC,UAEFlH,EAAAA,GAAAA,KAACmJ,GAAAA,EAAO,aAt4CA1G,MA64CtB,C","sources":["pages/Expenses/Expenses.jsx"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Grid,\r\n  Chip,\r\n  Tooltip,\r\n  TablePagination,\r\n  InputAdornment,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  useMediaQuery,\r\n  Fab,\r\n  Slide,\r\n  SwipeableDrawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  LinearProgress,\r\n  Stack,\r\n  Avatar,\r\n  Alert\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Visibility as VisibilityIcon,\r\n  FileDownload as FileDownloadIcon,\r\n  Search as SearchIcon,\r\n  FilterList as FilterListIcon,\r\n  Close as CloseIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Phone as PhoneIcon,\r\n  Home as HomeIcon,\r\n  Person as PersonIcon,\r\n  Devices as DevicesIcon,\r\n  Campaign as CampaignIcon,\r\n  DirectionsCar as DirectionsCarIcon,\r\n  LocalShipping as LocalShippingIcon,\r\n  CardGiftcard as CardGiftcardIcon,\r\n  Storefront as StorefrontIcon,\r\n  Category as CategoryIcon,\r\n  Refresh as RefreshIcon,\r\n  Save as SaveIcon,\r\n  FilterAlt as FilterAltIcon,\r\n  ArrowUpward as ArrowUpwardIcon,\r\n  ArrowDownward as ArrowDownwardIcon\r\n} from '@mui/icons-material';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { format } from 'date-fns';\r\n\r\n// Transition component for dialogs\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Expenses() {\r\n  const { \r\n    expenses, \r\n    loading, \r\n    error, \r\n    loadExpenses, \r\n    addExpense, \r\n    updateExpense, \r\n    deleteExpense,\r\n    createProductFromExpense,\r\n    expensesLoaded,\r\n    expensesLoading\r\n  } = useContext(FinancialContext);\r\n  \r\n  const { user } = useContext(AuthContext);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n  // Dialog state\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogMode, setDialogMode] = useState('add'); // 'add' or 'edit'\r\n  const [selectedExpense, setSelectedExpense] = useState(null);\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState(false);\r\n  const [filterDrawerOpen, setFilterDrawerOpen] = useState(false);\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    description: '',\r\n    amount: '',\r\n    category: '',\r\n    date: new Date(),\r\n    notes: '',\r\n    isAsset: false\r\n  });\r\n  \r\n  // Table pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(isMobile ? 5 : 10);\r\n  \r\n  // Search and filter\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n  \r\n  // Load expenses on component mount only if not already loaded\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!expensesLoaded && !expensesLoading) {\r\n        try {\r\n          await loadExpenses();\r\n        } catch (error) {\r\n          console.error(\"Error loading expenses:\", error);\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [loadExpenses, expensesLoaded, expensesLoading]);\r\n  \r\n  // Update rows per page based on screen size\r\n  useEffect(() => {\r\n    setRowsPerPage(isMobile ? 5 : 10);\r\n  }, [isMobile]);\r\n  \r\n  // Handle dialog open for adding\r\n  const handleAddClick = () => {\r\n    setDialogMode('add');\r\n    setFormData({\r\n      description: '',\r\n      amount: '',\r\n      category: '',\r\n      date: new Date(),\r\n      notes: '',\r\n      isAsset: false\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n  \r\n  // Handle dialog open for editing\r\n  const handleEditClick = (expense) => {\r\n    setDialogMode('edit');\r\n    setSelectedExpense(expense);\r\n    setFormData({\r\n      description: expense.description,\r\n      amount: expense.amount,\r\n      category: expense.category,\r\n      date: new Date(expense.date),\r\n      notes: expense.notes || '',\r\n      isAsset: expense.isAsset || false\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n  \r\n  // Handle dialog close\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n    setViewDialog(false);\r\n    setDeleteConfirmDialog(false);\r\n    setFilterDrawerOpen(false);\r\n  };\r\n  \r\n  // Handle form input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  // Handle checkbox change\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: checked\r\n    }));\r\n  };\r\n  \r\n  // Handle date change\r\n  const handleDateChange = (newDate) => {\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      date: newDate\r\n    }));\r\n  };\r\n  \r\n  // Format currency with Malaysian Ringgit\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('ms-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n  \r\n  // Get icon for a category\r\n  const getCategoryIcon = (category) => {\r\n    switch(category) {\r\n      case 'Phone': return <PhoneIcon />;\r\n      case 'Rental': return <HomeIcon />;\r\n      case 'Salary': return <PersonIcon />;\r\n      case 'Accessories': return <DevicesIcon />;\r\n      case 'Marketing': return <CampaignIcon />;\r\n      case 'Transport': return <DirectionsCarIcon />;\r\n      case 'Courier': return <LocalShippingIcon />;\r\n      case 'Bonus': return <CardGiftcardIcon />;\r\n      case 'Advertisement': return <StorefrontIcon />;\r\n      default: return <CategoryIcon />;\r\n    }\r\n  };\r\n  \r\n  // Get color for a category\r\n  const getCategoryColor = (category) => {\r\n    switch(category) {\r\n      case 'Phone': return 'warning';\r\n      case 'Rental': return 'error';\r\n      case 'Salary': return 'primary';\r\n      case 'Accessories': return 'info';\r\n      case 'Marketing': return 'success';\r\n      case 'Transport': return 'secondary';\r\n      case 'Courier': return 'default';\r\n      case 'Bonus': return 'warning';\r\n      case 'Advertisement': return 'info';\r\n      default: return 'default';\r\n    }\r\n  };\r\n  \r\n  // Check if category can be an asset\r\n  const canBeAsset = (category) => {\r\n    return ['Phone', 'Accessories', 'Marketing', 'Transport', 'Other'].includes(category);\r\n  };\r\n  \r\n  // Check if category should be tracked as product\r\n  const shouldTrackAsProduct = (category) => {\r\n    return ['Phone', 'Accessories'].includes(category);\r\n  };\r\n  \r\n  // Get overall expense statistics\r\n  const getTotalExpenses = () => {\r\n    return expenses.reduce((sum, expense) => sum + expense.amount, 0);\r\n  };\r\n  \r\n  const getExpensesByCategory = () => {\r\n    const categoryCounts = {};\r\n    const categoryTotals = {};\r\n    \r\n    expenses.forEach(expense => {\r\n      if (!categoryCounts[expense.category]) {\r\n        categoryCounts[expense.category] = 0;\r\n        categoryTotals[expense.category] = 0;\r\n      }\r\n      categoryCounts[expense.category]++;\r\n      categoryTotals[expense.category] += expense.amount;\r\n    });\r\n    \r\n    return { categoryCounts, categoryTotals };\r\n  };\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async () => {\r\n    // Improved validation with user feedback\r\n    if (!formData.description || !formData.amount || !formData.category) {\r\n      // Add error handling with alert\r\n      alert('Please fill in all required fields: Description, Amount, and Category');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const expenseData = {\r\n        ...formData,\r\n        amount: parseFloat(formData.amount),\r\n        paidBy: user._id\r\n      };\r\n      \r\n      // For Phone and Accessories, automatically set isAsset to true\r\n      if (shouldTrackAsProduct(formData.category)) {\r\n        expenseData.isAsset = true;\r\n      }\r\n      \r\n      let savedExpense;\r\n      \r\n      if (dialogMode === 'add') {\r\n        savedExpense = await addExpense(expenseData);\r\n      } else {\r\n        savedExpense = await updateExpense(selectedExpense._id, expenseData);\r\n      }\r\n      \r\n      // If expense is Phone or Accessories, create a product automatically\r\n      if (savedExpense && shouldTrackAsProduct(savedExpense.category)) {\r\n        try {\r\n          const productData = {\r\n            name: savedExpense.description,\r\n            description: savedExpense.notes || `${savedExpense.category} expense`,\r\n            category: savedExpense.category,\r\n            purchasePrice: savedExpense.amount,\r\n            quantity: 1,\r\n            purchaseDate: savedExpense.date,\r\n            isAsset: true,\r\n            relatedExpense: savedExpense._id\r\n          };\r\n          \r\n          await createProductFromExpense(productData);\r\n          console.log('Product created successfully from expense');\r\n        } catch (error) {\r\n          console.error('Error creating product from expense:', error);\r\n        }\r\n      }\r\n      \r\n      handleDialogClose();\r\n    } catch (error) {\r\n      console.error('Error submitting expense:', error);\r\n      alert('Error saving expense. Please try again.');\r\n    }\r\n  };\r\n  \r\n  // Handle expense view\r\n  const handleViewClick = (expense) => {\r\n    setSelectedExpense(expense);\r\n    setViewDialog(true);\r\n  };\r\n  \r\n  // Handle expense delete confirmation\r\n  const handleDeleteClick = (expense) => {\r\n    setSelectedExpense(expense);\r\n    setDeleteConfirmDialog(true);\r\n  };\r\n  \r\n  // Handle expense delete\r\n  const handleDeleteConfirm = async () => {\r\n    try {\r\n      setDeleteConfirmDialog(true); // Keep dialog open during deletion\r\n      \r\n      console.log(`Attempting to delete expense: ${selectedExpense._id}`);\r\n      const result = await deleteExpense(selectedExpense._id);\r\n      \r\n      if (result) {\r\n        console.log('Delete successful, closing dialogs');\r\n        // Success - close dialogs\r\n        setDeleteConfirmDialog(false);\r\n        handleDialogClose();\r\n      } else {\r\n        // Error already set in context\r\n        console.error(`Delete failed, error: ${error}`);\r\n        \r\n        // Keep dialog open to show error, but don't add extra alert\r\n        if (!error) {\r\n          // If no error was set in context, set a generic one\r\n          alert(\"Failed to delete expense: Unknown error\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in delete confirmation:\", err);\r\n      alert(`Failed to delete expense: ${err.message || 'Unknown error'}`);\r\n    }\r\n  };\r\n  \r\n  // Handle pagination change\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  \r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  \r\n  // Filter expenses\r\n  const filteredExpenses = expenses.filter(expense => {\r\n    return (\r\n      expense.description.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n      (filterCategory === '' || expense.category === filterCategory)\r\n    );\r\n  });\r\n  \r\n  // Paginated expenses\r\n  const paginatedExpenses = filteredExpenses.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n  \r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      return format(new Date(dateString), 'dd MMM yyyy');\r\n    } catch (error) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  // Get data for stats\r\n  const { categoryTotals } = getExpensesByCategory();\r\n  const totalExpenses = getTotalExpenses();\r\n  \r\n  // Categories for expenses (as requested by user)\r\n  const expenseCategories = [\r\n    'Phone',\r\n    'Rental',\r\n    'Salary',\r\n    'Accessories',\r\n    'Marketing',\r\n    'Transport',\r\n    'Courier',\r\n    'Bonus',\r\n    'Advertisement',\r\n    'Other'\r\n  ];\r\n  \r\n  // Show loading indicator when data is loading\r\n  if (expensesLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress size={60} thickness={4} sx={{ mb: 2 }} />\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Loading Expenses Data...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  // Enhanced error message with iOS-style design\r\n  if (error) {\r\n    return (\r\n      <Container sx={{ py: 4 }}>\r\n        <Alert \r\n          severity=\"error\" \r\n          variant=\"filled\"\r\n          action={\r\n            <Button \r\n              color=\"inherit\" \r\n              size=\"small\" \r\n              onClick={loadExpenses}\r\n              startIcon={<RefreshIcon />}\r\n            >\r\n              Retry\r\n            </Button>\r\n          }\r\n          sx={{ \r\n            borderRadius: 4,\r\n            boxShadow: '0 4px 12px rgba(211, 47, 47, 0.2)'\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Container disableGutters={isMobile} sx={{ pb: isMobile ? 7 : 3 }}>\r\n        {/* Header Section with Gradient Background */}\r\n        <Box sx={{ \r\n          pt: isMobile ? 2 : 3, \r\n          pb: 2,\r\n          px: isMobile ? 2 : 3,\r\n          background: theme.palette.mode === 'dark' \r\n            ? `linear-gradient(135deg, ${theme.palette.error.dark}, ${theme.palette.primary.dark})` \r\n            : `linear-gradient(135deg, ${theme.palette.error.main}, ${theme.palette.primary.main})`,\r\n          borderRadius: isMobile ? '0 0 24px 24px' : '0 0 16px 16px',\r\n          mb: 3,\r\n          color: 'white',\r\n          boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: isMobile ? 1 : 2 }}>\r\n            <Typography \r\n              variant={isMobile ? \"h5\" : \"h4\"} \r\n              sx={{ \r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              Expenses\r\n            </Typography>\r\n            {!isMobile && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={handleAddClick}\r\n                sx={{ \r\n                  borderRadius: 8,\r\n                  px: 3,\r\n                  py: 1,\r\n                  bgcolor: 'white',\r\n                  color: theme.palette.error.main,\r\n                  '&:hover': {\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                  },\r\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                }}\r\n              >\r\n                Add Expense\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          \r\n          {/* Summary for Desktop */}\r\n          {!isMobile && (\r\n            <Grid container spacing={2} sx={{ mt: 1 }}>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper \r\n                  elevation={2}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderRadius: 4,\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ bgcolor: theme.palette.error.main, mr: 2 }}>\r\n                    {getCategoryIcon('Rental')}\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Total Expenses</Typography>\r\n                    <Typography variant=\"h6\" color=\"error.main\" sx={{ fontWeight: 'bold' }}>\r\n                      {formatCurrency(totalExpenses)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Paper \r\n                  elevation={2}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderRadius: 4,\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ bgcolor: theme.palette.primary.main, mr: 2 }}>\r\n                    {getCategoryIcon('Salary')}\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">This Month</Typography>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                      {formatCurrency(expenses\r\n                        .filter(e => new Date(e.date).getMonth() === new Date().getMonth())\r\n                        .reduce((sum, e) => sum + e.amount, 0)\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Paper \r\n                  elevation={2}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderRadius: 4,\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'flex-start',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>Top Category</Typography>\r\n                  {Object.entries(categoryTotals).length > 0 ? (\r\n                    Object.entries(categoryTotals)\r\n                      .sort((a, b) => b[1] - a[1])\r\n                      .slice(0, 1)\r\n                      .map(([category, amount]) => (\r\n                        <Box key={category} sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                          <Chip \r\n                            icon={getCategoryIcon(category)} \r\n                            label={category}\r\n                            color={getCategoryColor(category)} \r\n                            sx={{ mr: 1 }}\r\n                          />\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 'bold', ml: 'auto' }}>\r\n                            {formatCurrency(amount)}\r\n                          </Typography>\r\n                        </Box>\r\n                      ))\r\n                  ) : (\r\n                    <Typography variant=\"body1\">No expenses yet</Typography>\r\n                  )}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Summary for Mobile */}\r\n        {isMobile && (\r\n          <Box sx={{ px: 2, mb: 3 }}>\r\n            <Card \r\n              elevation={2}\r\n              sx={{ \r\n                borderRadius: 4,\r\n                overflow: 'hidden',\r\n                boxShadow: '0 2px 10px rgba(0,0,0,0.08)'\r\n              }}\r\n            >\r\n              <CardContent sx={{ p: 2 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Total Expenses</Typography>\r\n                  <Chip\r\n                    label={`${expenses.length} items`}\r\n                    size=\"small\"\r\n                    sx={{ \r\n                      height: 24, \r\n                      '& .MuiChip-label': { px: 1, py: 0 },\r\n                      fontWeight: 500,\r\n                      bgcolor: 'rgba(0,0,0,0.05)' \r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Typography variant=\"h4\" sx={{ fontWeight: 700, color: 'error.main', my: 1 }}>\r\n                  {formatCurrency(totalExpenses)}\r\n                </Typography>\r\n                \r\n                <Divider sx={{ my: 1.5 }} />\r\n                \r\n                {Object.entries(categoryTotals).length > 0 ? (\r\n                  <Stack spacing={1}>\r\n                    {Object.entries(categoryTotals)\r\n                      .sort((a, b) => b[1] - a[1])\r\n                      .slice(0, 2)\r\n                      .map(([category, amount]) => (\r\n                        <Box key={category} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Box \r\n                              sx={{ \r\n                                borderRadius: '8px', \r\n                                p: 0.5, \r\n                                mr: 1,\r\n                                bgcolor: `${getCategoryColor(category)}.light`,\r\n                                color: `${getCategoryColor(category)}.main`,\r\n                                display: 'flex'\r\n                              }}\r\n                            >\r\n                              {getCategoryIcon(category)}\r\n                            </Box>\r\n                            <Typography variant=\"body2\">{category}</Typography>\r\n                          </Box>\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                            {formatCurrency(amount)}\r\n                          </Typography>\r\n                        </Box>\r\n                      ))}\r\n                  </Stack>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 1 }}>\r\n                    No expenses recorded yet\r\n                  </Typography>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Search and Filter */}\r\n        <Box sx={{ mb: 3, px: isMobile ? 2 : 0 }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search expenses\"\r\n                variant=\"outlined\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  sx: {\r\n                    borderRadius: 8,\r\n                    backgroundColor: 'white',\r\n                    '& fieldset': {\r\n                      borderColor: 'rgba(0, 0, 0, 0.08)',\r\n                    },\r\n                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.05)'\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            \r\n            {!isMobile && (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel>Filter by Category</InputLabel>\r\n                  <Select\r\n                    value={filterCategory}\r\n                    onChange={(e) => setFilterCategory(e.target.value)}\r\n                    label=\"Filter by Category\"\r\n                    sx={{\r\n                      borderRadius: 8,\r\n                      backgroundColor: 'white',\r\n                      boxShadow: '0 2px 8px rgba(0, 0, 0, 0.05)'\r\n                    }}\r\n                    startAdornment={\r\n                      filterCategory ? (\r\n                        <InputAdornment position=\"start\" sx={{ ml: 1 }}>\r\n                          {getCategoryIcon(filterCategory)}\r\n                        </InputAdornment>\r\n                      ) : null\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">All Categories</MenuItem>\r\n                    {expenseCategories.map(category => (\r\n                      <MenuItem key={category} value={category}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Box sx={{ mr: 1, color: `${getCategoryColor(category)}.main`, display: 'flex' }}>\r\n                            {getCategoryIcon(category)}\r\n                          </Box>\r\n                          {category}\r\n                        </Box>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            \r\n            <Grid item xs={12} sm={12} md={4} sx={{ display: 'flex', justifyContent: { xs: 'flex-end', md: 'flex-end' } }}>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                startIcon={<AddIcon />}\r\n                onClick={handleAddClick}\r\n                fullWidth={isMobile}\r\n                size={isMobile ? \"large\" : \"medium\"}\r\n                sx={{\r\n                  borderRadius: 8,\r\n                  py: isMobile ? 1.5 : 1.2,\r\n                  boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)'\r\n                }}\r\n              >\r\n                Add Expense\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        \r\n        {/* Filter Chips - Mobile */}\r\n        {isMobile && (\r\n          <Box sx={{ px: 2, mb: 2, overflow: 'auto' }}>\r\n            <Box sx={{ display: 'flex', gap: 1, pb: 0.5 }}>\r\n              <Chip\r\n                label=\"All\"\r\n                color={filterCategory === '' ? 'primary' : 'default'}\r\n                onClick={() => setFilterCategory('')}\r\n                sx={{ borderRadius: 8 }}\r\n              />\r\n              {expenseCategories.map(category => (\r\n                <Chip\r\n                  key={category}\r\n                  label={category}\r\n                  icon={getCategoryIcon(category)}\r\n                  color={filterCategory === category ? getCategoryColor(category) : 'default'}\r\n                  variant={filterCategory === category ? \"filled\" : \"outlined\"}\r\n                  onClick={() => setFilterCategory(filterCategory === category ? '' : category)}\r\n                  sx={{ borderRadius: 8 }}\r\n                />\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Mobile Filter Button */}\r\n        {isMobile && (\r\n          <Box sx={{ position: 'fixed', bottom: 85, right: 16, zIndex: 10 }}>\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"filter\"\r\n              onClick={() => setFilterDrawerOpen(true)}\r\n              sx={{ boxShadow: '0 4px 12px rgba(0, 122, 255, 0.5)' }}\r\n            >\r\n              <FilterAltIcon />\r\n            </Fab>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Mobile Filter Drawer */}\r\n        {isMobile && (\r\n          <SwipeableDrawer\r\n            anchor=\"bottom\"\r\n            open={filterDrawerOpen}\r\n            onClose={() => setFilterDrawerOpen(false)}\r\n            onOpen={() => setFilterDrawerOpen(true)}\r\n            disableSwipeToOpen={false}\r\n            PaperProps={{\r\n              sx: {\r\n                borderTopLeftRadius: 20,\r\n                borderTopRightRadius: 20,\r\n                pb: 2\r\n              }\r\n            }}\r\n          >\r\n            <Box sx={{ width: '100%', height: 4, bgcolor: 'rgba(0,0,0,0.1)', mx: 'auto', mt: 1, borderRadius: 2 }} />\r\n            <Box sx={{ p: 2, borderBottom: '1px solid rgba(0, 0, 0, 0.05)' }}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>Filter Expenses</Typography>\r\n                <IconButton onClick={() => setFilterDrawerOpen(false)}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Box>\r\n              \r\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\r\n                Category\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 3 }}>\r\n                <Chip\r\n                  label=\"All\"\r\n                  color={filterCategory === '' ? 'primary' : 'default'}\r\n                  onClick={() => setFilterCategory('')}\r\n                  sx={{ fontWeight: 500, borderRadius: 8 }}\r\n                />\r\n                {expenseCategories.map(category => (\r\n                  <Chip\r\n                    key={category}\r\n                    label={category}\r\n                    icon={getCategoryIcon(category)}\r\n                    color={filterCategory === category ? getCategoryColor(category) : 'default'}\r\n                    onClick={() => setFilterCategory(category)}\r\n                    sx={{ fontWeight: 500, borderRadius: 8 }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n              \r\n              <Box sx={{ display: 'flex', gap: 2 }}>\r\n                <Button \r\n                  variant=\"outlined\" \r\n                  color=\"primary\" \r\n                  fullWidth\r\n                  onClick={() => {\r\n                    setFilterCategory('');\r\n                    setFilterDrawerOpen(false);\r\n                  }}\r\n                  sx={{ borderRadius: 8 }}\r\n                >\r\n                  Reset\r\n                </Button>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  fullWidth\r\n                  onClick={() => setFilterDrawerOpen(false)}\r\n                  sx={{ borderRadius: 8 }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </SwipeableDrawer>\r\n        )}\r\n        \r\n        {/* Expenses List - Mobile View */}\r\n        {isMobile && filteredExpenses.length > 0 && (\r\n          <Box sx={{ px: 2, mb: 2 }}>\r\n            <List sx={{ p: 0 }}>\r\n              {paginatedExpenses.map((expense) => (\r\n                <Card\r\n                  key={expense._id}\r\n                  sx={{\r\n                    mb: 2,\r\n                    borderRadius: 4,\r\n                    overflow: 'hidden',\r\n                    boxShadow: '0 2px 10px rgba(0,0,0,0.04)',\r\n                    transition: 'transform 0.2s, box-shadow 0.2s',\r\n                    '&:active': {\r\n                      transform: 'scale(0.98)',\r\n                      boxShadow: '0 1px 5px rgba(0,0,0,0.05)',\r\n                    }\r\n                  }}\r\n                  onClick={() => handleViewClick(expense)}\r\n                >\r\n                  <CardContent sx={{ p: 2 }}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\r\n                      <Avatar\r\n                        sx={{\r\n                          bgcolor: `${getCategoryColor(expense.category)}.main`,\r\n                          width: 40,\r\n                          height: 40,\r\n                          mr: 2\r\n                        }}\r\n                      >\r\n                        {getCategoryIcon(expense.category)}\r\n                      </Avatar>\r\n                      <Box sx={{ flex: 1 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, lineHeight: 1.2 }}>\r\n                          {expense.description}\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\r\n                          <Chip\r\n                            label={expense.category}\r\n                            size=\"small\"\r\n                            color={getCategoryColor(expense.category)}\r\n                            sx={{ \r\n                              height: 20, \r\n                              '& .MuiChip-label': { px: 1, fontSize: '0.7rem', fontWeight: 600 } \r\n                            }}\r\n                          />\r\n                          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 1 }}>\r\n                            {formatDate(expense.date)}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                      <Typography \r\n                        variant=\"subtitle1\" \r\n                        sx={{ \r\n                          fontWeight: 700, \r\n                          color: 'error.main',\r\n                          ml: 1 \r\n                        }}\r\n                      >\r\n                        {formatCurrency(expense.amount)}\r\n                      </Typography>\r\n                    </Box>\r\n                    \r\n                    {expense.notes && (\r\n                      <Typography \r\n                        variant=\"body2\" \r\n                        color=\"text.secondary\"\r\n                        sx={{ \r\n                          fontSize: '0.8rem',\r\n                          pl: 7,\r\n                          pr: 2,\r\n                          overflow: 'hidden',\r\n                          textOverflow: 'ellipsis',\r\n                          whiteSpace: 'nowrap'\r\n                        }}\r\n                      >\r\n                        {expense.notes}\r\n                      </Typography>\r\n                    )}\r\n                    \r\n                    {expense.isAsset && (\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', mt: 1, pl: 7 }}>\r\n                        <Chip\r\n                          label=\"Asset\"\r\n                          size=\"small\"\r\n                          color=\"info\"\r\n                          variant=\"outlined\"\r\n                          sx={{ \r\n                            height: 20, \r\n                            '& .MuiChip-label': { px: 1, fontSize: '0.7rem', fontWeight: 500 } \r\n                          }}\r\n                        />\r\n                      </Box>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Empty State */}\r\n        {filteredExpenses.length === 0 && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              p: 4,\r\n              my: 4,\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            <Avatar\r\n              sx={{\r\n                width: 80,\r\n                height: 80,\r\n                mb: 2,\r\n                bgcolor: 'primary.light',\r\n                color: 'primary.main'\r\n              }}\r\n            >\r\n              <CategoryIcon sx={{ fontSize: 40 }} />\r\n            </Avatar>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              No expenses found\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2, maxWidth: 300 }}>\r\n              {searchTerm || filterCategory \r\n                ? \"Try adjusting your filters to see more results\" \r\n                : \"You haven't added any expenses yet. Start by adding your first expense.\"}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleAddClick}\r\n              sx={{ borderRadius: 8, px: 3 }}\r\n            >\r\n              Add Expense\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Expenses Table - Desktop View */}\r\n        {!isMobile && filteredExpenses.length > 0 && (\r\n          <TableContainer \r\n            component={Paper} \r\n            sx={{ \r\n              borderRadius: 4,\r\n              boxShadow: '0 2px 10px rgba(0,0,0,0.05)',\r\n              overflow: 'hidden',\r\n              mb: 3,\r\n              mx: 0\r\n            }}\r\n          >\r\n            <Table>\r\n              <TableHead sx={{ bgcolor: 'rgba(0,0,0,0.02)' }}>\r\n                <TableRow>\r\n                  <TableCell width=\"10%\">Category</TableCell>\r\n                  <TableCell width=\"20%\">Description</TableCell>\r\n                  <TableCell width=\"20%\">Date</TableCell>\r\n                  <TableCell width=\"15%\">Amount</TableCell>\r\n                  <TableCell width=\"20%\">Notes</TableCell>\r\n                  <TableCell width=\"15%\" align=\"right\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {paginatedExpenses.map((expense) => (\r\n                  <TableRow \r\n                    key={expense._id}\r\n                    sx={{ \r\n                      '&:hover': { bgcolor: 'rgba(0,0,0,0.01)' },\r\n                      transition: 'background-color 0.2s'\r\n                    }}\r\n                  >\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar\r\n                          sx={{\r\n                            bgcolor: `${getCategoryColor(expense.category)}.main`,\r\n                            width: 28,\r\n                            height: 28,\r\n                            mr: 1.5\r\n                          }}\r\n                        >\r\n                          {getCategoryIcon(expense.category)}\r\n                        </Avatar>\r\n                        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\r\n                            {expense.category}\r\n                          </Typography>\r\n                          {expense.isAsset && (\r\n                            <Chip\r\n                              label=\"Asset\"\r\n                              size=\"small\"\r\n                              color=\"info\"\r\n                              variant=\"outlined\"\r\n                              sx={{ \r\n                                height: 16, \r\n                                mt: 0.5,\r\n                                '& .MuiChip-label': { \r\n                                  px: 0.5, \r\n                                  fontSize: '0.6rem', \r\n                                  fontWeight: 500 \r\n                                } \r\n                              }}\r\n                            />\r\n                          )}\r\n                        </Box>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\r\n                        {expense.description}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\">{formatDate(expense.date)}</Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 600, color: 'error.main' }}>\r\n                        {formatCurrency(expense.amount)}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Typography \r\n                        variant=\"body2\" \r\n                        sx={{ \r\n                          color: 'text.secondary',\r\n                          overflow: 'hidden',\r\n                          textOverflow: 'ellipsis',\r\n                          whiteSpace: 'nowrap',\r\n                          maxWidth: 150\r\n                        }}\r\n                      >\r\n                        {expense.notes || '-'}\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Tooltip title=\"View\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleViewClick(expense)}\r\n                            sx={{ color: 'info.main' }}\r\n                          >\r\n                            <VisibilityIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Edit\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleEditClick(expense)}\r\n                            sx={{ color: 'primary.main', mx: 0.5 }}\r\n                          >\r\n                            <EditIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={() => handleDeleteClick(expense)}\r\n                            sx={{ color: 'error.main' }}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        \r\n        {/* Pagination */}\r\n        {filteredExpenses.length > 0 && (\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={filteredExpenses.length}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            rowsPerPageOptions={isMobile ? [5, 10] : [10, 25, 50]}\r\n            sx={{ \r\n              borderTop: '1px solid rgba(0,0,0,0.05)',\r\n              '.MuiTablePagination-toolbar': {\r\n                paddingLeft: isMobile ? 1 : 2\r\n              },\r\n              '.MuiTablePagination-selectLabel, .MuiTablePagination-displayedRows': {\r\n                fontSize: '0.875rem'\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n        \r\n        {/* Expense Add/Edit Dialog */}\r\n        <Dialog\r\n          open={openDialog}\r\n          onClose={handleDialogClose}\r\n          fullScreen={isMobile}\r\n          TransitionComponent={Transition}\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: isMobile ? 0 : 4,\r\n              overflow: 'hidden',\r\n              backgroundImage: theme.palette.mode === 'dark' \r\n                ? `linear-gradient(to bottom, ${theme.palette.background.paper}, ${theme.palette.background.paper})`\r\n                : 'linear-gradient(to bottom, rgba(255,255,255,0.95), rgba(255,255,255,1))',\r\n              boxShadow: '0 0 20px rgba(0,0,0,0.1)',\r\n              width: isMobile ? '100%' : '550px',\r\n              maxHeight: isMobile ? '100%' : '85vh'\r\n            }\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              px: 3,\r\n              pt: 2,\r\n              pb: 1,\r\n              bgcolor: theme.palette.mode === 'dark' \r\n                ? `linear-gradient(135deg, ${theme.palette.error.dark}, ${theme.palette.primary.dark})`\r\n                : `linear-gradient(135deg, ${theme.palette.error.main}, ${theme.palette.primary.main})`,\r\n              color: 'white',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <DialogTitle sx={{ p: 0, fontSize: '1.2rem', fontWeight: 600 }}>\r\n              {dialogMode === 'add' ? 'Add New Expense' : 'Edit Expense'}\r\n            </DialogTitle>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              onClick={handleDialogClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <DialogContent sx={{ px: 3, pt: 3, pb: 1, overflowY: 'auto' }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  value={formData.description}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  autoFocus\r\n                  InputProps={{\r\n                    sx: {\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  name=\"amount\"\r\n                  label=\"Amount (MYR)\"\r\n                  value={formData.amount}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  type=\"number\"\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                    sx: {\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\" required>\r\n                  <InputLabel>Category</InputLabel>\r\n                  <Select\r\n                    name=\"category\"\r\n                    label=\"Category\"\r\n                    value={formData.category}\r\n                    onChange={handleInputChange}\r\n                    IconComponent={props => <CategoryIcon {...props} color=\"action\" />}\r\n                    sx={{\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }}\r\n                  >\r\n                    {expenseCategories.map(category => (\r\n                      <MenuItem key={category} value={category}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Box sx={{ mr: 1.5, color: `${getCategoryColor(category)}.main`, display: 'flex' }}>\r\n                            {getCategoryIcon(category)}\r\n                          </Box>\r\n                          {category}\r\n                        </Box>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <DatePicker\r\n                  label=\"Date\"\r\n                  value={formData.date}\r\n                  onChange={handleDateChange}\r\n                  slotProps={{\r\n                    textField: {\r\n                      fullWidth: true,\r\n                      variant: 'outlined',\r\n                      sx: {\r\n                        '& .MuiInputBase-root': {\r\n                          borderRadius: 2,\r\n                          backgroundColor: 'rgba(0,0,0,0.02)'\r\n                        }\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"notes\"\r\n                  label=\"Notes\"\r\n                  value={formData.notes}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  multiline\r\n                  rows={3}\r\n                  InputProps={{\r\n                    sx: {\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              {canBeAsset(formData.category) && (\r\n                <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        name=\"isAsset\"\r\n                        checked={formData.isAsset}\r\n                        onChange={handleCheckboxChange}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <Typography variant=\"body2\">\r\n                        Track as asset (appears in Products/Assets)\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions sx={{ px: 3, py: 2, justifyContent: 'flex-end' }}>\r\n            <Button \r\n              onClick={handleDialogClose}\r\n              sx={{ \r\n                borderRadius: 8,\r\n                px: 3,\r\n                color: 'text.secondary',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(0,0,0,0.05)'\r\n                }\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={handleSubmit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<SaveIcon />}\r\n              sx={{ \r\n                borderRadius: 8,\r\n                px: 3,\r\n                boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)'\r\n              }}\r\n            >\r\n              {dialogMode === 'add' ? 'Add Expense' : 'Save Changes'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        {/* View Expense Dialog */}\r\n        <Dialog\r\n          open={viewDialog}\r\n          onClose={handleDialogClose}\r\n          fullScreen={isMobile}\r\n          TransitionComponent={Transition}\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: isMobile ? 0 : 4,\r\n              overflow: 'hidden',\r\n              width: isMobile ? '100%' : '500px',\r\n              backgroundImage: theme.palette.mode === 'dark' \r\n                ? `linear-gradient(to bottom, ${theme.palette.background.paper}, ${theme.palette.background.paper})`\r\n                : 'linear-gradient(to bottom, rgba(255,255,255,0.95), rgba(255,255,255,1))',\r\n              boxShadow: '0 0 20px rgba(0,0,0,0.1)'\r\n            }\r\n          }}\r\n        >\r\n          {selectedExpense && (\r\n            <>\r\n              <Box\r\n                sx={{\r\n                  px: 3,\r\n                  pt: 2,\r\n                  pb: 1,\r\n                  bgcolor: theme.palette.mode === 'dark' \r\n                    ? `linear-gradient(135deg, ${theme.palette.error.dark}, ${theme.palette.primary.dark})`\r\n                    : `linear-gradient(135deg, ${theme.palette.error.main}, ${theme.palette.primary.main})`,\r\n                  color: 'white',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <DialogTitle sx={{ p: 0, fontSize: '1.2rem', fontWeight: 600 }}>\r\n                  Expense Details\r\n                </DialogTitle>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  onClick={handleDialogClose}\r\n                  aria-label=\"close\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <DialogContent sx={{ px: 3, pt: 3, pb: 0 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: `${getCategoryColor(selectedExpense.category)}.main`,\r\n                      width: 56,\r\n                      height: 56,\r\n                      mr: 2\r\n                    }}\r\n                  >\r\n                    {getCategoryIcon(selectedExpense.category)}\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, lineHeight: 1.2 }}>\r\n                      {selectedExpense.description}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={selectedExpense.category}\r\n                      color={getCategoryColor(selectedExpense.category)}\r\n                      size=\"small\"\r\n                      sx={{ mt: 0.5 }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 2,\r\n                    mb: 3,\r\n                    borderRadius: 3,\r\n                    backgroundColor: 'rgba(0,0,0,0.03)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Amount\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" color=\"error.main\" sx={{ fontWeight: 700 }}>\r\n                    {formatCurrency(selectedExpense.amount)}\r\n                  </Typography>\r\n                </Paper>\r\n                \r\n                <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                  <Grid item xs={6}>\r\n                    <Paper\r\n                      elevation={0}\r\n                      sx={{\r\n                        p: 2,\r\n                        borderRadius: 3,\r\n                        backgroundColor: 'rgba(0,0,0,0.03)',\r\n                        height: '100%'\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Date\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                        {formatDate(selectedExpense.date)}\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Paper\r\n                      elevation={0}\r\n                      sx={{\r\n                        p: 2,\r\n                        borderRadius: 3,\r\n                        backgroundColor: 'rgba(0,0,0,0.03)',\r\n                        height: '100%'\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Status\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        {selectedExpense.isAsset ? (\r\n                          <Chip label=\"Asset\" color=\"info\" size=\"small\" />\r\n                        ) : (\r\n                          <Chip label=\"Expense\" color=\"default\" size=\"small\" />\r\n                        )}\r\n                      </Box>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                {selectedExpense.notes && (\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                      Notes\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {selectedExpense.notes}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </DialogContent>\r\n              <DialogActions sx={{ px: 3, py: 2, justifyContent: 'space-between' }}>\r\n                <Button\r\n                  color=\"error\"\r\n                  startIcon={<DeleteIcon />}\r\n                  onClick={() => {\r\n                    handleDeleteClick(selectedExpense);\r\n                    handleDialogClose();\r\n                  }}\r\n                  sx={{ borderRadius: 8 }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<EditIcon />}\r\n                  onClick={() => {\r\n                    handleEditClick(selectedExpense);\r\n                    handleDialogClose();\r\n                  }}\r\n                  sx={{ borderRadius: 8 }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Dialog>\r\n        \r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog\r\n          open={deleteConfirmDialog}\r\n          onClose={() => {\r\n            // Only allow closing if not currently loading\r\n            if (!loading) handleDialogClose();\r\n          }}\r\n          TransitionComponent={Transition}\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 4,\r\n              overflow: 'hidden',\r\n              maxWidth: '450px'\r\n            }\r\n          }}\r\n        >\r\n          {selectedExpense && (\r\n            <>\r\n              <DialogTitle sx={{ pt: 3, px: 3 }}>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                  Delete Expense\r\n                </Typography>\r\n              </DialogTitle>\r\n              <DialogContent sx={{ px: 3, pt: 1 }}>\r\n                {error && (\r\n                  <Alert \r\n                    severity=\"error\" \r\n                    sx={{ mb: 2, borderRadius: 2 }}\r\n                  >\r\n                    {error}\r\n                  </Alert>\r\n                )}\r\n                \r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  Are you sure you want to delete this expense?\r\n                </Typography>\r\n                \r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: 3,\r\n                    backgroundColor: 'rgba(0,0,0,0.03)',\r\n                    display: 'flex',\r\n                    alignItems: 'center'\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: `${getCategoryColor(selectedExpense.category)}.main`,\r\n                      width: 40,\r\n                      height: 40,\r\n                      mr: 2\r\n                    }}\r\n                  >\r\n                    {getCategoryIcon(selectedExpense.category)}\r\n                  </Avatar>\r\n                  <Box sx={{ flex: 1 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 500, lineHeight: 1.2 }}>\r\n                      {selectedExpense.description}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {formatCurrency(selectedExpense.amount)} • {formatDate(selectedExpense.date)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </DialogContent>\r\n              <DialogActions sx={{ px: 3, py: 2 }}>\r\n                <Button\r\n                  onClick={handleDialogClose}\r\n                  disabled={loading}\r\n                  sx={{ \r\n                    borderRadius: 8, \r\n                    px: 3,\r\n                    color: 'text.secondary'\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleDeleteConfirm}\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  disabled={loading}\r\n                  startIcon={loading ? <CircularProgress size={16} color=\"inherit\" /> : null}\r\n                  sx={{ \r\n                    borderRadius: 8,\r\n                    px: 3\r\n                  }}\r\n                >\r\n                  {loading ? 'Deleting...' : 'Delete'}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Dialog>\r\n        \r\n        {/* Add Expense FAB for Mobile */}\r\n        {isMobile && (\r\n          <Box sx={{ position: 'fixed', bottom: 16, right: 16, zIndex: 10 }}>\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add expense\"\r\n              onClick={handleAddClick}\r\n              sx={{ \r\n                boxShadow: '0 4px 12px rgba(0, 122, 255, 0.5)',\r\n                '&:hover': {\r\n                  bgcolor: 'primary.dark'\r\n                }\r\n              }}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </LocalizationProvider>\r\n  );\r\n} "],"names":["Transition","React","props","ref","_jsx","Slide","direction","Expenses","expenses","loading","error","loadExpenses","addExpense","updateExpense","deleteExpense","createProductFromExpense","expensesLoaded","expensesLoading","useContext","FinancialContext","user","AuthContext","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","openDialog","setOpenDialog","useState","dialogMode","setDialogMode","selectedExpense","setSelectedExpense","viewDialog","setViewDialog","deleteConfirmDialog","setDeleteConfirmDialog","filterDrawerOpen","setFilterDrawerOpen","formData","setFormData","description","amount","category","date","Date","notes","isAsset","page","setPage","rowsPerPage","setRowsPerPage","searchTerm","setSearchTerm","filterCategory","setFilterCategory","useEffect","async","console","fetchData","handleAddClick","handleEditClick","expense","handleDialogClose","handleInputChange","e","name","value","target","prevState","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","format","getCategoryIcon","PhoneIcon","HomeIcon","PersonIcon","DevicesIcon","CampaignIcon","DirectionsCarIcon","LocalShippingIcon","CardGiftcardIcon","StorefrontIcon","CategoryIcon","getCategoryColor","shouldTrackAsProduct","includes","handleViewClick","handleDeleteClick","filteredExpenses","filter","toLowerCase","paginatedExpenses","slice","formatDate","dateString","categoryTotals","getExpensesByCategory","categoryCounts","forEach","totalExpenses","reduce","sum","expenseCategories","_jsxs","Box","sx","display","flexDirection","justifyContent","alignItems","height","children","CircularProgress","size","thickness","mb","Typography","variant","color","Container","py","Alert","severity","action","Button","onClick","startIcon","RefreshIcon","borderRadius","boxShadow","LocalizationProvider","dateAdapter","AdapterDateFns","disableGutters","pb","pt","px","background","palette","mode","dark","primary","main","fontWeight","AddIcon","bgcolor","Grid","container","spacing","mt","item","xs","md","Paper","elevation","p","backdropFilter","Avatar","mr","getMonth","Object","entries","length","sort","a","b","map","_ref","width","Chip","icon","label","ml","Card","overflow","CardContent","my","Divider","Stack","_ref2","textAlign","sm","TextField","fullWidth","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","SearchIcon","backgroundColor","borderColor","FormControl","InputLabel","Select","MenuItem","gap","bottom","right","zIndex","Fab","FilterAltIcon","SwipeableDrawer","anchor","open","onClose","onOpen","disableSwipeToOpen","PaperProps","borderTopLeftRadius","borderTopRightRadius","mx","borderBottom","IconButton","CloseIcon","gutterBottom","flexWrap","List","transition","transform","flex","lineHeight","fontSize","pl","pr","textOverflow","whiteSpace","_id","maxWidth","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","Tooltip","title","VisibilityIcon","EditIcon","DeleteIcon","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","borderTop","paddingLeft","Dialog","fullScreen","TransitionComponent","backgroundImage","paper","maxHeight","DialogTitle","edge","DialogContent","overflowY","required","autoFocus","type","IconComponent","DatePicker","newDate","slotProps","textField","multiline","rows","FormControlLabel","control","Checkbox","checked","DialogActions","expenseData","parseFloat","paidBy","savedExpense","productData","purchasePrice","quantity","purchaseDate","relatedExpense","log","alert","SaveIcon","_Fragment","disabled","err","message"],"sourceRoot":""}