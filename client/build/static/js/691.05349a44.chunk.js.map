{"version":3,"file":"static/js/691.05349a44.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@mui/icons-material/esm/Check.js","../node_modules/@mui/icons-material/esm/ArrowUpward.js","../node_modules/@mui/icons-material/esm/Person.js","../node_modules/@mui/icons-material/esm/PieChart.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8z\"\n}), 'ArrowUpward');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10m2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99m0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99z\"\n}), 'PieChart');"],"names":["getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemAvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","_ref","_extends","minWidth","flexShrink","marginTop","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","HALF_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","_isPointInArea","point","area","margin","clipArea","beginPath","rect","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","moveTo","lineTo","stroke","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","translate","rotation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","radius","spacing","legend","generateLabels","pointStyle","fontColor","borderWidth","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PieController","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","spanGaps","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","next","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","rad","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","defaultDatasetIdKey","reforwardRef","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","role","forwardRef","createTypedChart","registerables","Pie","createSvgIcon"],"sourceRoot":""}