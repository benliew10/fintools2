{"version":3,"file":"static/js/925.56741be8.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/icons-material/esm/Apartment.js","../node_modules/@mui/icons-material/esm/CalendarMonth.js","../node_modules/@mui/icons-material/esm/DirectionsCar.js","../node_modules/@mui/icons-material/esm/Business.js","../node_modules/@mui/icons-material/esm/Computer.js","../node_modules/@mui/icons-material/esm/Handyman.js","../node_modules/@mui/icons-material/esm/Store.js","pages/Assets/Assets.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 11V3H7v4H3v14h8v-4h2v4h8V11zM7 19H5v-2h2zm0-4H5v-2h2zm0-4H5V9h2zm4 4H9v-2h2zm0-4H9V9h2zm0-4H9V5h2zm4 8h-2v-2h2zm0-4h-2V9h2zm0-4h-2V5h2zm4 12h-2v-2h2zm0-4h-2v-2h2z\"\n}), 'Apartment');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V10h14zM9 14H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2zm-8 4H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2z\"\n}), 'CalendarMonth');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.92 6.01C18.72 5.42 18.16 5 17.5 5h-11c-.66 0-1.21.42-1.42 1.01L3 12v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8zM6.5 16c-.83 0-1.5-.67-1.5-1.5S5.67 13 6.5 13s1.5.67 1.5 1.5S7.33 16 6.5 16m11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5M5 11l1.5-4.5h11L19 11z\"\n}), 'DirectionsCar');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z\"\n}), 'Business');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2zM4 6h16v10H4z\"\n}), 'Computer');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"m21.67 18.17-5.3-5.3h-.99l-2.54 2.54v.99l5.3 5.3c.39.39 1.02.39 1.41 0l2.12-2.12c.39-.38.39-1.02 0-1.41\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"m17.34 10.19 1.41-1.41 2.12 2.12c1.17-1.17 1.17-3.07 0-4.24l-3.54-3.54-1.41 1.41V1.71l-.7-.71-3.54 3.54.71.71h2.83l-1.41 1.41 1.06 1.06-2.89 2.89-4.13-4.13V5.06L4.83 2.04 2 4.87 5.03 7.9h1.41l4.13 4.13-.85.85H7.6l-5.3 5.3c-.39.39-.39 1.02 0 1.41l2.12 2.12c.39.39 1.02.39 1.41 0l5.3-5.3v-2.12l5.15-5.15z\"\n}, \"1\")], 'Handyman');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4v2h16zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6zm-9 4H6v-4h6z\"\n}), 'Store');","import React, { useEffect, useContext, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Grid,\r\n  Chip,\r\n  Tooltip,\r\n  TablePagination,\r\n  InputAdornment,\r\n  Avatar,\r\n  Fab,\r\n  Slide,\r\n  Stack,\r\n  LinearProgress,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Visibility as VisibilityIcon,\r\n  FileDownload as FileDownloadIcon,\r\n  Search as SearchIcon,\r\n  AttachFile as AttachFileIcon,\r\n  Apartment as ApartmentIcon,\r\n  Computer as ComputerIcon,\r\n  DirectionsCar as CarIcon,\r\n  Smartphone as PhoneIcon,\r\n  Inventory as InventoryIcon,\r\n  Handyman as HandymanIcon,\r\n  Business as BusinessIcon,\r\n  Store as StoreIcon,\r\n  Close as CloseIcon,\r\n  ArrowUpward as ArrowUpwardIcon,\r\n  CalendarMonth as CalendarIcon,\r\n  TrendingUp as TrendingUpIcon\r\n} from '@mui/icons-material';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useMediaQuery } from '@mui/material';\r\nimport { format } from 'date-fns';\r\n\r\nconst assetCategories = [\r\n  'Equipment',\r\n  'Vehicle',\r\n  'Electronics',\r\n  'Property',\r\n  'Furniture',\r\n  'Inventory',\r\n  'Tools',\r\n  'Other'\r\n];\r\n\r\nconst Assets = () => {\r\n  const { \r\n    assets, \r\n    loadAssets, \r\n    assetsLoading, \r\n    assetsLoaded, \r\n    loadFinancialSummary, \r\n    getFinancialSummary,\r\n    addAsset, \r\n    updateAsset, \r\n    deleteAsset,\r\n    loading,\r\n    error: contextError\r\n  } = useContext(FinancialContext);\r\n  \r\n  const { /* user, */ } = useContext(AuthContext);\r\n  \r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [categoryFilter, setCategoryFilter] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [assetToCreate, setAssetToCreate] = useState({\r\n    name: '',\r\n    purchasePrice: '',\r\n    category: '',\r\n    purchaseDate: new Date(),\r\n    currentValue: '',\r\n    status: 'Active',\r\n    notes: ''\r\n  });\r\n  const [currentAsset, setCurrentAsset] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [selectedAsset, setSelectedAsset] = useState(null);\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState(false);\r\n  const [assetToDelete, setAssetToDelete] = useState(null);\r\n  const [filterDrawerOpen, setFilterDrawerOpen] = useState(false);\r\n  \r\n  // Dialog state\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogMode, setDialogMode] = useState('add'); // 'add' or 'edit'\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    category: '',\r\n    purchaseValue: '',\r\n    currentValue: '',\r\n    acquisitionDate: new Date(),\r\n    description: '',\r\n    condition: 'Good',\r\n    location: '',\r\n    depreciationRate: '',\r\n    notes: ''\r\n  });\r\n  \r\n  // Table pagination\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n  // Add loading state for delete operation\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // Only load assets if they're not already loaded and not currently loading\r\n      if (!assetsLoaded && !assetsLoading) {\r\n        try {\r\n          await loadAssets();\r\n          if (getFinancialSummary) {\r\n            await getFinancialSummary();\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Failed to load assets:\", err);\r\n          setError(\"Failed to load assets\");\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [loadAssets, getFinancialSummary, assetsLoaded, assetsLoading]);\r\n  \r\n  // Show loading indicator when data is loading\r\n  if (assetsLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress size={60} thickness={4} sx={{ mb: 2 }} />\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Loading Assets Data...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  // Filter assets\r\n  const filteredAssets = assets.filter(asset => {\r\n    return (\r\n      (asset.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n       (asset.description && asset.description.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n       (asset.location && asset.location.toLowerCase().includes(searchTerm.toLowerCase()))) &&\r\n      (categoryFilter === '' || asset.category === categoryFilter) &&\r\n      (statusFilter === '' || asset.status === statusFilter)\r\n    );\r\n  });\r\n  \r\n  // Paginated assets\r\n  const paginatedAssets = filteredAssets.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n  \r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  };\r\n  \r\n  // Format currency\r\n  const formatCurrency = (amount) => {\r\n    if (!amount && amount !== 0) return '-';\r\n    return new Intl.NumberFormat('en-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n  \r\n  // Add functions for category color, asset icon, depreciation, and asset age\r\n  const getCategoryColor = (category) => {\r\n    switch(category) {\r\n      case 'Equipment': return 'primary';\r\n      case 'Vehicle': return 'secondary';\r\n      case 'Electronics': return 'info';\r\n      case 'Property': return 'success';\r\n      case 'Furniture': return 'warning';\r\n      case 'Inventory': return 'error';\r\n      case 'Tools': return 'primary';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getAssetIcon = (category) => {\r\n    switch(category) {\r\n      case 'Equipment': return <BusinessIcon />;\r\n      case 'Vehicle': return <CarIcon />;\r\n      case 'Electronics': return <ComputerIcon />;\r\n      case 'Property': return <ApartmentIcon />;\r\n      case 'Furniture': return <InventoryIcon />;\r\n      case 'Tools': return <HandymanIcon />;\r\n      case 'Inventory': return <StoreIcon />;\r\n      default: return <BusinessIcon />;\r\n    }\r\n  };\r\n\r\n  const calculateDepreciation = (purchaseValue, depreciationRate, acquisitionDate) => {\r\n    if (!depreciationRate || depreciationRate === 0) {\r\n      return purchaseValue; // No depreciation\r\n    }\r\n    \r\n    const purchaseDate = new Date(acquisitionDate);\r\n    const currentDate = new Date();\r\n    const ageInYears = (currentDate - purchaseDate) / (365 * 24 * 60 * 60 * 1000);\r\n    \r\n    // Calculate depreciated value: P * (1 - r)^t\r\n    // where P is purchase value, r is depreciation rate (as decimal), t is time in years\r\n    const depreciatedValue = purchaseValue * Math.pow(1 - (depreciationRate / 100), ageInYears);\r\n    \r\n    // Don't let value drop below 10% of purchase value as scrap value\r\n    return Math.max(depreciatedValue, purchaseValue * 0.1);\r\n  };\r\n\r\n  const calculateAssetAge = (acquisitionDate) => {\r\n    const purchaseDate = new Date(acquisitionDate);\r\n    const currentDate = new Date();\r\n    const ageInDays = (currentDate - purchaseDate) / (24 * 60 * 60 * 1000);\r\n    \r\n    if (ageInDays < 30) {\r\n      return `${Math.floor(ageInDays)} days`;\r\n    } else if (ageInDays < 365) {\r\n      return `${Math.floor(ageInDays / 30)} months`;\r\n    } else {\r\n      const years = Math.floor(ageInDays / 365);\r\n      const months = Math.floor((ageInDays % 365) / 30);\r\n      return months > 0 ? `${years} years, ${months} months` : `${years} years`;\r\n    }\r\n  };\r\n  \r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h6\" color=\"error\">\r\n          Error: {error}\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  // Group assets by category\r\n  const assetsByCategory = {};\r\n  \r\n  assets.forEach(asset => {\r\n    if (!assetsByCategory[asset.category]) {\r\n      assetsByCategory[asset.category] = [];\r\n    }\r\n    assetsByCategory[asset.category].push(asset);\r\n  });\r\n  \r\n  // Calculate depreciation for each asset\r\n  const assetsWithDepreciation = assets.map(asset => {\r\n    const depreciation = calculateDepreciation(\r\n      asset.purchaseValue,\r\n      asset.currentValue || asset.purchaseValue,\r\n      asset.acquisitionDate\r\n    );\r\n    \r\n    return {\r\n      ...asset,\r\n      depreciationRate: depreciation\r\n    };\r\n  });\r\n  \r\n  // Handle asset delete confirmation\r\n  const handleDeleteConfirm = async () => {\r\n    try {\r\n      setIsDeleting(true);\r\n      console.log(`Attempting to delete asset: ${selectedAsset._id}`);\r\n      \r\n      const result = await deleteAsset(selectedAsset._id);\r\n      \r\n      if (result) {\r\n        console.log('Delete successful, closing dialogs');\r\n        setDeleteConfirmDialog(false);\r\n      } else {\r\n        // Error already set in context\r\n        console.error(`Delete failed with error in context: ${contextError}`);\r\n        // Keep dialog open to show error\r\n        if (contextError) {\r\n          setError(contextError);\r\n        } else {\r\n          setError(\"Failed to delete asset: Unknown error\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in delete confirmation:\", err);\r\n      setError(`Failed to delete asset: ${err.message || 'Unknown error'}`);\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Box sx={{ p: isMobile ? 1 : 3 }}>\r\n      {/* Header with Title and Add Button */}\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center', \r\n        mb: 3,\r\n        px: isMobile ? 1 : 0\r\n      }}>\r\n        <Typography \r\n          variant={isMobile ? 'h5' : 'h4'} \r\n          component=\"h1\" \r\n          sx={{ \r\n            fontWeight: 700,\r\n            fontSize: isMobile ? '1.5rem' : '2.125rem',\r\n            background: 'linear-gradient(45deg, #007AFF, #5AC8FA)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent'\r\n          }}\r\n        >\r\n          Assets\r\n        </Typography>\r\n        \r\n        {!isMobile && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => {\r\n              setDialogMode('add');\r\n              setFormData({\r\n                name: '',\r\n                category: '',\r\n                purchaseValue: '',\r\n                currentValue: '',\r\n                acquisitionDate: new Date(),\r\n                description: '',\r\n                condition: 'Good',\r\n                location: '',\r\n                depreciationRate: '',\r\n                notes: ''\r\n              });\r\n              setOpenDialog(true);\r\n            }}\r\n            sx={{ \r\n              borderRadius: 3,\r\n              px: 3,\r\n              py: 1,\r\n              boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)',\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            Add Asset\r\n          </Button>\r\n        )}\r\n      </Box>\r\n      \r\n      {/* Summary Cards */}\r\n      <Grid container spacing={isMobile ? 2 : 3} sx={{ mb: 3 }}>\r\n        <Grid item xs={12} md={4}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                <Box\r\n                  sx={{\r\n                    width: 50,\r\n                    height: 50,\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    mr: 2,\r\n                    background: 'linear-gradient(45deg, #007AFF, #007AFFCC)',\r\n                    boxShadow: '0 4px 10px rgba(0, 122, 255, 0.2)'\r\n                  }}\r\n                >\r\n                  <ApartmentIcon sx={{ color: 'white', fontSize: 28 }} />\r\n                </Box>\r\n                <Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Asset Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"div\" sx={{ fontWeight: 700 }}>\r\n                    {new Intl.NumberFormat('ms-MY', {\r\n                      style: 'currency',\r\n                      currency: 'MYR'\r\n                    }).format(assets.reduce((sum, asset) => sum + (asset.currentValue || asset.purchaseValue), 0))}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Divider sx={{ my: 2 }} />\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Assets\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                    {assets.length}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Categories\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                    {Object.keys(assetsByCategory).length}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={8}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ mb: 2, fontWeight: 600, display: 'flex', alignItems: 'center' }}>\r\n                <TrendingUpIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\r\n                Assets by Category\r\n              </Typography>\r\n              \r\n              <Grid container spacing={2}>\r\n                {Object.keys(assetsByCategory).map(category => {\r\n                  const categoryAssets = assetsByCategory[category];\r\n                  const totalValue = categoryAssets.reduce((sum, asset) => sum + (asset.currentValue || asset.purchaseValue), 0);\r\n                  const assetCount = categoryAssets.length;\r\n                  \r\n                  return (\r\n                    <Grid item xs={6} md={4} key={category}>\r\n                      <Paper \r\n                        elevation={0}\r\n                        sx={{ \r\n                          p: 2,\r\n                          borderRadius: 3,\r\n                          backgroundColor: 'rgba(0,0,0,0.02)',\r\n                          height: '100%'\r\n                        }}\r\n                      >\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\r\n                          <Avatar \r\n                            sx={{ \r\n                              width: 32, \r\n                              height: 32, \r\n                              mr: 1.5,\r\n                              bgcolor: `${getCategoryColor(category)}20`,\r\n                              color: getCategoryColor(category)\r\n                            }}\r\n                          >\r\n                            {getAssetIcon(category)}\r\n                          </Avatar>\r\n                          <Typography variant=\"subtitle2\" sx={{ fontWeight: 600 }}>\r\n                            {category}\r\n                          </Typography>\r\n                        </Box>\r\n                        \r\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5 }}>\r\n                          {assetCount} {assetCount === 1 ? 'Asset' : 'Assets'}\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"body1\" sx={{ fontWeight: 700, mb: 1 }}>\r\n                          {new Intl.NumberFormat('ms-MY', {\r\n                            style: 'currency',\r\n                            currency: 'MYR'\r\n                          }).format(totalValue)}\r\n                        </Typography>\r\n                        \r\n                        <LinearProgress \r\n                          variant=\"determinate\" \r\n                          value={(totalValue / (assets.reduce((sum, asset) => sum + (asset.currentValue || asset.purchaseValue), 0) || 1)) * 100}\r\n                          sx={{ \r\n                            height: 6,\r\n                            borderRadius: 1,\r\n                            backgroundColor: 'rgba(0,0,0,0.04)',\r\n                            '& .MuiLinearProgress-bar': {\r\n                              backgroundColor: getCategoryColor(category),\r\n                            }\r\n                          }} \r\n                        />\r\n                      </Paper>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      {/* Assets List */}\r\n      {assets.length > 0 ? (\r\n        <Box sx={{ px: isMobile ? 1 : 0 }}>\r\n          {/* Group assets by category */}\r\n          {Object.keys(assetsByCategory).map(category => (\r\n            <Box key={category} sx={{ mb: 4 }}>\r\n              <Box \r\n                sx={{ \r\n                  display: 'flex', \r\n                  alignItems: 'center', \r\n                  mb: 2,\r\n                  px: 1\r\n                }}\r\n              >\r\n                <Avatar \r\n                  sx={{ \r\n                    width: 34, \r\n                    height: 34, \r\n                    mr: 1.5,\r\n                    bgcolor: `${getCategoryColor(category)}20`,\r\n                    color: getCategoryColor(category)\r\n                  }}\r\n                >\r\n                  {getAssetIcon(category)}\r\n                </Avatar>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                  {category}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 2 }}>\r\n                  ({assetsByCategory[category].length} {assetsByCategory[category].length === 1 ? 'asset' : 'assets'})\r\n                </Typography>\r\n              </Box>\r\n              \r\n              <Grid container spacing={isMobile ? 2 : 3}>\r\n                {assetsByCategory[category].map(asset => (\r\n                  <Grid item xs={12} sm={6} md={4} key={asset._id}>\r\n                    <Card \r\n                      elevation={0}\r\n                      className=\"ios-shadow\"\r\n                      sx={{ \r\n                        borderRadius: 4,\r\n                        overflow: 'hidden',\r\n                        position: 'relative',\r\n                        '&:hover': {\r\n                          '& .asset-actions': {\r\n                            opacity: 1\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Box \r\n                        sx={{ \r\n                          height: 8, \r\n                          width: '100%', \r\n                          backgroundColor: getCategoryColor(asset.category) \r\n                        }} \r\n                      />\r\n                      <CardContent>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                          <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 600, mb: 0.5 }}>\r\n                            {asset.name}\r\n                          </Typography>\r\n                          \r\n                          <Box \r\n                            className=\"asset-actions\"\r\n                            sx={{ \r\n                              opacity: { xs: 1, md: 0 },\r\n                              transition: 'opacity 0.2s'\r\n                            }}\r\n                          >\r\n                            <Tooltip title=\"Edit\">\r\n                              <IconButton \r\n                                size=\"small\" \r\n                                onClick={() => {\r\n                                  setDialogMode('edit');\r\n                                  setSelectedAsset(asset);\r\n                                  setFormData({\r\n                                    name: asset.name,\r\n                                    category: asset.category,\r\n                                    purchaseValue: asset.purchaseValue,\r\n                                    currentValue: asset.currentValue,\r\n                                    acquisitionDate: new Date(asset.acquisitionDate),\r\n                                    description: asset.description || '',\r\n                                    condition: asset.condition,\r\n                                    location: asset.location || '',\r\n                                    depreciationRate: asset.depreciationRate || '',\r\n                                    notes: asset.notes || ''\r\n                                  });\r\n                                  setOpenDialog(true);\r\n                                }}\r\n                                sx={{ \r\n                                  mr: 1,\r\n                                  backgroundColor: 'rgba(0,0,0,0.03)',\r\n                                  '&:hover': {\r\n                                    backgroundColor: 'rgba(0,0,0,0.07)',\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <EditIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Delete\">\r\n                              <IconButton \r\n                                size=\"small\" \r\n                                onClick={() => {\r\n                                  setSelectedAsset(asset);\r\n                                  setDeleteConfirmDialog(true);\r\n                                }}\r\n                                sx={{ \r\n                                  color: theme.palette.error.main,\r\n                                  backgroundColor: 'rgba(255,59,48,0.05)',\r\n                                  '&:hover': {\r\n                                    backgroundColor: 'rgba(255,59,48,0.1)',\r\n                                  }\r\n                                }}\r\n                              >\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </Box>\r\n                        </Box>\r\n                        \r\n                        {asset.description && (\r\n                          <Typography variant=\"body2\" sx={{ mb: 2, color: 'text.secondary' }}>\r\n                            {asset.description}\r\n                          </Typography>\r\n                        )}\r\n                        \r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={6}>\r\n                            <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                              Current Value\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                              {new Intl.NumberFormat('ms-MY', {\r\n                                style: 'currency',\r\n                                currency: 'MYR'\r\n                              }).format(asset.currentValue || asset.purchaseValue)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\r\n                              Purchase Value\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                              {new Intl.NumberFormat('ms-MY', {\r\n                                style: 'currency',\r\n                                currency: 'MYR'\r\n                              }).format(asset.purchaseValue)}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Divider sx={{ my: 2 }} />\r\n                        \r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={12}>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                <CalendarIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary', opacity: 0.7 }} />\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  {formatDate(asset.acquisitionDate)}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Age: {calculateAssetAge(asset.acquisitionDate)}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Grid>\r\n                          \r\n                          {asset.depreciationRate > 0 && (\r\n                            <Grid item xs={12} sx={{ mt: 1 }}>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  Depreciation Rate:\r\n                                </Typography>\r\n                                <Typography \r\n                                  variant=\"body2\" \r\n                                  sx={{ \r\n                                    fontWeight: 500,\r\n                                    color: theme.palette.error.main\r\n                                  }}\r\n                                >\r\n                                  {asset.depreciationRate.toFixed(1)}% per year\r\n                                </Typography>\r\n                              </Box>\r\n                            </Grid>\r\n                          )}\r\n                          \r\n                          {asset.location && (\r\n                            <Grid item xs={12} sx={{ mt: 0.5 }}>\r\n                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Location: {asset.location}\r\n                              </Typography>\r\n                            </Grid>\r\n                          )}\r\n                          \r\n                          {asset.condition && (\r\n                            <Grid item xs={12} sx={{ mt: 0.5 }}>\r\n                              <Chip \r\n                                label={asset.condition} \r\n                                size=\"small\"\r\n                                sx={{ \r\n                                  fontWeight: 500,\r\n                                  bgcolor: asset.condition === 'Excellent' ? 'rgba(52, 199, 89, 0.1)' :\r\n                                           asset.condition === 'Good' ? 'rgba(0, 122, 255, 0.1)' :\r\n                                           asset.condition === 'Fair' ? 'rgba(255, 149, 0, 0.1)' :\r\n                                           'rgba(255, 59, 48, 0.1)',\r\n                                  color: asset.condition === 'Excellent' ? '#34C759' :\r\n                                         asset.condition === 'Good' ? '#007AFF' :\r\n                                         asset.condition === 'Fair' ? '#FF9500' :\r\n                                         '#FF3B30'\r\n                                }}\r\n                              />\r\n                            </Grid>\r\n                          )}\r\n                        </Grid>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      ) : (\r\n        <Box \r\n          sx={{ \r\n            p: 3, \r\n            textAlign: 'center', \r\n            borderRadius: 4,\r\n            backgroundColor: 'rgba(0,0,0,0.02)',\r\n            mt: 4\r\n          }}\r\n        >\r\n          <ApartmentIcon sx={{ fontSize: 48, color: 'text.secondary', opacity: 0.5, mb: 2 }} />\r\n          <Typography variant=\"h6\" color=\"text.secondary\">\r\n            No assets found\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n            Add your first asset to get started\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n      \r\n      {/* Add/Edit Asset Dialog */}\r\n      <Dialog \r\n        open={openDialog} \r\n        onClose={() => {\r\n          setOpenDialog(false);\r\n          setViewDialog(false);\r\n          setDeleteConfirmDialog(false);\r\n        }}\r\n        fullScreen={isMobile}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: isMobile ? 0 : 4,\r\n            maxWidth: 'sm',\r\n            width: '100%'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ \r\n          pb: 1,\r\n          pt: isMobile ? 2 : 3,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 600 }}>\r\n            {dialogMode === 'add' ? 'Add New Asset' : 'Edit Asset'}\r\n          </Typography>\r\n          {isMobile && (\r\n            <IconButton edge=\"end\" color=\"inherit\" onClick={() => {\r\n              setOpenDialog(false);\r\n              setViewDialog(false);\r\n              setDeleteConfirmDialog(false);\r\n            }} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          )}\r\n        </DialogTitle>\r\n        <DialogContent sx={{ pt: 2 }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"name\"\r\n                label=\"Asset Name\"\r\n                fullWidth\r\n                value={formData.name}\r\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    borderRadius: 3\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Description (Optional)\"\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                value={formData.description}\r\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    borderRadius: 3\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"category-label\">Category</InputLabel>\r\n                <Select\r\n                  labelId=\"category-label\"\r\n                  name=\"category\"\r\n                  value={formData.category}\r\n                  onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                  label=\"Category\"\r\n                  sx={{\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3\r\n                    }\r\n                  }}\r\n                >\r\n                  {assetCategories.map(category => (\r\n                    <MenuItem key={category} value={category}>{category}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"condition-label\">Condition</InputLabel>\r\n                <Select\r\n                  labelId=\"condition-label\"\r\n                  name=\"condition\"\r\n                  value={formData.condition}\r\n                  onChange={(e) => setFormData({ ...formData, condition: e.target.value })}\r\n                  label=\"Condition\"\r\n                  sx={{\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 3\r\n                    }\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"Excellent\">Excellent</MenuItem>\r\n                  <MenuItem value=\"Good\">Good</MenuItem>\r\n                  <MenuItem value=\"Fair\">Fair</MenuItem>\r\n                  <MenuItem value=\"Poor\">Poor</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  label=\"Acquisition Date\"\r\n                  value={formData.acquisitionDate}\r\n                  onChange={(newDate) => setFormData({ ...formData, acquisitionDate: newDate })}\r\n                  slotProps={{\r\n                    textField: {\r\n                      fullWidth: true,\r\n                      margin: 'normal',\r\n                      variant: 'outlined',\r\n                      sx: {\r\n                        '& .MuiOutlinedInput-root': {\r\n                          borderRadius: 3\r\n                        }\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"purchaseValue\"\r\n                label=\"Purchase Value (RM)\"\r\n                type=\"number\"\r\n                fullWidth\r\n                value={formData.purchaseValue}\r\n                onChange={(e) => setFormData({ ...formData, purchaseValue: e.target.value })}\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                }}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    borderRadius: 3\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"currentValue\"\r\n                label=\"Current Value (RM)\"\r\n                type=\"number\"\r\n                fullWidth\r\n                value={formData.currentValue}\r\n                onChange={(e) => setFormData({ ...formData, currentValue: e.target.value })}\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                }}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    borderRadius: 3\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"location\"\r\n                label=\"Location (Optional)\"\r\n                fullWidth\r\n                value={formData.location}\r\n                onChange={(e) => setFormData({ ...formData, location: e.target.value })}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    borderRadius: 3\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions sx={{ px: 3, pb: 3, pt: 2 }}>\r\n          {!isMobile && (\r\n            <Button \r\n              onClick={() => {\r\n                setOpenDialog(false);\r\n                setViewDialog(false);\r\n                setDeleteConfirmDialog(false);\r\n              }} \r\n              variant=\"outlined\"\r\n              sx={{ borderRadius: 3, px: 3 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          )}\r\n          <Button \r\n            onClick={() => {\r\n              if (dialogMode === 'add') {\r\n                addAsset(formData);\r\n              } else {\r\n                updateAsset(selectedAsset._id, formData);\r\n              }\r\n              setOpenDialog(false);\r\n              setViewDialog(false);\r\n              setDeleteConfirmDialog(false);\r\n            }} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            fullWidth={isMobile}\r\n            sx={{ \r\n              borderRadius: 3, \r\n              px: 3,\r\n              py: 1,\r\n              boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)',\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            {dialogMode === 'add' ? 'Add Asset' : 'Update'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Mobile Fab for Adding Asset */}\r\n      {isMobile && (\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          onClick={() => {\r\n            setDialogMode('add');\r\n            setFormData({\r\n              name: '',\r\n              category: '',\r\n              purchaseValue: '',\r\n              currentValue: '',\r\n              acquisitionDate: new Date(),\r\n              description: '',\r\n              condition: 'Good',\r\n              location: '',\r\n              depreciationRate: '',\r\n              notes: ''\r\n            });\r\n            setOpenDialog(true);\r\n          }}\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: 80,\r\n            right: 16,\r\n            boxShadow: '0 4px 14px rgba(0, 122, 255, 0.5)',\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      )}\r\n      \r\n      {/* Add Delete Confirmation Dialog */}\r\n      <Dialog\r\n        open={deleteConfirmDialog}\r\n        onClose={() => {\r\n          // Only allow closing if not currently loading\r\n          if (!loading && !isDeleting) {\r\n            setDeleteConfirmDialog(false);\r\n            setError(null);\r\n          }\r\n        }}\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 4,\r\n            overflow: 'hidden',\r\n            maxWidth: '400px'\r\n          }\r\n        }}\r\n      >\r\n        {selectedAsset && (\r\n          <>\r\n            <DialogTitle sx={{ pt: 3, px: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                Delete Asset\r\n              </Typography>\r\n            </DialogTitle>\r\n            <DialogContent sx={{ px: 3, pt: 1 }}>\r\n              {error && (\r\n                <Alert \r\n                  severity=\"error\" \r\n                  sx={{ mb: 2, borderRadius: 2 }}\r\n                >\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              \r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                Are you sure you want to delete this asset?\r\n              </Typography>\r\n              \r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: 2,\r\n                  borderRadius: 3,\r\n                  backgroundColor: 'rgba(0,0,0,0.03)',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <Avatar\r\n                  sx={{\r\n                    bgcolor: `${getCategoryColor(selectedAsset.category)}.main`,\r\n                    width: 40,\r\n                    height: 40,\r\n                    mr: 2\r\n                  }}\r\n                >\r\n                  {getAssetIcon(selectedAsset.category)}\r\n                </Avatar>\r\n                <Box sx={{ flex: 1 }}>\r\n                  <Typography variant=\"subtitle2\" sx={{ fontWeight: 500, lineHeight: 1.2 }}>\r\n                    {selectedAsset.name}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {formatCurrency(selectedAsset.currentValue)} • {formatDate(selectedAsset.acquisitionDate)}\r\n                  </Typography>\r\n                </Box>\r\n              </Paper>\r\n            </DialogContent>\r\n            <DialogActions sx={{ px: 3, py: 2 }}>\r\n              <Button\r\n                onClick={() => {\r\n                  setDeleteConfirmDialog(false);\r\n                  setError(null);\r\n                }}\r\n                disabled={loading || isDeleting}\r\n                sx={{ \r\n                  borderRadius: 8, \r\n                  px: 3,\r\n                  color: 'text.secondary'\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={handleDeleteConfirm}\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                disabled={loading || isDeleting}\r\n                startIcon={loading || isDeleting ? <CircularProgress size={16} color=\"inherit\" /> : null}\r\n                sx={{ \r\n                  borderRadius: 8,\r\n                  px: 3\r\n                }}\r\n              >\r\n                {loading || isDeleting ? 'Deleting...' : 'Delete'}\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Assets; "],"names":["createSvgIcon","_jsx","d","assetCategories","Assets","assets","loadAssets","assetsLoading","assetsLoaded","loadFinancialSummary","getFinancialSummary","addAsset","updateAsset","deleteAsset","loading","error","contextError","useContext","FinancialContext","AuthContext","searchTerm","setSearchTerm","useState","categoryFilter","setCategoryFilter","statusFilter","setStatusFilter","open","setOpen","assetToCreate","setAssetToCreate","name","purchasePrice","category","purchaseDate","Date","currentValue","status","notes","currentAsset","setCurrentAsset","isEditing","setIsEditing","setError","sortDirection","setSortDirection","viewDialog","setViewDialog","selectedAsset","setSelectedAsset","deleteConfirmDialog","setDeleteConfirmDialog","assetToDelete","setAssetToDelete","filterDrawerOpen","setFilterDrawerOpen","openDialog","setOpenDialog","dialogMode","setDialogMode","formData","setFormData","purchaseValue","acquisitionDate","description","condition","location","depreciationRate","page","setPage","rowsPerPage","setRowsPerPage","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","isDeleting","setIsDeleting","useEffect","async","err","console","fetchData","_jsxs","Box","sx","display","flexDirection","justifyContent","alignItems","height","children","CircularProgress","size","thickness","mb","Typography","variant","color","filter","asset","toLowerCase","includes","slice","formatDate","dateString","toLocaleDateString","getCategoryColor","getAssetIcon","BusinessIcon","CarIcon","ComputerIcon","ApartmentIcon","InventoryIcon","HandymanIcon","StoreIcon","calculateAssetAge","ageInDays","Math","floor","years","months","Container","assetsByCategory","forEach","push","map","depreciation","calculateDepreciation","ageInYears","depreciatedValue","pow","max","p","px","component","fontWeight","fontSize","background","WebkitBackgroundClip","WebkitTextFillColor","Button","startIcon","AddIcon","onClick","borderRadius","py","boxShadow","Grid","container","spacing","item","xs","md","Card","elevation","className","overflow","backdropFilter","CardContent","width","mr","Intl","NumberFormat","style","currency","format","reduce","sum","Divider","my","length","Object","keys","TrendingUpIcon","palette","primary","main","categoryAssets","totalValue","assetCount","Paper","backgroundColor","Avatar","bgcolor","LinearProgress","value","ml","sm","position","opacity","transition","Tooltip","title","IconButton","EditIcon","DeleteIcon","CalendarIcon","mt","toFixed","Chip","label","_id","textAlign","Dialog","onClose","fullScreen","PaperProps","maxWidth","DialogTitle","pb","pt","edge","CloseIcon","DialogContent","TextField","fullWidth","onChange","e","target","multiline","rows","FormControl","InputLabel","id","Select","labelId","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newDate","slotProps","textField","margin","type","InputProps","startAdornment","InputAdornment","DialogActions","Fab","bottom","right","_Fragment","Alert","severity","flex","lineHeight","amount","minimumFractionDigits","disabled","log","message"],"sourceRoot":""}