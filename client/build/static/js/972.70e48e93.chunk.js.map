{"version":3,"file":"static/js/972.70e48e93.chunk.js","mappings":"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","sources":["pages/Revenues/Revenues.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  TextField, \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogContent, \r\n  DialogActions, \r\n  Button, \r\n  Paper, \r\n  IconButton, \r\n  Grid, \r\n  MenuItem, \r\n  Select, \r\n  FormControl, \r\n  InputLabel, \r\n  Tooltip, \r\n  CircularProgress,\r\n  useMediaQuery,\r\n  InputAdornment,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Chip,\r\n  Fab,\r\n  Slide,\r\n  Container,\r\n  Alert,\r\n  Avatar,\r\n  Stack\r\n} from '@mui/material';\r\nimport { \r\n  Add as AddIcon, \r\n  Delete as DeleteIcon, \r\n  Edit as EditIcon, \r\n  Search as SearchIcon,\r\n  ArrowUpward as ArrowUpwardIcon,\r\n  ArrowDownward as ArrowDownwardIcon,\r\n  Close as CloseIcon,\r\n  CalendarMonth as CalendarIcon, \r\n  Refresh as RefreshIcon,\r\n  Save as SaveIcon,\r\n  FilterAlt as FilterAltIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  Paid as PaidIcon,\r\n  Storefront as StorefrontIcon,\r\n  Apartment as ApartmentIcon,\r\n  AccountBalance as AccountBalanceIcon,\r\n  LocalAtm as LocalAtmIcon,\r\n  SyncAlt as SyncAltIcon,\r\n  Visibility as VisibilityIcon\r\n} from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { format } from 'date-fns';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\n\r\n// Transition component for dialogs\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst categories = [\r\n  'Sales',\r\n  'Service',\r\n  'Investment',\r\n  'Interest',\r\n  'Refund',\r\n  'Other'\r\n];\r\n\r\nconst Revenues = () => {\r\n  const { \r\n    revenues, \r\n    loadRevenues, \r\n    revenuesLoading, \r\n    revenuesLoaded,\r\n    refreshData,\r\n    addRevenue,\r\n    deleteRevenue,\r\n    updateRevenue,\r\n    loading,\r\n    error: contextError\r\n  } = useContext(FinancialContext);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [categoryFilter, setCategoryFilter] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const [revenuesToCreate, setRevenuesToCreate] = useState({\r\n    description: '',\r\n    amount: '',\r\n    category: '',\r\n    date: new Date(),\r\n    client: '',\r\n    notes: ''\r\n  });\r\n  const [currentRevenue, setCurrentRevenue] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [selectedRevenue, setSelectedRevenue] = useState(null);\r\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState(false);\r\n  const [filterDrawerOpen, setFilterDrawerOpen] = useState(false);\r\n  \r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  \r\n  useEffect(() => {\r\n    // Create a local loading tracker\r\n    let isComponentMounted = true;\r\n    let isDataFetching = false;\r\n    \r\n    const fetchData = async () => {\r\n      // Prevent duplicate fetches\r\n      if (isDataFetching) {\r\n        console.log('Already fetching revenues data, skipping request');\r\n        return;\r\n      }\r\n      \r\n      // Only fetch if data isn't already loaded or loading\r\n      if (revenuesLoaded && !revenuesLoading) {\r\n        console.log('Revenues data already loaded, skipping request');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        isDataFetching = true;\r\n        console.log('Revenues component - fetching revenues data');\r\n        \r\n        // Don't force refresh, use cached data if available\r\n        await loadRevenues(false);\r\n        \r\n        if (isComponentMounted) {\r\n          console.log('Revenues data successfully loaded');\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to load revenues:\", err);\r\n        if (isComponentMounted) {\r\n          setError(\"Failed to load revenues. Please try the refresh button.\");\r\n        }\r\n      } finally {\r\n        isDataFetching = false;\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n    \r\n    // Cleanup function to prevent state updates after unmount\r\n    return () => {\r\n      isComponentMounted = false;\r\n    };\r\n  }, [loadRevenues, revenuesLoaded, revenuesLoading]);\r\n  \r\n  // Filter and sort revenues\r\n  const filteredRevenues = revenues\r\n    .filter(revenue => {\r\n      const matchesSearch = \r\n        revenue.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        revenue.source.toLowerCase().includes(searchTerm.toLowerCase());\r\n      \r\n      const matchesCategory = categoryFilter ? revenue.category === categoryFilter : true;\r\n      \r\n      return matchesSearch && matchesCategory;\r\n    })\r\n    .sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n      return sortDirection === 'desc' ? dateB - dateA : dateA - dateB;\r\n    });\r\n    \r\n  // Calculate total revenue from filtered items\r\n  const totalFilteredRevenue = filteredRevenues.reduce((sum, revenue) => sum + revenue.amount, 0);\r\n  \r\n  // Calculate revenue by category\r\n  const revenueByCategory = categories.map(category => {\r\n    const amount = filteredRevenues\r\n      .filter(rev => rev.category === category)\r\n      .reduce((sum, rev) => sum + rev.amount, 0);\r\n    \r\n    return { category, amount };\r\n  }).sort((a, b) => b.amount - a.amount);\r\n  \r\n  // Get category icon\r\n  const getCategoryIcon = (category) => {\r\n    switch(category) {\r\n      case 'Sales': return <StorefrontIcon />;\r\n      case 'Service': return <PaidIcon />;\r\n      case 'Investment': return <ApartmentIcon />;\r\n      case 'Interest': return <AccountBalanceIcon />;\r\n      case 'Refund': return <SyncAltIcon />;\r\n      default: return <LocalAtmIcon />;\r\n    }\r\n  };\r\n  \r\n  // Get category color for visual representation\r\n  const getCategoryColor = (category) => {\r\n    switch(category) {\r\n      case 'Sales': return 'success';\r\n      case 'Service': return 'primary';\r\n      case 'Investment': return 'secondary';\r\n      case 'Interest': return 'warning';\r\n      case 'Refund': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n  \r\n  // Format date function\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      return format(new Date(dateString), 'dd MMM yyyy');\r\n    } catch (error) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  // Format currency function\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount || 0);\r\n  };\r\n  \r\n  const resetForm = () => {\r\n    setRevenuesToCreate({\r\n      description: '',\r\n      amount: '',\r\n      category: '',\r\n      date: new Date(),\r\n      client: '',\r\n      notes: ''\r\n    });\r\n    setIsEditing(false);\r\n    setCurrentRevenue(null);\r\n  };\r\n  \r\n  const handleOpenDialog = () => {\r\n    resetForm();\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    resetForm();\r\n  };\r\n  \r\n  const handleChange = (e) => {\r\n    setRevenuesToCreate({ ...revenuesToCreate, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  const handleDateChange = (newDate) => {\r\n    setRevenuesToCreate({ ...revenuesToCreate, date: newDate });\r\n  };\r\n  \r\n  const handleSubmit = async () => {\r\n    // Validate form inputs\r\n    if (!revenuesToCreate.amount || !revenuesToCreate.description || !revenuesToCreate.date) {\r\n      alert(\"Please fill in all required fields\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      if (isEditing) {\r\n        await updateRevenue(currentRevenue._id, {\r\n          ...revenuesToCreate,\r\n          amount: parseFloat(revenuesToCreate.amount)\r\n        });\r\n      } else {\r\n        await addRevenue({\r\n          ...revenuesToCreate,\r\n          amount: parseFloat(revenuesToCreate.amount)\r\n        });\r\n      }\r\n      \r\n      handleCloseDialog();\r\n    } catch (error) {\r\n      console.error(\"Error saving revenue:\", error);\r\n      alert(\"Error saving revenue. Please try again.\");\r\n    }\r\n  };\r\n  \r\n  const handleEdit = (revenue) => {\r\n    setRevenuesToCreate({\r\n      date: new Date(revenue.date),\r\n      amount: revenue.amount.toString(),\r\n      description: revenue.description,\r\n      category: revenue.category,\r\n      source: revenue.source\r\n    });\r\n    setIsEditing(true);\r\n    setCurrentRevenue(revenue);\r\n    setOpen(true);\r\n  };\r\n  \r\n  const handleDeleteClick = (revenue) => {\r\n    setSelectedRevenue(revenue);\r\n    setDeleteConfirmDialog(true);\r\n  };\r\n  \r\n  // Handle revenue delete confirmation\r\n  const handleDeleteConfirm = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null); // Clear any previous errors\r\n      \r\n      console.log(`Attempting to delete revenue with ID: ${selectedRevenue._id}`);\r\n      \r\n      // Keep the dialog open during deletion attempt\r\n      const result = await deleteRevenue(selectedRevenue._id);\r\n      console.log(`Delete revenue result: ${result}`);\r\n      \r\n      if (result) {\r\n        console.log('Revenue deleted successfully, closing dialog');\r\n        setDeleteConfirmDialog(false);\r\n        // No need to force a refresh as the deleteRevenue function should have updated the state\r\n      } else {\r\n        // Error was set in the context\r\n        console.error(`Delete revenue failed: ${contextError || 'No specific error provided'}`);\r\n        \r\n        // Keep dialog open to show error\r\n        if (contextError) {\r\n          setError(contextError);\r\n        } else {\r\n          setError(\"Failed to delete revenue. Please try again later.\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in handleDeleteConfirm:\", err);\r\n      setError(`Failed to delete revenue: ${err.message || 'An unexpected error occurred'}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleSortToggle = () => {\r\n    setSortDirection(sortDirection === 'desc' ? 'asc' : 'desc');\r\n  };\r\n  \r\n  // This function is used in several places in the UI\r\n  const handleClearFilters = () => {\r\n    setSearchTerm('');\r\n    setCategoryFilter('');\r\n  };\r\n  \r\n  // Handle revenue view\r\n  const handleViewClick = (revenue) => {\r\n    setSelectedRevenue(revenue);\r\n    setViewDialog(true);\r\n  };\r\n  \r\n  // Show loading indicator when data is loading\r\n  if (revenuesLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress size={60} thickness={4} sx={{ mb: 2 }} />\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Loading Revenues Data...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  // Enhanced error message with iOS-style design\r\n  if (error) {\r\n    return (\r\n      <Container sx={{ py: 4 }}>\r\n        <Alert \r\n          severity=\"error\" \r\n          variant=\"filled\"\r\n          action={\r\n            <Button \r\n              color=\"inherit\" \r\n              size=\"small\" \r\n              onClick={() => loadRevenues()}\r\n              startIcon={<RefreshIcon />}\r\n            >\r\n              Retry\r\n            </Button>\r\n          }\r\n          sx={{ \r\n            borderRadius: 4,\r\n            boxShadow: '0 4px 12px rgba(211, 47, 47, 0.2)'\r\n          }}\r\n        >\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Container disableGutters={isMobile} sx={{ pb: isMobile ? 7 : 3 }}>\r\n        {/* Header Section with Gradient Background */}\r\n        <Box sx={{ \r\n          pt: isMobile ? 2 : 3, \r\n          pb: 2,\r\n          px: isMobile ? 2 : 3,\r\n          background: theme.palette.mode === 'dark' \r\n            ? `linear-gradient(135deg, ${theme.palette.success.dark}, ${theme.palette.primary.dark})` \r\n            : `linear-gradient(135deg, ${theme.palette.success.main}, ${theme.palette.primary.main})`,\r\n          borderRadius: isMobile ? '0 0 24px 24px' : '0 0 16px 16px',\r\n          mb: 3,\r\n          color: 'white',\r\n          boxShadow: '0 4px 20px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: isMobile ? 1 : 2 }}>\r\n            <Typography \r\n              variant={isMobile ? \"h5\" : \"h4\"} \r\n              sx={{ \r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              Revenues\r\n            </Typography>\r\n            {!isMobile && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => handleOpenDialog()}\r\n                sx={{ \r\n                  borderRadius: 8,\r\n                  px: 3,\r\n                  py: 1,\r\n                  bgcolor: 'white',\r\n                  color: theme.palette.success.main,\r\n                  '&:hover': {\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                  },\r\n                  boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                }}\r\n              >\r\n                Add Revenue\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          \r\n          {/* Summary for Desktop */}\r\n          {!isMobile && (\r\n            <Grid container spacing={2} sx={{ mt: 1 }}>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper \r\n                  elevation={2}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderRadius: 4,\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ bgcolor: theme.palette.success.main, mr: 2 }}>\r\n                    <AttachMoneyIcon />\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Total Revenue</Typography>\r\n                    <Typography variant=\"h6\" color=\"success.main\" sx={{ fontWeight: 'bold' }}>\r\n                      {formatCurrency(totalFilteredRevenue)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Paper \r\n                  elevation={2}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderRadius: 4,\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  <Avatar sx={{ bgcolor: theme.palette.primary.main, mr: 2 }}>\r\n                    <CalendarIcon />\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">This Month</Typography>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                      {formatCurrency(revenues\r\n                        .filter(e => new Date(e.date).getMonth() === new Date().getMonth())\r\n                        .reduce((sum, e) => sum + e.amount, 0)\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} md={4}>\r\n                <Paper \r\n                  elevation={2}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderRadius: 4,\r\n                    bgcolor: 'rgba(255,255,255,0.9)',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'flex-start',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.1)'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>Top Category</Typography>\r\n                  {revenueByCategory.length > 0 && revenueByCategory[0].amount > 0 ? (\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>\r\n                      <Chip \r\n                        icon={getCategoryIcon(revenueByCategory[0].category)} \r\n                        label={revenueByCategory[0].category}\r\n                        color={getCategoryColor(revenueByCategory[0].category)} \r\n                        sx={{ mr: 1 }}\r\n                      />\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 'bold', ml: 'auto' }}>\r\n                        {formatCurrency(revenueByCategory[0].amount)}\r\n                      </Typography>\r\n                    </Box>\r\n                  ) : (\r\n                    <Typography variant=\"body1\">No revenues yet</Typography>\r\n                  )}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Summary for Mobile */}\r\n        {isMobile && (\r\n          <Box sx={{ px: 2, mb: 3 }}>\r\n            <Card \r\n              elevation={2}\r\n              sx={{ \r\n                borderRadius: 4,\r\n                overflow: 'hidden',\r\n                boxShadow: '0 2px 10px rgba(0,0,0,0.08)'\r\n              }}\r\n            >\r\n              <CardContent sx={{ p: 2 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Total Revenue</Typography>\r\n                  <Chip\r\n                    label={`${revenues.length} items`}\r\n                    size=\"small\"\r\n                    sx={{ \r\n                      height: 24, \r\n                      '& .MuiChip-label': { px: 1, py: 0 },\r\n                      fontWeight: 500,\r\n                      bgcolor: 'rgba(0,0,0,0.05)' \r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Typography variant=\"h4\" sx={{ fontWeight: 700, color: 'success.main', my: 1 }}>\r\n                  {formatCurrency(totalFilteredRevenue)}\r\n                </Typography>\r\n                \r\n                <Divider sx={{ my: 1.5 }} />\r\n                \r\n                {revenueByCategory.filter(cat => cat.amount > 0).length > 0 ? (\r\n                  <Stack spacing={1}>\r\n                    {revenueByCategory\r\n                      .filter(cat => cat.amount > 0)\r\n                      .slice(0, 2)\r\n                      .map(({category, amount}) => (\r\n                        <Box key={category} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Box \r\n                              sx={{ \r\n                                borderRadius: '8px', \r\n                                p: 0.5, \r\n                                mr: 1,\r\n                                bgcolor: `${getCategoryColor(category)}.light`,\r\n                                color: `${getCategoryColor(category)}.main`,\r\n                                display: 'flex'\r\n                              }}\r\n                            >\r\n                              {getCategoryIcon(category)}\r\n                            </Box>\r\n                            <Typography variant=\"body2\">{category}</Typography>\r\n                          </Box>\r\n                          <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                            {formatCurrency(amount)}\r\n                          </Typography>\r\n                        </Box>\r\n                      ))}\r\n                  </Stack>\r\n                ) : (\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 1 }}>\r\n                    No revenues recorded yet\r\n                  </Typography>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Search and Filter Section */}\r\n        <Box sx={{ \r\n          mb: 3, \r\n          px: isMobile ? 2 : 0\r\n        }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search revenues\"\r\n                variant=\"outlined\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  sx: {\r\n                    borderRadius: 8,\r\n                    backgroundColor: 'white',\r\n                    '& fieldset': {\r\n                      borderColor: 'rgba(0, 0, 0, 0.08)',\r\n                    },\r\n                    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.05)'\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            \r\n            {!isMobile && (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel>Filter by Category</InputLabel>\r\n                  <Select\r\n                    value={categoryFilter}\r\n                    onChange={(e) => setCategoryFilter(e.target.value)}\r\n                    label=\"Filter by Category\"\r\n                    sx={{\r\n                      borderRadius: 8,\r\n                      backgroundColor: 'white',\r\n                      boxShadow: '0 2px 8px rgba(0, 0, 0, 0.05)'\r\n                    }}\r\n                    startAdornment={\r\n                      categoryFilter ? (\r\n                        <InputAdornment position=\"start\" sx={{ ml: 1 }}>\r\n                          {getCategoryIcon(categoryFilter)}\r\n                        </InputAdornment>\r\n                      ) : null\r\n                    }\r\n                  >\r\n                    <MenuItem value=\"\">All Categories</MenuItem>\r\n                    {categories.map(category => (\r\n                      <MenuItem key={category} value={category}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Box sx={{ mr: 1.5, color: `${getCategoryColor(category)}.main`, display: 'flex' }}>\r\n                            {getCategoryIcon(category)}\r\n                          </Box>\r\n                          {category}\r\n                        </Box>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            )}\r\n            \r\n            <Grid item xs={12} sm={12} md={4} sx={{ display: 'flex', justifyContent: { xs: 'space-between', md: 'flex-end' }, gap: 1 }}>\r\n              {!isMobile && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={handleSortToggle}\r\n                  startIcon={sortDirection === 'desc' ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\r\n                  sx={{ \r\n                    borderRadius: 8,\r\n                    py: 1.2,\r\n                    px: 2,\r\n                    borderWidth: 1,\r\n                    mr: 1\r\n                  }}\r\n                >\r\n                  {sortDirection === 'desc' ? 'Newest' : 'Oldest'}\r\n                </Button>\r\n              )}\r\n              \r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                startIcon={<AddIcon />}\r\n                onClick={handleOpenDialog}\r\n                fullWidth={isMobile}\r\n                size={isMobile ? \"large\" : \"medium\"}\r\n                sx={{\r\n                  borderRadius: 8,\r\n                  py: isMobile ? 1.5 : 1.2,\r\n                  boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)'\r\n                }}\r\n              >\r\n                Add Revenue\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        \r\n        {/* Filter Chips - Mobile */}\r\n        {isMobile && (\r\n          <Box sx={{ px: 2, mb: 2, overflow: 'auto' }}>\r\n            <Box sx={{ display: 'flex', gap: 1, pb: 0.5 }}>\r\n              <Chip\r\n                label=\"All\"\r\n                color={categoryFilter === '' ? 'primary' : 'default'}\r\n                onClick={() => setCategoryFilter('')}\r\n                sx={{ borderRadius: 8 }}\r\n              />\r\n              {categories.map(category => (\r\n                <Chip\r\n                  key={category}\r\n                  label={category}\r\n                  icon={getCategoryIcon(category)}\r\n                  color={categoryFilter === category ? getCategoryColor(category) : 'default'}\r\n                  variant={categoryFilter === category ? \"filled\" : \"outlined\"}\r\n                  onClick={() => setCategoryFilter(categoryFilter === category ? '' : category)}\r\n                  sx={{ borderRadius: 8 }}\r\n                />\r\n              ))}\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleSortToggle}\r\n                startIcon={sortDirection === 'desc' ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\r\n                size=\"small\"\r\n                sx={{ borderRadius: 8, mr: 'auto' }}\r\n              >\r\n                {sortDirection === 'desc' ? 'Newest First' : 'Oldest First'}\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Mobile Filter Button */}\r\n        {isMobile && (\r\n          <Box sx={{ position: 'fixed', bottom: 85, right: 16, zIndex: 10 }}>\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"filter\"\r\n              onClick={() => setFilterDrawerOpen(true)}\r\n              sx={{ boxShadow: '0 4px 12px rgba(0, 122, 255, 0.5)' }}\r\n            >\r\n              <FilterAltIcon />\r\n            </Fab>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Revenues List - Desktop View */}\r\n        {!isMobile && filteredRevenues.length > 0 && (\r\n          <Box sx={{ mb: 3 }}>\r\n            <Grid container spacing={3}>\r\n              {filteredRevenues.map((revenue) => (\r\n                <Grid item xs={12} sm={6} md={4} key={revenue._id}>\r\n                  <Card\r\n                    elevation={1}\r\n                    sx={{ \r\n                      borderRadius: 4,\r\n                      overflow: 'hidden',\r\n                      transition: 'transform 0.2s, box-shadow 0.2s',\r\n                      '&:hover': {\r\n                        boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\r\n                        transform: 'translateY(-2px)'\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box \r\n                      sx={{ \r\n                        height: 6, \r\n                        width: '100%', \r\n                        bgcolor: `${getCategoryColor(revenue.category)}.main` \r\n                      }} \r\n                    />\r\n                    <CardContent sx={{ p: 3 }}>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Avatar\r\n                            sx={{\r\n                              bgcolor: `${getCategoryColor(revenue.category)}.main`,\r\n                              width: 36,\r\n                              height: 36,\r\n                              mr: 1.5\r\n                            }}\r\n                          >\r\n                            {getCategoryIcon(revenue.category)}\r\n                          </Avatar>\r\n                          <Box>\r\n                            <Chip\r\n                              label={revenue.category}\r\n                              size=\"small\"\r\n                              color={getCategoryColor(revenue.category)}\r\n                              sx={{ \r\n                                height: 20, \r\n                                '& .MuiChip-label': { px: 1, fontSize: '0.7rem', fontWeight: 600 } \r\n                              }}\r\n                            />\r\n                            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5 }}>\r\n                              {formatDate(revenue.date)}\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                        <Typography \r\n                          variant=\"h6\" \r\n                          sx={{ \r\n                            fontWeight: 700, \r\n                            color: 'success.main',\r\n                            ml: 1 \r\n                          }}\r\n                        >\r\n                          {formatCurrency(revenue.amount)}\r\n                        </Typography>\r\n                      </Box>\r\n                      \r\n                      <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 0.5 }}>\r\n                          {revenue.description}\r\n                        </Typography>\r\n                        {revenue.source && (\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Source: {revenue.source}\r\n                          </Typography>\r\n                        )}\r\n                      </Box>\r\n                      \r\n                      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\r\n                        <Tooltip title=\"View\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleViewClick(revenue);\r\n                            }}\r\n                            sx={{ \r\n                              backgroundColor: 'rgba(0,0,0,0.04)',\r\n                              '&:hover': { backgroundColor: 'rgba(0,0,0,0.08)' },\r\n                              mr: 1\r\n                            }}\r\n                          >\r\n                            <VisibilityIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Edit\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleEdit(revenue);\r\n                            }}\r\n                            sx={{ \r\n                              backgroundColor: 'rgba(0,0,0,0.04)',\r\n                              '&:hover': { backgroundColor: 'rgba(0,0,0,0.08)' },\r\n                              mr: 1\r\n                            }}\r\n                          >\r\n                            <EditIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                          <IconButton \r\n                            size=\"small\" \r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleDeleteClick(revenue);\r\n                            }}\r\n                            sx={{ \r\n                              color: 'error.main',\r\n                              backgroundColor: 'rgba(211,47,47,0.04)',\r\n                              '&:hover': { backgroundColor: 'rgba(211,47,47,0.08)' }\r\n                            }}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Empty State */}\r\n        {filteredRevenues.length === 0 && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              p: 4,\r\n              my: 4,\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            <Avatar\r\n              sx={{\r\n                width: 80,\r\n                height: 80,\r\n                mb: 2,\r\n                bgcolor: 'primary.light',\r\n                color: 'primary.main'\r\n              }}\r\n            >\r\n              <AttachMoneyIcon sx={{ fontSize: 40 }} />\r\n            </Avatar>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              No revenues found\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2, maxWidth: 300 }}>\r\n              {searchTerm || categoryFilter \r\n                ? \"Try adjusting your search or filters\" \r\n                : \"You haven't added any revenues yet. Start by adding your first revenue.\"}\r\n            </Typography>\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleOpenDialog}\r\n              sx={{ borderRadius: 8, px: 3 }}\r\n            >\r\n              Add Revenue\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Revenue Add/Edit Dialog */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleCloseDialog}\r\n          fullScreen={isMobile}\r\n          TransitionComponent={Transition}\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: isMobile ? 0 : 4,\r\n              overflow: 'hidden',\r\n              backgroundImage: theme.palette.mode === 'dark' \r\n                ? `linear-gradient(to bottom, ${theme.palette.background.paper}, ${theme.palette.background.paper})`\r\n                : 'linear-gradient(to bottom, rgba(255,255,255,0.95), rgba(255,255,255,1))',\r\n              boxShadow: '0 0 20px rgba(0,0,0,0.1)',\r\n              width: isMobile ? '100%' : '550px',\r\n              maxHeight: isMobile ? '100%' : '85vh'\r\n            }\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              px: 3,\r\n              pt: 2,\r\n              pb: 1,\r\n              bgcolor: theme.palette.mode === 'dark' \r\n                ? `linear-gradient(135deg, ${theme.palette.success.dark}, ${theme.palette.primary.dark})`\r\n                : `linear-gradient(135deg, ${theme.palette.success.main}, ${theme.palette.primary.main})`,\r\n              color: 'white',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <DialogTitle sx={{ p: 0, fontSize: '1.2rem', fontWeight: 600 }}>\r\n              {isEditing ? 'Edit Revenue' : 'Add New Revenue'}\r\n            </DialogTitle>\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseDialog}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <DialogContent sx={{ px: 3, pt: 3, pb: 1, overflowY: 'auto' }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  value={revenuesToCreate.description}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  autoFocus\r\n                  InputProps={{\r\n                    sx: {\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  name=\"amount\"\r\n                  label=\"Amount (MYR)\"\r\n                  value={revenuesToCreate.amount}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  type=\"number\"\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">RM</InputAdornment>,\r\n                    sx: {\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth variant=\"outlined\" required>\r\n                  <InputLabel>Category</InputLabel>\r\n                  <Select\r\n                    name=\"category\"\r\n                    label=\"Category\"\r\n                    value={revenuesToCreate.category}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }}\r\n                  >\r\n                    {categories.map(category => (\r\n                      <MenuItem key={category} value={category}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Box sx={{ mr: 1.5, color: `${getCategoryColor(category)}.main`, display: 'flex' }}>\r\n                            {getCategoryIcon(category)}\r\n                          </Box>\r\n                          {category}\r\n                        </Box>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <DatePicker\r\n                  label=\"Date\"\r\n                  value={revenuesToCreate.date}\r\n                  onChange={handleDateChange}\r\n                  slotProps={{\r\n                    textField: {\r\n                      fullWidth: true,\r\n                      variant: 'outlined',\r\n                      sx: {\r\n                        '& .MuiInputBase-root': {\r\n                          borderRadius: 2,\r\n                          backgroundColor: 'rgba(0,0,0,0.02)'\r\n                        }\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  label=\"Source (Optional)\"\r\n                  value={revenuesToCreate.source}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    sx: {\r\n                      borderRadius: 2,\r\n                      backgroundColor: 'rgba(0,0,0,0.02)'\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions sx={{ px: 3, py: 2, justifyContent: 'flex-end' }}>\r\n            <Button \r\n              onClick={handleCloseDialog}\r\n              sx={{ \r\n                borderRadius: 8,\r\n                px: 3,\r\n                color: 'text.secondary',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(0,0,0,0.05)'\r\n                }\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={handleSubmit}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<SaveIcon />}\r\n              sx={{ \r\n                borderRadius: 8,\r\n                px: 3,\r\n                boxShadow: '0 4px 10px rgba(0, 122, 255, 0.3)'\r\n              }}\r\n            >\r\n              {isEditing ? 'Save Changes' : 'Add Revenue'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        {/* View Revenue Dialog */}\r\n        <Dialog\r\n          open={viewDialog}\r\n          onClose={() => setViewDialog(false)}\r\n          fullScreen={isMobile}\r\n          TransitionComponent={Transition}\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: isMobile ? 0 : 4,\r\n              overflow: 'hidden',\r\n              width: isMobile ? '100%' : '500px',\r\n              backgroundImage: theme.palette.mode === 'dark' \r\n                ? `linear-gradient(to bottom, ${theme.palette.background.paper}, ${theme.palette.background.paper})`\r\n                : 'linear-gradient(to bottom, rgba(255,255,255,0.95), rgba(255,255,255,1))',\r\n              boxShadow: '0 0 20px rgba(0,0,0,0.1)'\r\n            }\r\n          }}\r\n        >\r\n          {selectedRevenue && (\r\n            <>\r\n              <Box\r\n                sx={{\r\n                  px: 3,\r\n                  pt: 2,\r\n                  pb: 1,\r\n                  bgcolor: theme.palette.mode === 'dark' \r\n                    ? `linear-gradient(135deg, ${theme.palette.success.dark}, ${theme.palette.primary.dark})`\r\n                    : `linear-gradient(135deg, ${theme.palette.success.main}, ${theme.palette.primary.main})`,\r\n                  color: 'white',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <DialogTitle sx={{ p: 0, fontSize: '1.2rem', fontWeight: 600 }}>\r\n                  Revenue Details\r\n                </DialogTitle>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  onClick={() => setViewDialog(false)}\r\n                  aria-label=\"close\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <DialogContent sx={{ px: 3, pt: 3, pb: 0 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: `${getCategoryColor(selectedRevenue.category)}.main`,\r\n                      width: 56,\r\n                      height: 56,\r\n                      mr: 2\r\n                    }}\r\n                  >\r\n                    {getCategoryIcon(selectedRevenue.category)}\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, lineHeight: 1.2 }}>\r\n                      {selectedRevenue.description}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={selectedRevenue.category}\r\n                      color={getCategoryColor(selectedRevenue.category)}\r\n                      size=\"small\"\r\n                      sx={{ mt: 0.5 }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 2,\r\n                    mb: 3,\r\n                    borderRadius: 3,\r\n                    backgroundColor: 'rgba(0,0,0,0.03)',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Amount\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" color=\"success.main\" sx={{ fontWeight: 700 }}>\r\n                    {formatCurrency(selectedRevenue.amount)}\r\n                  </Typography>\r\n                </Paper>\r\n                \r\n                <Grid container spacing={2} sx={{ mb: 2 }}>\r\n                  <Grid item xs={12}>\r\n                    <Paper\r\n                      elevation={0}\r\n                      sx={{\r\n                        p: 2,\r\n                        borderRadius: 3,\r\n                        backgroundColor: 'rgba(0,0,0,0.03)',\r\n                        height: '100%'\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Date\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                        {formatDate(selectedRevenue.date)}\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                {selectedRevenue.source && (\r\n                  <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                      Source\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      {selectedRevenue.source}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </DialogContent>\r\n              <DialogActions sx={{ px: 3, py: 2, justifyContent: 'space-between' }}>\r\n                <Button\r\n                  color=\"error\"\r\n                  startIcon={<DeleteIcon />}\r\n                  onClick={() => {\r\n                    handleDeleteClick(selectedRevenue);\r\n                    setViewDialog(false);\r\n                  }}\r\n                  sx={{ borderRadius: 8 }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<EditIcon />}\r\n                  onClick={() => {\r\n                    handleEdit(selectedRevenue);\r\n                    setViewDialog(false);\r\n                  }}\r\n                  sx={{ borderRadius: 8 }}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Dialog>\r\n        \r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog\r\n          open={deleteConfirmDialog}\r\n          onClose={() => {\r\n            // Only allow closing if not currently loading\r\n            if (!loading && !isLoading) {\r\n              setDeleteConfirmDialog(false);\r\n              setError(null);\r\n            }\r\n          }}\r\n          TransitionComponent={Transition}\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 4,\r\n              overflow: 'hidden',\r\n              maxWidth: '400px'\r\n            }\r\n          }}\r\n        >\r\n          {selectedRevenue && (\r\n            <>\r\n              <DialogTitle sx={{ pt: 3, px: 3 }}>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                  Delete Revenue\r\n                </Typography>\r\n              </DialogTitle>\r\n              <DialogContent sx={{ px: 3, pt: 1 }}>\r\n                {error && (\r\n                  <Alert \r\n                    severity=\"error\" \r\n                    sx={{ mb: 2, borderRadius: 2 }}\r\n                    action={\r\n                      <Button \r\n                        color=\"inherit\" \r\n                        size=\"small\"\r\n                        onClick={() => setError(null)}\r\n                      >\r\n                        Dismiss\r\n                      </Button>\r\n                    }\r\n                  >\r\n                    {error}\r\n                  </Alert>\r\n                )}\r\n                \r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  Are you sure you want to delete this revenue?\r\n                </Typography>\r\n                \r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: 3,\r\n                    backgroundColor: 'rgba(0,0,0,0.03)',\r\n                    display: 'flex',\r\n                    alignItems: 'center'\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: `${getCategoryColor(selectedRevenue.category)}.main`,\r\n                      width: 40,\r\n                      height: 40,\r\n                      mr: 2\r\n                    }}\r\n                  >\r\n                    {getCategoryIcon(selectedRevenue.category)}\r\n                  </Avatar>\r\n                  <Box sx={{ flex: 1 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ fontWeight: 500, lineHeight: 1.2 }}>\r\n                      {selectedRevenue.description}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {formatCurrency(selectedRevenue.amount)} • {formatDate(selectedRevenue.date)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </DialogContent>\r\n              <DialogActions sx={{ px: 3, py: 2 }}>\r\n                <Button\r\n                  onClick={() => {\r\n                    setDeleteConfirmDialog(false);\r\n                    setError(null);\r\n                  }}\r\n                  disabled={loading || isLoading}\r\n                  sx={{ \r\n                    borderRadius: 8, \r\n                    px: 3,\r\n                    color: 'text.secondary'\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleDeleteConfirm}\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  disabled={loading || isLoading}\r\n                  startIcon={loading || isLoading ? <CircularProgress size={16} color=\"inherit\" /> : null}\r\n                  sx={{ \r\n                    borderRadius: 8,\r\n                    px: 3\r\n                  }}\r\n                >\r\n                  {loading || isLoading ? 'Deleting...' : 'Delete'}\r\n                </Button>\r\n              </DialogActions>\r\n            </>\r\n          )}\r\n        </Dialog>\r\n        \r\n        {/* Add Revenue FAB for Mobile */}\r\n        {isMobile && (\r\n          <Box sx={{ position: 'fixed', bottom: 16, right: 16, zIndex: 10 }}>\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add revenue\"\r\n              onClick={handleOpenDialog}\r\n              sx={{ \r\n                boxShadow: '0 4px 12px rgba(0, 122, 255, 0.5)',\r\n                '&:hover': {\r\n                  bgcolor: 'primary.dark'\r\n                }\r\n              }}\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </LocalizationProvider>\r\n  );\r\n};\r\n\r\nexport default Revenues; "],"names":["Transition","React","props","ref","_jsx","Slide","direction","categories","Revenues","revenues","loadRevenues","revenuesLoading","revenuesLoaded","refreshData","addRevenue","deleteRevenue","updateRevenue","loading","error","contextError","useContext","FinancialContext","searchTerm","setSearchTerm","useState","categoryFilter","setCategoryFilter","open","setOpen","revenuesToCreate","setRevenuesToCreate","description","amount","category","date","Date","client","notes","currentRevenue","setCurrentRevenue","isEditing","setIsEditing","isLoading","setIsLoading","setError","sortDirection","setSortDirection","viewDialog","setViewDialog","selectedRevenue","setSelectedRevenue","deleteConfirmDialog","setDeleteConfirmDialog","filterDrawerOpen","setFilterDrawerOpen","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","isComponentMounted","isDataFetching","async","console","log","err","fetchData","filteredRevenues","filter","revenue","matchesSearch","toLowerCase","includes","source","matchesCategory","sort","a","b","dateA","dateB","totalFilteredRevenue","reduce","sum","revenueByCategory","map","rev","getCategoryIcon","StorefrontIcon","PaidIcon","ApartmentIcon","AccountBalanceIcon","SyncAltIcon","LocalAtmIcon","getCategoryColor","formatDate","dateString","format","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","resetForm","handleOpenDialog","handleCloseDialog","handleChange","e","target","name","value","handleEdit","toString","handleDeleteClick","handleSortToggle","_jsxs","Box","sx","display","flexDirection","justifyContent","alignItems","height","children","CircularProgress","size","thickness","mb","Typography","variant","color","Container","py","Alert","severity","action","Button","onClick","startIcon","RefreshIcon","borderRadius","boxShadow","LocalizationProvider","dateAdapter","AdapterDateFns","disableGutters","pb","pt","px","background","palette","mode","success","dark","primary","main","fontWeight","AddIcon","bgcolor","Grid","container","spacing","mt","item","xs","md","Paper","elevation","p","backdropFilter","Avatar","mr","AttachMoneyIcon","CalendarIcon","getMonth","length","width","Chip","icon","label","ml","Card","overflow","CardContent","my","Divider","cat","Stack","slice","_ref","textAlign","sm","TextField","fullWidth","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","SearchIcon","backgroundColor","borderColor","FormControl","InputLabel","Select","MenuItem","gap","ArrowDownwardIcon","ArrowUpwardIcon","borderWidth","bottom","right","zIndex","Fab","FilterAltIcon","transition","transform","fontSize","Tooltip","title","IconButton","stopPropagation","handleViewClick","VisibilityIcon","EditIcon","DeleteIcon","_id","gutterBottom","maxWidth","Dialog","onClose","fullScreen","TransitionComponent","PaperProps","backgroundImage","paper","maxHeight","DialogTitle","edge","CloseIcon","DialogContent","overflowY","required","autoFocus","type","DatePicker","newDate","slotProps","textField","DialogActions","parseFloat","alert","SaveIcon","_Fragment","lineHeight","flex","disabled","result","message"],"sourceRoot":""}