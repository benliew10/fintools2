{"version":3,"file":"static/js/985.46fa2b14.chunk.js","mappings":"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","sources":["components/FinanceSummary/FinanceSummary.jsx","components/RecentTransactions/RecentTransactions.jsx","pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Box, Typography, Grid, Avatar, Divider } from '@mui/material';\r\nimport { \r\n  TrendingUp as TrendingUpIcon,\r\n  MonetizationOn as MonetizationOnIcon,\r\n  ShoppingCart as ShoppingCartIcon,\r\n  AccountBalance as AccountBalanceIcon\r\n} from '@mui/icons-material';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\n\r\nconst FinanceSummary = ({ isMobile }) => {\r\n  const { financialSummary } = useContext(FinancialContext);\r\n\r\n  // Format currency function\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount || 0);\r\n  };\r\n\r\n  const summaryItems = [\r\n    { \r\n      title: 'Total Revenue', \r\n      value: formatCurrency(financialSummary.totalRevenue || 0),\r\n      icon: <MonetizationOnIcon />,\r\n      color: '#34C759'\r\n    },\r\n    { \r\n      title: 'Total Expenses', \r\n      value: formatCurrency(financialSummary.totalExpenses || 0),\r\n      icon: <ShoppingCartIcon />,\r\n      color: '#FF3B30'\r\n    },\r\n    { \r\n      title: 'Net Profit', \r\n      value: formatCurrency((financialSummary.totalRevenue || 0) - (financialSummary.totalExpenses || 0)),\r\n      icon: <TrendingUpIcon />,\r\n      color: '#007AFF'\r\n    },\r\n    { \r\n      title: 'Asset Value', \r\n      value: formatCurrency(financialSummary.totalAssets || 0),\r\n      icon: <AccountBalanceIcon />,\r\n      color: '#5856D6'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ p: 3, pt: 2 }}>\r\n      <Grid container spacing={isMobile ? 2 : 3}>\r\n        {summaryItems.map((item, index) => (\r\n          <Grid item xs={12} sm={6} key={index}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                mb: 2\r\n              }}\r\n            >\r\n              <Avatar\r\n                sx={{\r\n                  bgcolor: `${item.color}20`,\r\n                  color: item.color,\r\n                  mr: 2\r\n                }}\r\n              >\r\n                {item.icon}\r\n              </Avatar>\r\n              <Box>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {item.title}\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                  {item.value}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            {isMobile && index < summaryItems.length - 1 && <Divider sx={{ opacity: 0.6, mb: 2 }} />}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FinanceSummary; ","import React, { useContext } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemAvatar, \r\n  ListItemText, \r\n  Avatar, \r\n  Divider,\r\n  Chip\r\n} from '@mui/material';\r\nimport { \r\n  TrendingUp as TrendingUpIcon, \r\n  TrendingDown as TrendingDownIcon,\r\n  CalendarToday as CalendarIcon\r\n} from '@mui/icons-material';\r\nimport { format } from 'date-fns';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\n\r\nconst RecentTransactions = ({ isMobile }) => {\r\n  const { revenues, expenses } = useContext(FinancialContext);\r\n\r\n  // Format currency function\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n\r\n  // Format date function\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      return format(new Date(dateString), 'dd MMM yyyy');\r\n    } catch (error) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n\r\n  // Combine revenues and expenses\r\n  const transactions = [\r\n    ...revenues.map(r => ({ ...r, type: 'revenue' })),\r\n    ...expenses.map(e => ({ ...e, type: 'expense' }))\r\n  ]\r\n  // Sort by date (newest first)\r\n  .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n  // Take only the first 5 transactions\r\n  .slice(0, 5);\r\n\r\n  return (\r\n    <Box>\r\n      {transactions.length > 0 ? (\r\n        <List sx={{ p: 0 }}>\r\n          {transactions.map((transaction, index) => (\r\n            <React.Fragment key={transaction._id}>\r\n              <ListItem\r\n                alignItems=\"flex-start\"\r\n                sx={{ \r\n                  px: 3, \r\n                  py: 2,\r\n                  transition: 'background-color 0.2s',\r\n                  '&:hover': {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.02)'\r\n                  }\r\n                }}\r\n              >\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: transaction.type === 'revenue' ? 'success.light' : 'error.light',\r\n                      color: transaction.type === 'revenue' ? 'success.main' : 'error.main'\r\n                    }}\r\n                  >\r\n                    {transaction.type === 'revenue' ? <TrendingUpIcon /> : <TrendingDownIcon />}\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                      <Typography variant=\"body1\" sx={{ fontWeight: 500, mr: 1, flex: 1 }}>\r\n                        {transaction.description}\r\n                      </Typography>\r\n                      <Typography \r\n                        variant=\"body1\" \r\n                        sx={{ \r\n                          fontWeight: 600, \r\n                          color: transaction.type === 'revenue' ? 'success.main' : 'error.main'\r\n                        }}\r\n                      >\r\n                        {transaction.type === 'revenue' \r\n                          ? formatCurrency(transaction.amount) \r\n                          : `-${formatCurrency(transaction.amount)}`}\r\n                      </Typography>\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <Box sx={{ display: 'flex', mt: 0.5, alignItems: 'center' }}>\r\n                      <Chip\r\n                        label={transaction.category}\r\n                        size=\"small\"\r\n                        sx={{ \r\n                          mr: 1, \r\n                          height: 20, \r\n                          fontSize: '0.7rem', \r\n                          fontWeight: 500,\r\n                          bgcolor: transaction.type === 'revenue' ? 'success.light' : 'error.light',\r\n                          color: transaction.type === 'revenue' ? 'success.dark' : 'error.dark',\r\n                          '& .MuiChip-label': { px: 1 }\r\n                        }}\r\n                      />\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <CalendarIcon sx={{ fontSize: '0.875rem', mr: 0.5, color: 'text.secondary' }} />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {formatDate(transaction.date)}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              {index < transactions.length - 1 && <Divider />}\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <Box sx={{ \r\n          p: 3, \r\n          display: 'flex', \r\n          flexDirection: 'column', \r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          height: isMobile ? 150 : 200,\r\n          bgcolor: 'rgba(0,0,0,0.02)',\r\n          borderRadius: 2,\r\n          m: 2\r\n        }}>\r\n          <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n            No recent transactions\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 1 }}>\r\n            Transactions will appear here as you add them\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RecentTransactions; ","import React, { useContext, useState, useEffect } from 'react';\r\nimport { \r\n  Grid,  \r\n  Typography, \r\n  Box, \r\n  CircularProgress, \r\n  useMediaQuery, \r\n  Card, \r\n  CardContent, \r\n  Divider, \r\n  IconButton,\r\n  Tooltip,\r\n  Stack\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n  DateRange as DateRangeIcon,\r\n  ArrowUpward as ArrowUpwardIcon,\r\n  ArrowDownward as ArrowDownwardIcon,\r\n  Refresh as RefreshIcon\r\n} from '@mui/icons-material';\r\nimport { FinancialContext } from '../../context/FinancialContext';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend } from 'recharts';\r\nimport FinanceSummary from '../../components/FinanceSummary';\r\nimport RecentTransactions from '../../components/RecentTransactions';\r\n\r\nconst Dashboard = () => {\r\n  const { \r\n    financialSummary, \r\n    revenues, \r\n    expenses, \r\n    loading, \r\n    expensesLoading, \r\n    revenuesLoading,\r\n    refreshData,\r\n    loadFinancialSummary\r\n  } = useContext(FinancialContext);\r\n  \r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  // Refresh data when dashboard is loaded, but only if needed\r\n  useEffect(() => {\r\n    // Track component mount state\r\n    let isMounted = true;\r\n    console.log('Dashboard component mounted');\r\n    \r\n    const refreshDashboardData = async () => {\r\n      // Skip if already refreshing\r\n      if (refreshing) {\r\n        console.log('Already refreshing data, skipping');\r\n        return;\r\n      }\r\n      \r\n      // Skip if financial summary is already loaded\r\n      if (financialSummary.dataLoaded) {\r\n        console.log('Financial summary already loaded, skipping refresh');\r\n        return;\r\n      }\r\n      \r\n      console.log('Refreshing financial data');\r\n      setRefreshing(true);\r\n      \r\n      try {\r\n        // Refresh financial summary to ensure dashboard shows latest data\r\n        await loadFinancialSummary();\r\n        if (isMounted) {\r\n          console.log('Financial summary refreshed on dashboard mount');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error refreshing dashboard data:', error);\r\n      } finally {\r\n        if (isMounted) {\r\n          setRefreshing(false);\r\n        }\r\n      }\r\n    };\r\n    \r\n    refreshDashboardData();\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [loadFinancialSummary, refreshing, financialSummary.dataLoaded]);\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    try {\r\n      await refreshData();\r\n    } catch (error) {\r\n      console.error(\"Error refreshing dashboard data:\", error);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  // Prepare data for charts\r\n  const pieData = [\r\n    { name: 'Revenue', value: financialSummary.totalRevenue || 0 },\r\n    { name: 'Expenses', value: financialSummary.totalExpenses || 0 }\r\n  ];\r\n\r\n  // Get month names for line chart\r\n  const getMonthData = () => {\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const currentMonth = new Date().getMonth();\r\n    const last6Months = [];\r\n    \r\n    for (let i = 5; i >= 0; i--) {\r\n      const monthIndex = (currentMonth - i + 12) % 12;\r\n      last6Months.push(monthNames[monthIndex]);\r\n    }\r\n    \r\n    // Combine month names with revenue and expense data\r\n    return last6Months.map(month => {\r\n      const revenuesInMonth = revenues.filter(rev => {\r\n        const revDate = new Date(rev.date);\r\n        const revMonth = revDate.getMonth();\r\n        const monthIndex = monthNames.indexOf(month);\r\n        return revMonth === monthIndex;\r\n      });\r\n      \r\n      const expensesInMonth = expenses.filter(exp => {\r\n        const expDate = new Date(exp.date);\r\n        const expMonth = expDate.getMonth();\r\n        const monthIndex = monthNames.indexOf(month);\r\n        return expMonth === monthIndex;\r\n      });\r\n      \r\n      const totalRevenue = revenuesInMonth.reduce((sum, rev) => sum + rev.amount, 0);\r\n      const totalExpense = expensesInMonth.reduce((sum, exp) => sum + exp.amount, 0);\r\n      \r\n      return {\r\n        name: month,\r\n        revenue: totalRevenue,\r\n        expense: totalExpense,\r\n        profit: totalRevenue - totalExpense\r\n      };\r\n    });\r\n  };\r\n  \r\n  const lineChartData = getMonthData();\r\n\r\n  // Calculate profit percentage change\r\n  const calculateGrowth = () => {\r\n    if (lineChartData.length < 2) return 0;\r\n    \r\n    const currentMonth = lineChartData[lineChartData.length - 1].profit;\r\n    const previousMonth = lineChartData[lineChartData.length - 2].profit;\r\n    \r\n    if (previousMonth === 0) return currentMonth > 0 ? 100 : 0;\r\n    \r\n    return ((currentMonth - previousMonth) / Math.abs(previousMonth)) * 100;\r\n  };\r\n  \r\n  const profitGrowth = calculateGrowth();\r\n  const isPositiveGrowth = profitGrowth >= 0;\r\n\r\n  // Format currency function\r\n  const formatCurrency = (amount) => {\r\n    return new Intl.NumberFormat('en-MY', {\r\n      style: 'currency',\r\n      currency: 'MYR',\r\n      minimumFractionDigits: 2\r\n    }).format(amount);\r\n  };\r\n\r\n  // Show loading indicator while data is loading from context\r\n  if (loading || expensesLoading || revenuesLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress size={60} thickness={4} sx={{ mb: 2 }} />\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Loading Dashboard Data...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, p: isMobile ? 1 : 3 }}>\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center', \r\n        mb: 4,\r\n        px: isMobile ? 1 : 0\r\n      }}>\r\n        <Typography \r\n          variant={isMobile ? 'h5' : 'h4'} \r\n          component=\"h1\" \r\n          sx={{ \r\n            fontWeight: 700, \r\n            fontSize: isMobile ? '1.5rem' : '2.125rem',\r\n            background: 'linear-gradient(45deg, #007AFF, #5AC8FA)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n          }}\r\n        >\r\n          Dashboard\r\n        </Typography>\r\n        <Tooltip title=\"Refresh data\">\r\n          <IconButton \r\n            onClick={handleRefresh} \r\n            disabled={refreshing}\r\n            sx={{ \r\n              background: 'rgba(0, 122, 255, 0.1)',\r\n              '&:hover': {\r\n                background: 'rgba(0, 122, 255, 0.2)',\r\n              }\r\n            }}\r\n          >\r\n            <RefreshIcon \r\n              sx={{ \r\n                animation: refreshing ? 'spin 1s linear infinite' : 'none',\r\n                '@keyframes spin': {\r\n                  '0%': {\r\n                    transform: 'rotate(0deg)',\r\n                  },\r\n                  '100%': {\r\n                    transform: 'rotate(360deg)',\r\n                  },\r\n                },\r\n              }} \r\n            />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n\r\n      <Grid container spacing={isMobile ? 2 : 3}>\r\n        {/* Financial Summary */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent sx={{ p: 0 }}>\r\n              <Box sx={{ p: 3, pb: 1 }}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  component=\"h2\" \r\n                  sx={{ \r\n                    fontWeight: 600, \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    mb: 3,\r\n                    fontSize: isMobile ? '1rem' : '1.25rem'\r\n                  }}\r\n                >\r\n                  <DateRangeIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\r\n                  Financial Summary\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n              <FinanceSummary isMobile={isMobile} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Profit Trend */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ \r\n                display: 'flex', \r\n                justifyContent: 'space-between', \r\n                alignItems: 'center', \r\n                mb: 2 \r\n              }}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  component=\"h2\" \r\n                  sx={{ \r\n                    fontWeight: 600, \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    fontSize: isMobile ? '1rem' : '1.25rem'\r\n                  }}\r\n                >\r\n                  {isPositiveGrowth ? (\r\n                    <TrendingUpIcon sx={{ mr: 1, color: '#34C759' }} />\r\n                  ) : (\r\n                    <TrendingDownIcon sx={{ mr: 1, color: '#FF3B30' }} />\r\n                  )}\r\n                  Profit Trend\r\n                </Typography>\r\n                <Box \r\n                  sx={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center',\r\n                    px: 1.5,\r\n                    py: 0.5,\r\n                    borderRadius: 5,\r\n                    backgroundColor: isPositiveGrowth ? 'rgba(52, 199, 89, 0.1)' : 'rgba(255, 59, 48, 0.1)',\r\n                    color: isPositiveGrowth ? '#34C759' : '#FF3B30',\r\n                  }}\r\n                >\r\n                  {isPositiveGrowth ? (\r\n                    <ArrowUpwardIcon sx={{ fontSize: '0.875rem', mr: 0.5 }} />\r\n                  ) : (\r\n                    <ArrowDownwardIcon sx={{ fontSize: '0.875rem', mr: 0.5 }} />\r\n                  )}\r\n                  <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                    {Math.abs(profitGrowth).toFixed(1)}%\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Box sx={{ height: 250, mt: 3 }}>\r\n                {revenues.length > 0 || expenses.length > 0 ? (\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                      data={lineChartData}\r\n                      margin={{\r\n                        top: 5,\r\n                        right: 20,\r\n                        left: 0,\r\n                        bottom: 5,\r\n                      }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(0,0,0,0.05)\" />\r\n                      <XAxis \r\n                        dataKey=\"name\"\r\n                        tick={{ fontSize: 12 }}\r\n                        tickLine={false}\r\n                        axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n                      />\r\n                      <YAxis \r\n                        tickFormatter={(value) => `RM${value}`} \r\n                        tick={{ fontSize: 12 }}\r\n                        tickLine={false}\r\n                        axisLine={{ stroke: 'rgba(0,0,0,0.1)' }}\r\n                      />\r\n                      <RechartsTooltip \r\n                        formatter={(value) => formatCurrency(value)}\r\n                        labelStyle={{ fontWeight: 'bold' }}\r\n                        contentStyle={{ \r\n                          borderRadius: 8, \r\n                          border: 'none', \r\n                          boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\r\n                          padding: '8px 12px'\r\n                        }}\r\n                      />\r\n                      <Legend wrapperStyle={{ fontSize: 12, paddingTop: 10 }} />\r\n                      <Line \r\n                        type=\"monotone\" \r\n                        dataKey=\"revenue\" \r\n                        stroke=\"#34C759\" \r\n                        strokeWidth={2}\r\n                        dot={{ stroke: '#34C759', strokeWidth: 2, r: 4, fill: 'white' }}\r\n                        activeDot={{ r: 6, stroke: '#34C759', strokeWidth: 2, fill: 'white' }}\r\n                      />\r\n                      <Line \r\n                        type=\"monotone\" \r\n                        dataKey=\"expense\" \r\n                        stroke=\"#FF3B30\" \r\n                        strokeWidth={2}\r\n                        dot={{ stroke: '#FF3B30', strokeWidth: 2, r: 4, fill: 'white' }}\r\n                        activeDot={{ r: 6, stroke: '#FF3B30', strokeWidth: 2, fill: 'white' }}\r\n                      />\r\n                      <Line \r\n                        type=\"monotone\" \r\n                        dataKey=\"profit\" \r\n                        stroke=\"#007AFF\" \r\n                        strokeWidth={2.5}\r\n                        dot={{ stroke: '#007AFF', strokeWidth: 2, r: 4, fill: 'white' }}\r\n                        activeDot={{ r: 6, stroke: '#007AFF', strokeWidth: 2, fill: 'white' }}\r\n                      />\r\n                    </LineChart>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <Box sx={{ \r\n                    height: '100%', \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'center',\r\n                    flexDirection: 'column',\r\n                    p: 3,\r\n                    backgroundColor: 'rgba(0,0,0,0.02)',\r\n                    borderRadius: 2\r\n                  }}>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                      No transaction data available\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 1 }}>\r\n                      Add revenues and expenses to see your financial trend\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Revenue & Expense Distribution */}\r\n        <Grid item xs={12} md={5}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Typography \r\n                variant=\"h6\" \r\n                component=\"h2\" \r\n                sx={{ \r\n                  fontWeight: 600, \r\n                  mb: 3,\r\n                  fontSize: isMobile ? '1rem' : '1.25rem'\r\n                }}\r\n              >\r\n                Revenue & Expense Distribution\r\n              </Typography>\r\n              \r\n              <Box sx={{ height: 250, display: 'flex', justifyContent: 'center' }}>\r\n                {(financialSummary.totalRevenue > 0 || financialSummary.totalExpenses > 0) ? (\r\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={pieData}\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        labelLine={false}\r\n                        outerRadius={80}\r\n                        fill=\"#8884d8\"\r\n                        dataKey=\"value\"\r\n                        label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                      >\r\n                        {pieData.map((entry, index) => (\r\n                          <Cell key={`cell-${index}`} fill={index === 0 ? '#34C759' : '#FF3B30'} />\r\n                        ))}\r\n                      </Pie>\r\n                      <RechartsTooltip \r\n                        formatter={(value) => formatCurrency(value)}\r\n                        contentStyle={{ \r\n                          borderRadius: 8, \r\n                          border: 'none', \r\n                          boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\r\n                          padding: '8px 12px'\r\n                        }}\r\n                      />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <Box sx={{ \r\n                    width: '100%', \r\n                    height: '100%',\r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'center',\r\n                    p: 3,\r\n                    backgroundColor: 'rgba(0,0,0,0.02)',\r\n                    borderRadius: 2\r\n                  }}>\r\n                    <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                      No data available for distribution chart\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              \r\n              <Box sx={{ mt: 2 }}>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                  <Box sx={{ flex: 1 }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Total Revenue\r\n                    </Typography>\r\n                    <Typography \r\n                      variant=\"h6\" \r\n                      sx={{ \r\n                        color: '#34C759',\r\n                        fontWeight: 600\r\n                      }}\r\n                    >\r\n                      {formatCurrency(financialSummary.totalRevenue || 0)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{ flex: 1 }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Total Expenses\r\n                    </Typography>\r\n                    <Typography \r\n                      variant=\"h6\" \r\n                      sx={{ \r\n                        color: '#FF3B30',\r\n                        fontWeight: 600\r\n                      }}\r\n                    >\r\n                      {formatCurrency(financialSummary.totalExpenses || 0)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Recent Transactions */}\r\n        <Grid item xs={12} md={7}>\r\n          <Card \r\n            elevation={0}\r\n            className=\"ios-shadow\"\r\n            sx={{ \r\n              borderRadius: 4,\r\n              height: '100%',\r\n              overflow: 'hidden',\r\n              background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,1) 100%)',\r\n              backdropFilter: 'blur(20px)',\r\n            }}\r\n          >\r\n            <CardContent sx={{ p: 0 }}>\r\n              <Box sx={{ p: 3, pb: 1 }}>\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  component=\"h2\" \r\n                  sx={{ \r\n                    fontWeight: 600,\r\n                    fontSize: isMobile ? '1rem' : '1.25rem'\r\n                  }}\r\n                >\r\n                  Recent Transactions\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n              <RecentTransactions isMobile={isMobile} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"names":["_ref","isMobile","financialSummary","useContext","FinancialContext","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","summaryItems","title","value","totalRevenue","icon","_jsx","MonetizationOnIcon","color","totalExpenses","ShoppingCartIcon","TrendingUpIcon","totalAssets","AccountBalanceIcon","Box","sx","p","pt","children","Grid","container","spacing","map","item","index","_jsxs","xs","sm","display","alignItems","mb","Avatar","bgcolor","mr","Typography","variant","fontWeight","length","Divider","opacity","revenues","expenses","formatDate","dateString","Date","error","transactions","r","type","e","sort","a","b","date","slice","List","transaction","React","ListItem","px","py","transition","backgroundColor","ListItemAvatar","TrendingDownIcon","ListItemText","primary","justifyContent","flex","description","secondary","mt","Chip","label","category","size","height","fontSize","CalendarIcon","_id","flexDirection","borderRadius","m","align","Dashboard","loading","expensesLoading","revenuesLoading","refreshData","loadFinancialSummary","refreshing","setRefreshing","useState","theme","useTheme","useMediaQuery","breakpoints","down","useEffect","isMounted","console","log","async","dataLoaded","refreshDashboardData","pieData","name","lineChartData","getMonthData","monthNames","currentMonth","getMonth","last6Months","i","monthIndex","push","month","revenuesInMonth","filter","rev","indexOf","expensesInMonth","exp","reduce","sum","totalExpense","revenue","expense","profit","profitGrowth","calculateGrowth","previousMonth","Math","abs","isPositiveGrowth","CircularProgress","thickness","flexGrow","component","background","WebkitBackgroundClip","WebkitTextFillColor","Tooltip","IconButton","onClick","disabled","RefreshIcon","animation","transform","md","Card","elevation","className","overflow","backdropFilter","CardContent","pb","DateRangeIcon","palette","main","FinanceSummary","ArrowUpwardIcon","ArrowDownwardIcon","toFixed","ResponsiveContainer","width","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","tick","tickLine","axisLine","YAxis","tickFormatter","RechartsTooltip","formatter","labelStyle","contentStyle","border","boxShadow","padding","Legend","wrapperStyle","paddingTop","Line","strokeWidth","dot","fill","activeDot","PieChart","Pie","cx","cy","labelLine","outerRadius","percent","entry","Cell","Stack","direction","RecentTransactions"],"sourceRoot":""}